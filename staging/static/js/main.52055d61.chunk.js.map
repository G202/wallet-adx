{"version":3,"sources":["lib/ledgerWebHID.js","lib/fetch.js","consts/accountPresets.js","components/common/AddressBook/AddressList/AddressList.js","components/common/AddressBook/AddressBook.js","lib/address.js","components/common/AddressWarning/AddressWarning.js","components/common/Button/Button.js","components/common/Chart/Chart.js","components/common/Checkbox/Checkbox.js","hooks/onClickOutside.js","components/common/DropDown/DropDown.js","components/common/Loading/Loading.js","components/common/Loading/AmbireLoading.js","components/common/Loading/Skeleton.js","components/ToastProvider/ToastProvider.js","hooks/toasts.js","consts/networks.js","config/index.js","consts/supportedProtocols.js","lib/humanizers/UniRouters.js","lib/humanizers/ERC20.js","lib/humanizers/AaveLendingPoolV2.js","lib/humanizers/ERC721.js","lib/humanizers/WETH.js","consts/privilegesOptions.js","lib/humanizers/AmbireIdentity.js","lib/humanizers/AmbireFactory.js","lib/humanizers/YearnTesseractVault.js","lib/humanizers/Movr.js","lib/humanizers/WALLETSupplyController.js","lib/humanizers/AmbireBatcher.js","lib/humanizers/index.js","lib/humanReadableTransactions.js","lib/provider.js","lib/balanceOracle.js","hooks/portfolio.js","lib/isFirefox.js","hooks/walletconnect.js","hooks/relayerData.js","hooks/addressBook.js","hooks/attentionGrabber.js","components/ModalProvider/ModalProvider.js","hooks/modals.js","hooks/permissions.js","hooks/useStorage.ts","hooks/useLocalStorage.js","components/common/Modal/Modal.js","components/common/Radios/Radios.js","components/common/Segments/Segments.js","components/common/Select/Select.js","components/common/TextInput/TextInput.js","components/common/NumberInput/NumberInput.js","components/common/PasswordInput/PasswordInput.js","components/common/Toggle/Toggle.js","components/common/ToolTip/ToolTip.js","components/common/NoFundsPlaceholder/NoFundsPlaceholder.js","components/common/CountdownTimer/CountdownTimer.js","components/LoginOrSignupForm/LoginOrSignupForm.js","components/EmailLogin/EmailLogin.js","lib/permissions.js","components/Modals/PermissionsModal/PermissionsModal.js","components/Modals/InputModal/InputModal.js","components/Modals/SelectSignerAccountModal/SelectSignerAccountModal.js","lib/recoveryBundle.js","components/Modals/ResetPasswordModal/ResetPasswordModal.js","components/Modals/WalletTokenModal/WalletTokenModal.js","components/Modals/AddTokenModal/AddTokenModal.js","components/Modals/UnsupportedDAppsModal/UnsupportedDAppsModal.js","lib/validations/importedAccountValidations.js","components/AddAccount/AddAccount.js","components/Wallet/Dashboard/Balances/Balances.js","components/Wallet/Dashboard/Protocols/ProtocolsPlaceholder/ProtocolsPlaceholder.js","components/Wallet/Dashboard/Protocols/Protocols.js","components/Wallet/Dashboard/Collectibles/CollectiblesPlaceholder/CollectiblesPlaceholder.js","components/Wallet/Dashboard/Collectibles/Collectibles.js","components/Wallet/Dashboard/Dashboard.js","components/Wallet/TopBar/Accounts/Accounts.js","components/Wallet/TopBar/DApps/DApps.js","components/Wallet/TopBar/Links/Links.js","components/Wallet/TopBar/Rewards/Rewards.js","components/Wallet/TopBar/TopBar.js","components/Wallet/SideBar/SideBar.js","resources/ramp.svg","resources/paytrie.svg","resources/transak.svg","components/Wallet/Deposit/Providers/useProviders.js","lib/popupHelper.js","components/Wallet/Deposit/Providers/Providers.js","components/Wallet/Deposit/Deposit.js","components/Plugins/GnosisSafeApps/GnosisSafeAppIframe.js","components/Wallet/Swap/SushiIframe.js","components/Wallet/Swap/Swap.js","lib/validations/formValidations.js","components/Wallet/Transfer/Addresses/Addresses.js","components/Wallet/Transfer/Transfer.js","consts/AAVELendingPoolAbi.js","consts/AAVELendingPoolProviders.js","resources/aave.svg","components/Wallet/Earn/Card/Card.js","components/Wallet/Earn/Cards/AAVECard/defaultTokens.js","lib/approveToken.js","components/Wallet/Earn/Cards/AAVECard/AAVECard.js","consts/YearnTesseractVaultABI.js","resources/yearn.svg","components/Wallet/Earn/Cards/YearnTesseractCard/useYearn.js","resources/tesseract.svg","components/Wallet/Earn/Cards/YearnTesseractCard/useTesseract.js","components/Wallet/Earn/Cards/YearnTesseractCard/YearnTesseractCard.js","components/Wallet/Earn/Earn.js","components/Wallet/Security/AddAuthSigner/AddAuthSigner.js","components/Modals/OtpTwoFAModal/OtpTwoFAModal.js","components/Modals/OtpTwoFADisableModal/OtpTwoFADisableModal.js","components/Wallet/Security/Backup/Backup.js","components/Wallet/Security/PendingRecoveryNotice/PendingRecoveryNotice.js","components/Wallet/Security/Security.js","components/common/TxnPreview/TxnPreview.js","lib/requestToBundleTxn.js","components/Wallet/Transactions/Transactions.js","components/Plugins/GnosisSafeApps/GnosisSafeApps.js","consts/ERC721Abi.js","components/Wallet/Collectible/Collectible.js","components/Wallet/CrossChain/useMovr.js","components/Wallet/CrossChain/Quotes/Quotes.js","components/Wallet/CrossChain/History/movrTxParser.js","components/Wallet/CrossChain/History/History.js","components/Wallet/CrossChain/CrossChain.js","consts/unsupportedDApps.js","components/Wallet/Wallet.js","lib/getWallet.js","components/SendTransaction/helpers.js","components/SendTransaction/FeeSelector.js","components/SendTransaction/Actions.js","components/SendTransaction/noRelayer.js","components/SendTransaction/SendTransaction.js","components/SignMessage/SignMessage.js","lib/GnosisConnector.js","resources/icon.png","hooks/notifications.js","hooks/oneTimeQueryParam.js","App.js","hooks/accounts.js","hooks/network.js","hooks/useGnosisSafe.js","hooks/privateMode.js","reportWebVitals.js","index.js"],"names":["ethUtil","require","HDNode","connectedDevices","PARENT_HD_PATH","getTransport","a","TransportWebHID","list","length","opened","request","Error","ledgerGetAddresses","returnData","error","addresses","catch","err","transport","getAccounts","accountsData","close","accounts","map","address","parentKeyDerivationPath","getAddressInternal","then","o","statusCode","message","ledgerResponse","console","log","hdKey","publicKey","Buffer","from","chainCode","mainAddress","addressOfHDKey","initialDerivedKeyInfo","derivationPath","baseDerivationPath","calculateDerivedHDKeyInfos","appEth","AppEth","ledgerTimeout","Promise","resolve","reject","timeoutHandle","setTimeout","race","getAddress","res","clearTimeout","ledgerSignTransaction","txn","chainId","fromAddr","unsignedTxObj","gasLimit","gas","serializedUnsigned","serialize","toLowerCase","signTransaction","substr","rsvResponse","intV","parseInt","v","Math","floor","serializedSigned","r","s","ledgerSignMessage","hash","signerAddress","account","signPersonalMessage","rsvReply","signedMsg","toString","count","derivedKeys","i","fullDerivationPath","path","derive","derivedKey","baseDerivationPathh","push","derivedPublicKey","ethereumAddressUnprefixed","publicToAddress","addHexPrefix","fetch","fetchPost","url","body","headers","method","JSON","stringify","json","fetchGet","response","status","fetchCaught","params","resp","errMsg","accountPresets","salt","identityFactoryAddr","baseIdentityAddr","quickAccManager","feeCollector","quickAccTimelock","encryptionOpts","scrypt","N","AddressList","noAccounts","onSelectAddress","removeAddress","items","filter","isAccount","className","icon","name","onClick","style","backgroundImage","AddressBook","addAddress","newAddress","onClose","useState","setAddress","setName","isOpen","setOpenMenu","openAddAddress","setOpenAddAddress","isAddAddressFormValid","test","onAddAddress","useCallback","onDropDownChange","state","useEffect","title","open","onChange","id","autoComplete","placeholder","value","onInput","clear","small","disabled","isValidAddress","isKnownTokenOrContract","addressToLowerCase","tokensAddresses","Object","keys","tokens","contractsAddresses","names","includes","AddressWarning","onAddNewAddress","isKnownAddress","confirmed","setConfirmed","unknownWarning","useMemo","smartContractWarning","label","checked","target","Button","children","mini","iconAfter","red","danger","border","type","args","apply","Chart","data","size","hoveredItem","setHoveredItem","colors","height","width","onMouseEnter","item","sort","b","sortData","startAngle","strokeColor","innerRadius","selectedOffset","legend","toggled","maxHeight","backgroundColor","index","trunc","parseFloat","toFixed","Checkbox","forwardRef","props","ref","inputElem","required","useOnClickOutside","handler","listener","event","current","contains","document","addEventListener","removeEventListener","DropDown","badge","closeOnClick","onOpen","useRef","transitionRef","isMenuOpen","setMenuOpen","CSSTransition","unmountOnExit","in","timeout","classNames","nodeRef","Loading","AmbireLoading","Skeleton","ToastContext","React","createContext","ToastProvider","history","useHistory","toasts","setToasts","removeToast","t","addToast","content","options","toast","createRef","position","sticky","route","updateToastsPositions","forEach","toastElement","bottomToasts","element","find","getComputedStyle","marginBottom","x","clientWidth","y","offsetHeight","reduce","acc","curr","transform","onResize","window","Provider","TransitionGroup","onToastClick","useToasts","useContext","networks","rpc","nativeAssetSymbol","explorerUrl","ZAPPER_API_KEY","process","VELCRO_API_ENDPOINT","suportedProtocols","network","protocols","balancesProvider","nftsProvider","iface","Interface","abis","UniV2Router","recipientText","recipient","txnFrom","extended","deadlineText","deadlineSecs","mined","minute","diff","Date","now","toExtended","fromToken","toToken","expires","atLeast","upTo","uniV2Mapping","getSighash","opts","parseTransaction","amountIn","amountOutMin","to","deadline","outputAsset","token","amountOut","amountInMax","nativeToken","tokenA","tokenB","amountADesired","amountBDesired","amountTokenDesired","amountAMin","amountBMin","amountTokenMin","amountETHMin","ifaceV3","UniV3Router","parsePath","pathBytes","uniV3Mapping","parsed","sigHash","slice","humanizer","flat","tokenIn","tokenOut","amountOutMinimum","amountInMaximum","amountMin","ifaceV32","UniV3Router2","uniV32Mapping","calls","concat","toNumber","mapping","ERC20","ERC20Mapping","approvedAddress","amount","getName","tokenName","eq","constants","MaxUint256","AaveLendingPoolV2","onBehalfText","onBehalf","action","word","AaveMapping","asset","ERC721","fromText","tokenId","ERC721Mapping","WETH","WETHMapping","privilegesOptions","true","false","IdentityMapping","addr","privLevel","isQuickAccManager","FactoryMapping","code","generateAddress2","hexConcat","YearnVault","vaultNames","ethereum","polygon","tokenPrefixes","addTokenPrefix","split","join","getVaultInfo","yearnVaults","tesseractVaults","toExtendedRich","vaultInfo","baseToken","symbol","YearnTesseractMapping","MovrAnyswapInterface","MovrAnyswap","MovrRouterInterface","MovrRouter","getNetwork","n","Number","MovrMapping","middlewareInputToken","tokenToBridge","toChainId","middlewareRequest","bridgeRequest","inputToken","outputToken","formatNativeTokenAddress","WALLETSupplyControllerABI","isExtended","WALLETSupplyControllerMapping","Batcher","AmbireBatcher","txns","humanizers","all","UniRouters","AmbireIdentity","AmbireFactory","YearnTesseractVault","Movr","WALLETSupplyController","knownAliases","knownTokens","repeat","getTransactionSummary","networkId","accountAddr","callSummary","sendSummary","tokenInfo","actions","e","filteredSummary","assetInfo","extendedToken","decimals","formatUnits","extendedNativeToken","setKnownAddresses","addrs","isKnown","providersByNetwork","getProvider","startsWith","providers","WebSocketProvider","StaticJsonRpcProvider","ethers","utils","AbiCoder","isAddress","hexlify","RemainingBalancesOracle","oracle","SPOOFER","blockTag","remainingBalancesOracleAddr","getTokenListBalance","walletAddr","updateBalance","call","result","success","newBalance","newTokenBalance","balance","price","balanceRaw","updateAt","balanceUSD","tokenImageUrl","provider","coder","txParams","encodeFunctionData","isErr","callResult","balances","decode","ERROR_SIG","PANIC_SIG","hex","checkTokenList","hidden","visibilityChange","getBalances","apiKey","protocol","msHidden","webkitHidden","lastOtherProcolsRefresh","paginateArray","input","limit","pages","ceil","supplementTokensDataFromNetwork","tokensData","extraTokens","fullTokenList","Set","tokenList","td","tokensNotInList","some","callTokens","tokenBalances","et","usePortfolio","currentNetwork","useStorage","currentAccount","isBalanceLoading","setBalanceLoading","areProtocolsLoading","setProtocolsLoading","tokensByNetworks","setTokensByNetworks","otherProtocolsByNetworks","setOtherProtocolsByNetworks","total","full","truncated","setBalance","otherBalances","setOtherBalances","setTokens","setProtocols","collectibles","setCollectibles","key","defaultValue","setExtraTokens","getExtraTokensAssets","extra","extraToken","isExtraToken","fetchSupplementTokenData","updatedTokens","currentNetworkTokens","meta","assets","extraTokensAssets","rcpTokenData","fetchTokens","supportedProtocols","failedRequests","requestsCount","values","products","updatedNetworks","fetchOtherProtocols","updatedProtocols","protocolsByNetworks","refreshTokensIfVisible","requestOtherProtocolsRefresh","updateHumanizerData","tokensList","setKnownTokens","loadBalance","loadProtocols","balanceByNetworks","toLocaleString","otherProtocols","refreshInterval","setInterval","clearInterval","onAddExtraToken","updatedExtraTokens","coingeckoId","onRemoveExtraToken","isFirefox","navigator","userAgent","noop","noopSessionStorage","setSession","getSession","removeSession","SUPPORTED_METHODS","connectors","connectionErrors","checkIsOffline","uri","time","useWalletConnect","initialUri","allNetworks","setNetwork","stateRef","stateStorage","setStateStorage","useReducer","connections","session","isOffline","requests","batchRequest","newRequests","ix","isBatch","ids","dispatch","maybeUpdateSessions","updateConnections","connector","updateSession","connect","connectorOpts","WalletConnectCore","cryptoLib","sessionStorage","sessionStart","sessionTimeout","onError","peerMeta","suggestion","bridge","on","payload","rejectSession","approveSession","signPayload","parse","primaryType","domain","verifyingContract","functionSignature","supportedNetwork","approveRequest","rejectRequest","wcUri","notification","disconnect","killSession","wcConnect","clipboardError","tryReadClipboard","clipboard","readText","runInitEffects","resolveMany","resolution","endsWith","realId","lastIndexOf","useRelayerData","isLoading","setLoading","setData","setErr","prevUrl","updateData","resetDataTimer","stripQuery","unloaded","accountType","email","signerExtra","walletType","toIcon","seed","blockies","toDataURL","useAddressBook","storageAddresses","setStorageAddresses","addressList","Array","isArray","entry","setAddresses","updateAddresses","sha256","newAddresses","documentTitle","flashingTitleInterval","stickyIds","removeFlashingTitle","useAttentionGrabber","eligibleRequests","isSendTxnShowing","onSitckyClick","location","useLocation","removeStickyToasts","isRouteWallet","pathname","Notification","permission","showFlashingTitle","ModalContext","ModalProvider","modal","setModal","showModal","disableClose","hideModal","useModals","onPermissionChange","permissions","query","onchange","usePermissions","arePermissionsLoaded","setPermissionsLoaded","isClipboardGranted","setClipboardGranted","isNoticationsGranted","setNotificationsGranted","useLocalStorage","modalHidden","setModalHidden","checkForPermissions","clipboardState","notificationsState","setInitDefault","isStringStorage","setInit","storage","getItem","parsedItem","set","prevState","itemValue","setItem","removeItem","localStorage","Modal","buttons","isCloseBtnShown","topLeft","maxWidth","Radios","radios","currentValue","setCurrentValue","onSelect","Segments","segments","hidePrivateValue","setValue","setSegment","segment","Select","native","monospace","searchable","hiddenTextInput","setOpen","search","setSearch","selectedItem","setSelectedItem","filteredItems","selectItem","focus","ev","buttonLabel","onButtonClick","TextInput","pattern","minLength","maxLength","info","password","copy","writeText","NumberInput","precision","button","afterDecimals","PasswordInput","peakPassword","showPassword","setShowPassword","Toggle","defaultChecked","ToolTip","mousePosition","setMousePosition","onMouseMove","clientY","clientX","innerWidth","top","left","NoFundsPlaceholder","CountdownTimer","seconds","setTimeIsUp","counter","setCounter","timerFormatted","setTimerFormatted","isTimeIsUp","timer","minutes","color","LoginOrSignupForm","onAccRequest","inProgress","passConfirmInput","passphrase","passphraseConfirm","setState","onUpdate","updates","newState","invalid","setCustomValidity","isSignup","days","noBackupDisclaimer","additionalOnSignup","backupOptout","Link","href","rel","stopPropagation","additionalInputs","onSubmit","preventDefault","accType","display","EmailLogin","relayerURL","onAddAccount","requiresEmailConfFor","setRequiresConfFor","setInProgress","loginSessionKey","setLoginSessionKey","removeLoginSessionKey","attemptLogin","ignoreEmailConfirmationRequired","encodeURIComponent","authorization","errType","requestAuthResp","sessionKey","_id","identityInfo","bytecode","quickAccSigner","primaryKeyBackup","signer","select","onLoginUserAction","inner","checkPermissions","onPrompt","allowWithoutGesture","checkClipboardPermission","prompt","askForPermission","requestPermission","toastErrorMessage","PermissionsModal","relayerIdentityURL","isBackupOptout","isEmailConfirmed","setEmailConfirmed","isEmailResent","setEmailResent","isJsonBackupDownloaded","setIsJsonBackupDownloaded","resendTimeLeft","setResendTimeLeft","areBlockedPermissions","isAccountNotConfirmed","emailConfRequired","buttonDisabled","sendConfirmationEmail","checkEmailConfirmation","identity","emailConfirmed","isConfirmed","requestNotificationsPermission","requestClipboardPermission","emailConfirmationInterval","resendInterval","copiedAcc","cloudBackupOptout","fileName","fileType","blob","Blob","createElement","download","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","downloadFile","InputModal","inputs","isDisabled","setDisabled","inputsFields","isFormValid","validate","every","SelectSignerAccountModal","signersToChoose","onSignerAddressClicked","selectedNetwork","description","currentPage","setCurrentPage","val","idx","formatAddress","prevBtnDisabled","nextBtnDisabled","onAddressClicked","IDENTITY_INTERFACE","buildRecoveryBundle","newValues","abiCoder","timelock","one","two","newQuickAccHash","keccak256","encode","Bundle","recoveryMode","ResetPassword","showSendTxns","setType","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","passwordsMustMatchWarning","setPasswordsMustMatchWarning","passwordsLengthWarning","setPasswordsLengthWarning","checkboxes","changePassword","Wallet","fromEncryptedJson","wallet","encrypt","signMessage","sig","resetPassword","extraEntropy","random","performance","firstKeyWallet","createRandom","preRecovery","bundle","preRecoveryPrimaryKeyBackup","validateForm","arePasswordsMatching","areFieldsNotEmpty","isLengthValid","areCheckboxesChecked","modalButtons","autocomplete","multiplierBadges","multiplier","link","MultiplierBadges","rewards","badges","isUnlocked","multipliers","active","borderColor","supplyControllerAddress","supplyControllerInterface","WalletTokenModal","addRequest","supplyController","Contract","initialClaimableEntry","WALLETInitialClaimableRewards","initialClaimable","totalClaimable","vestingEntry","WALLETVestings","loading","claimed","mintableVesting","currentClaimStatus","setCurrentClaimStatus","toNum","end","rate","claimableNow","disabledReason","claimDisabledReason","claimEarlyRewards","totalClaimableBN","proof","claimVesting","start","ERC20Interface","ERC20ABI","AddTokenModal","portfolio","tokenDetails","setTokenDetails","showError","setShowError","tokenContract","balanceOf","tokenStandard","removeToken","UnsupportedDAppsModal","advancedModeList","onContinue","advancedMode","setAdvancedMode","icons","NUMBER_STRING_REGEX","NEEDED_KEYS","validateImportedAccountProps","validateAccountProps","isValidTimeLock","isValidSalt","hexDataLength","fileSizeValidator","file","AddAccount","setChooseSigners","addAccErr","setAddAccErr","wrapProgress","fn","wrapErr","createQuickAcc","req","secondKeySecret","mnemonic","phrase","secondKeyResp","quickAccountTuple","accHash","privileges","getProxyDeployBytecode","privSlot","identityAddr","undefined","createResp","isNew","createFromEOA","hexZeroPad","connectWeb3AndGetAccounts","web3Accs","onEOASelected","signerName","getAccountByAddr","idAddr","signerAddr","getOwnedByEOAs","eoas","allUniqueOwned","entries","connectTrezorAndGetAccounts","TrezorSubprovider","trezorConnectClientApi","TrezorConnect","getAccountsAsync","_initialDerivedKeyInfo","connectLedgerAndGetAccounts","connectLedgerAndGetAccountsU2F","connectLedgerAndGetAccountsWebHID","LedgerSubprovider","ledgerEthereumClientFactoryAsync","ledgerEthereumBrowserClientFactoryAsync","_initialDerivedKeyInfoAsync","addrData","transportProtocol","addAccount","owned","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","errors","readAsText","onload","readerEvent","fileContent","validatedFile","useDropzone","noClick","noKeyboard","accept","maxFiles","validator","getInputProps","addFromSignerButtons","manifest","appUrl","Balances","networkDetails","ProtocolsPlaceholder","onClickAddToken","src","alt","Protocols","failedImg","setFailedImg","sortedTokens","decreasing","localeCompare","shouldShowPlaceholder","tokenItem","img","send","draggable","failed","openAddTokenModal","category","CollectiblesPlaceholder","isPrivateMode","collectiblesLength","collectionName","collectionImg","image","Collectibles","assetName","assetImg","replace","chartSegments","tabSegments","Dashboard","selectedAccount","privateMode","tabId","useParams","chartTokensData","setChartTokensData","chartProtocolsData","setChartProtocolsData","chartType","setChartType","tab","setTab","useLayoutEffect","totalProtocols","protocolsData","hidePrivateContent","Accounts","selectedAddress","onSelectAcc","onRemoveAccount","logoutWarning","setLogoutWarning","closed","setClosed","shortenedAddress","isActive","copyAddress","onSelectAccount","DApps","checkPermission","readClipboard","isLegacyWC","Links","linksViewed","setLinksViewed","Rewards","rewardsData","setRewards","rewardsTotal","setRewardsTotal","showWalletTokenModal","rewardsDetails","fromEntries","TopBar","selectedAcc","togglePrivateMode","networksItems","accountIcon","cursor","SideBar","match","sidebarRef","balanceFontSize","setBalanceFontSize","resizeBalance","balanceFontSizes","charLength","closest","prev","abs","fontSize","activeClassName","useProviders","walletAddress","openRampNetwork","RampInstantSDK","hostAppName","hostLogoUrl","variant","swapAsset","avalanche","userAddress","hostApiKey","show","openPayTrie","rightSideLabel","w","h","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","documentElement","screen","innerHeight","clientHeight","systemZoom","availWidth","newWindow","popupCenter","format","openTransak","transak","transakSDK","environment","defaultCryptoCurrency","disableWalletAddressForm","themeColor","redirectURL","hostURL","origin","widgetHeight","widgetWidth","init","ALL_EVENTS","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","Providers","logo","RAMP_LOGO","fees","limits","currencies","PAYTRIE_LOGO","TRANSAK_LOGO","shouldBeDisabled","Deposit","qrCodeUrl","setQrCodeUrl","generateQRCode","QRCode","quality","margin","GnosisSafeAppIframe","selectedApp","gnosisConnect","gnosisDisconnect","setHash","iframeRef","app","onLoad","ambireSushi","desc","SushiSwap","Swap","validateAddress","validateSendTransferAddress","addressConfirmed","isValidAddr","Addresses","modalInputs","inputModal","unsupportedSWPlatforms","withRouter","addressBook","tokenAddressOrSymbol","tokenAddress","setAsset","setAmount","bigNumberHexAmount","setBigNumberHexAmount","setAddressConfirmed","sWAddressConfirmed","setSWAddressConfirmed","setNewAddress","messages","validationFormMgs","setValidationFormMgs","assetsItems","selectedAsset","maxAmount","showSWAddressWarning","onAmountChange","bigNumberAmount","parseUnits","toHexString","isValidRecipientAddress","isValidSendTransferAmount","parsedAmount","indexOf","gt","validateSendTransferAmount","amountLabel","AAVELendingPoolAbi","AAVELendingPoolProviders","Card","unavailable","tokensItems","details","onTokenSelect","onValidate","setToken","currentToken","getEquToken","sortedTokenItems","getMaxAmount","min","max","approveToken","scope","accountId","addRequestTxn","prefixId","allowance","lt","AAVELendingPool","RAY","lendingPoolAddress","AAVECard","setUnavailable","setTokensItems","setDetails","apr","defaultTokens","getDefaultTokensItems","getToken","extraGas","loadPool","providerAddress","lendingPoolProviderContract","getLendingPool","lendingPoolContract","getReservesList","reserves","reservesAddresses","reserve","withdrawTokens","depositTokens","allTokens","uniqueTokenAddresses","getReserveData","liquidityRate","tokensAPR","AAVE_ICON","YearnVaultABI","v2VaultsAddresses","fantom","customVaultMetadata","displayName","displayIcon","useYearn","getTokenFromPortfolio","loadVaults","yearn","Yearn","vaults","get","v2Vaults","metadata","apy","vaultAddress","net_apy","yToken","vault","selectedToken","YEARN_ICON","POLYGON_SCAN_IMAGES","VAULTS","useTesseract","setVaults","toTokensItems","tToken","portfolioToken","fetchVaultAPY","ticker","tesseractVaultContract","TesseractVaultABI","depositTokenItems","withdrawTokenItems","TESSERACT_ICON","BATCHER_ADDRESS","BATCHER_INTERFACE","AmbireBatcherABI","ERC20_INTERFACE","VaultInterface","YEARN_TESSERACT_VAULT_ABI","YearnTesseractCard","tesseract","transferTx","batchCallTxn","load","Earn","AddAuthSigner","setSignerAddress","modalToggle","setModalToggle","textInputInfo","setTextInputInfo","isAddressValid","validateAddAuthSignerAddress","onAddBtnClicked","OtpTwoFAModal","setCacheBreak","secret","authenticator","generateSecret","imageURL","setImageURL","receivedOtp","setReceivedOTP","showSecret","setShowSecret","emailConfirmCode","setEmailConfirmCode","setIsTimeIsUp","hexSecret","setHexSecret","toUtf8Bytes","otp","timestamp","getTime","generateQR","otpAuth","keyuri","sendEmail","toSign","confCodeRequired","verifyOTP","verify","signatureEthers","resetForm","OtpTwoFADisableModal","disableOTP","Backup","downloadedBackup","PendingRecoveryNotice","recoveryLock","isAlreadyInitiated","createRecoveryRequest","recoveryLockStatus","remainingTime","remaining","Security","cacheBreak","intvl","otpEnabled","craftTransaction","addTransactionToAddRequest","onMakeDefaultBtnClicked","isQuickAccount","showResetPasswordModal","handleEnableOtp","handleDisableOtp","getRootProps","isDragActive","isDragAccept","isDragReject","hasPendingReset","privList","addressName","isQuickAcc","privText","isSelected","canChangePassword","onRemoveBtnClicked","showLoading","signersFragment","newSignerAddress","getNetworkSymbol","TxnPreview","onDismiss","isFirstFailing","disableExpand","disableDismiss","disableDismissLabel","isExpanded","setExpanded","contractName","summary","canShowLink","parseExtendedSummaryItem","IdentityFactory","toBundleTxn","deploySalt","BundlePreview","date","lastTxnSummary","hasFeeMatch","RegExp","executed","errorMsg","submittedAt","toLocaleDateString","toLocaleTimeString","replacesTxId","txId","Transactions","executedTransactions","maxPages","defaultPage","page","setPage","bundlesList","firstPending","replaced","mapToBundle","relayerBundle","nonce","num","minFeeInUSDPerGas","feeInUSDPerGas","cancelByReplacing","paginationControls","cancel","dapps","GnosisSafeApps","setSelectedApp","dapp","ERC721Abi","handleUri","Collectible","collectionAddr","owner","collection","setMetadata","recipientAddress","setRecipientAddress","isTransferDisabled","setTransferDisabled","validateSendNftAddress","fetchMetadata","contract","ownerOf","tokenURI","maybeUri1","maybeUri2","jsonUrl","baseURL","useMovr","fetchChains","fetchFromTokens","fetchToTokens","fetchQuotes","fromAsset","fromChainId","toAsset","excludeBridges","checkApprovalAllowance","chainID","allowanceTarget","approvalBuildTx","sendBuildTx","output","routePath","checkTxStatus","transactionHash","formatAmount","pow","formatFeeAmount","fee","Quotes","fromTokensItems","quotes","onQuotesConfirmed","onCancel","fromNetwork","toNetwork","selectedRoute","setSelectedRoute","routes","middlewareRoute","bridgeRoute","middlewareFee","bridgeFee","middlewareInfo","bridgeInfo","inputAmount","outputAmount","sendTx","onConfirm","isApprovalRequired","tx","serviceTimeMinutes","serviceTime","getMinutes","txData","getAssetInfo","formattedAddress","getAssetIcon","formatTx","fromAssetIcon","toAssetIcon","movrTxParser","History","quotesConfirmed","txStatuses","setTxStatuses","getNetworkDetails","relayerTransactions","isRelayerLoading","txTransfers","outboundTransferTo","parseOutboundTransferTo","storedQuote","q","isPending","sourceTxStatus","destinationTxStatus","sourceTx","statusError","statuses","getStatuses","CrossChain","loadingFromTokens","setLoadingFromTokens","loadingToTokens","setLoadingToTokens","loadingQuotes","setLoadingQuotes","setFromTokenItems","setFromToken","chainsItems","setChainsItems","toChain","setToChain","toTokenItems","setToTokenItems","setToToken","setQuotes","portfolioTokens","setQuotesConfirmed","fromChain","formDisabled","hasNoFunds","getTokenFromPortofolio","loadChains","chains","isSupported","loadFromTokens","fromTokens","filteredFromTokens","uniqueFromTokenAddresses","loadToTokens","toTokens","filteredToTokens","tokenItems","getQuotes","flatAmount","fromTokenItem","equivalentToken","asyncLoad","setStateLoading","loadCallback","loaded","quoteRequest","updatedQuotesConfirmed","unsupportedDApps","walletContainer","isLoggedIn","setAdvancedModeList","component","LoggedInGuard","handlePermissionsModal","showCauseOfPermissions","showCauseOfEmail","showCauseOfBackupOptout","permissionsModal","scrollTimeout","scrollTo","behavior","unsupported","exact","wallets","getWallet","getWalletNew","providerTrezor","fromExtendedKey","xpub","getInitialDerivedKeyInfo","signPersonalMessageAsync","signTransactionAsync","Web3Provider","getSigner","isTokenEligible","speed","estimation","isStable","feeInUSD","feeInNative","getFeePaymentConsequences","addedGas","contractErrors","mapTxnErrMsg","msg","contractMsg","getErrHint","SPEEDS","FeeSelector","setEstimation","feeSpeed","setFeeSpeed","editCustomFee","setEditCustomFee","insufficientFee","selectedFeeToken","FailingTxn","tooltip","remainingFeeTokenBalances","currenciesItems","feeCurrencySelect","areSelectorsDisabled","setCustomFee","prevEstimation","customFee","feeAmountSelectors","selectFeeSpeed","nativeAssetPriceInUSD","Actions","approveTxn","rejectTxn","cancelSigning","signingStatus","quickAccCredentials","setQuickAccCredentials","form","rejectButton","signButtonLabel","isRecoveryMode","finalBundle","quickAcc","visibility","checkValidity","IdentityInterface","FactoryInterface","sendNoRelayer","getCode","getNonce","sign","signature","estimateGas","getTransactionCount","gasPrice","sendTransaction","signed","REJECT_MSG","getErrorMessage","SendTransaction","replacementBundle","onBroadcastedTxn","requestIds","makeBundle","SendTransactionWithBundle","setSigningStatus","currentBundle","unmounted","reestimate","estimate","replacing","estimateNoRelayer","getFinalBundle","feeToken","toHexAmount","amnt","round","feeTxn","approveTxnImpl","submit","approveTxnImplQuickAcc","pwd","alert","signatureTwo","accountAvatar","firstFailing","isDeployed","bundleResult","SignMessage","totalRequests","codeRequired","signingState","setSigningState","connection","dApp","isHexString","handleSigningErr","approveQuickAcc","confirmationCode","arrayify","confCode","signMsgHash","approve","getMessageAsText","readOnly","toUtf8String","_","GnosisConnector","_iframeRef","_app","this","handlers","isValidMessage","source","parent","sentFromIframe","knownMethod","Methods","canHandleMessage","Boolean","requestId","sdkVersion","getSDKVersion","MessageFormatter","makeErrorResponse","makeResponse","contentWindow","postMessage","handleIncomingMessage","validMessage","hasHandler","SUPPORTED_TYPES","currentNotifs","isLastTotalBalanceInit","lastTokensBalanceRaw","useNotifications","onShow","sentTxn","confirmSentTx","onShowRef","onClickNotif","showNotification","requireInteraction","AMBIRE_ICON","onclick","isSign","lastToken","isSignificantChange","amountRecieved","newBalanceRaw","BigNumber","sub","getAmountReceived","interval","txStatusInterval","getTransactionReceipt","hasOwnProperty","AppInner","initialAccounts","setAccounts","initialSelectedAcc","setSelectedAcc","selected","existing","existingIdx","clearedAccounts","useAccounts","defaultNetwork","setNetworkId","networkIdentifier","useNetwork","searchParam","urlSearchParams","URLSearchParams","oneTimeQueryParam","setOneTimeQueryParam","altParams","deleteOneTimeQueryParam","has","delete","useOneTimeQueryParam","wcRequests","wcResolveMany","verbose","uniqueId","initialRequests","setRequests","getSafeInfo","safeAddress","owners","threshold","rpcCall","callTx","getBalance","getBlockNumber","getBlockWithTransactions","getBlock","getTransaction","txs","handleSendTransactions","handlePersonalSign","sendTransactions","forwardId","prevRequests","getTxBySafeTxHash","safeTxHash","replyData","useGnosisSafe","gnosisRequests","gnosisResolveMany","internalRequests","setInternalRequests","reqs","setIsPrivateMode","usePrivateMode","showing","sendTxnState","setSendTxnState","everythingToSign","setSentTxn","txHash","outcome","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uYAMMA,EAAUC,EAAQ,KAClBC,EAASD,EAAQ,KAEnBE,EAAmB,KAEVC,EAAiB,e,SAEfC,I,2EAAf,sBAAAC,EAAA,sEAC2BC,IAAgBC,OAD3C,YACEL,EADF,QAEuBM,SAAUN,EAAiB,GAAGO,OAFrD,yCAGW,IAAIH,IAAgBJ,EAAiB,KAHhD,iCAMmBI,IAAgBI,UANnC,iFAQY,IAAIC,MAAM,mCARtB,2D,sBAcO,SAAeC,IAAtB,+B,4CAAO,gCAAAP,EAAA,6DACCQ,EAAa,CACjBC,MAAO,KACPC,UAAW,IAHR,SAMmBX,IAAeY,OAAM,SAAAC,GAC3CJ,EAAWC,MAAQG,KAPhB,UAMCC,EAND,gDASkBL,GATlB,uBAWsBM,EAAYD,GAXlC,cAWCE,EAXD,OAaLF,EAAUG,QAEND,EAAaN,MACfD,EAAWC,MAAQM,EAAaN,MAEhCD,EAAWE,UAAYK,EAAaE,SAASC,KAAI,SAAAlB,GAAC,OAAIA,EAAEmB,WAlBrD,kBAqBEX,GArBF,6C,+BAwBQM,E,8EAAf,WAA2BD,GAA3B,yBAAAb,EAAA,6DACQoB,EADR,YACuCtB,GAC/BU,EAAa,CACjBC,MAAO,KACPQ,SAAU,IAJd,kBAQ2BI,EAAmBR,EAAWO,GAAyBE,MAAK,SAAAC,GAAC,OAAIA,KAAGZ,OAAM,SAAAC,GACxE,QAAnBA,EAAIY,YAA2C,QAAnBZ,EAAIY,WAClChB,EAAWC,MAAQ,0EAA4EG,EAAIa,QAEnGjB,EAAWC,MAAQ,uCAAyCG,KAZpE,OAQIc,EARJ,uDAgBIC,QAAQC,IAAR,MAhBJ,WAmBOF,EAnBP,0CAoBWlB,GApBX,eAuBQqB,EAAQ,IAAIjC,GACZkC,UAAYC,EAAOC,KAAKN,EAAeI,UAAW,OACxDD,EAAMI,UAAYF,EAAOC,KAAKN,EAAeO,UAAW,OAClDC,EAAcC,EAAeN,GAE7BO,EAAwB,CAC5BP,QACAV,QAASe,EACTG,eAAgBjB,EAChBkB,mBAAoBxC,GAItBU,EAAWS,SAAWsB,EAA2BH,EAAuB,GApC1E,kBAqCS5B,GArCT,0D,+BAyCea,E,gFAAf,WAAkCR,EAAWO,GAA7C,mBAAApB,EAAA,6DAEQwC,EAAS,IAAIC,IAAO5B,GAEpB6B,EAAgB,IAAIC,SAAQ,SAACC,EAASC,GAC1CC,EAAgBC,YAAW,WACzB,OAAOF,EAAO,IAAIvC,MAAM,yCACvB,QAPP,kBAUSqC,QAAQK,KAAK,CAClBR,EAAOS,WAAW7B,GAAyB,GAAO,GAClDsB,IACCpB,MAAK,SAAC4B,GAEP,OADAC,aAAaL,GACNI,MAfX,4C,sBAmBO,SAAeE,EAAtB,oC,4CAAO,WAAqCC,EAAKC,GAA1C,6BAAAtD,EAAA,sEACmBD,IAAeY,OAAM,SAAAC,GAC3C,MAAMA,KAFH,cACCC,EADD,OAKC0C,EAAWF,EAAIrB,YAEfwB,EAPD,2BAQAH,GARA,IASHI,SAAUJ,EAAII,UAAYJ,EAAIK,IAC9BJ,QAASA,KAEUtB,YACdwB,EAAcE,IAEjBC,EAAqBC,YAAUJ,GAf9B,UAgBsB1C,EAAYD,GAhBlC,aAgBCE,EAhBD,QAiBYN,MAjBZ,uBAkBG,IAAIH,MAAMS,EAAaN,OAlB1B,WAsBWM,EAAaE,SAAS,GAAGE,QAG7B0C,gBAAkBN,EAASM,cAzBlC,4CA4BmB,IAAIpB,IAAO5B,GAAWiD,gBAAgB/C,EAAaE,SAAS,GAAGoB,eAAgBsB,EAAmBI,OAAO,IA5B5H,QA4BDC,EA5BC,gEA8BK,IAAI1D,MAAM,oCA9Bf,WAiCG2D,EAAOC,SAASF,EAAYG,EAAG,IACfC,KAAKC,OAAOJ,EA7Ib,IA6IwC,KAEvCX,EApCnB,uBAqCK,IAAIhD,MAAM,wBAA0B0D,EAAYG,GArCrD,eAwCIX,EAAcW,EACrBG,EAAmBV,YAAUJ,EAAe,CAC1Ce,EAAG,KAAOP,EAAYO,EACtBC,EAAG,KAAOR,EAAYQ,EACtBL,EAAGF,IA5CF,8BA+CG,IAAI3D,MAAM,gEA/Cb,eAkDLO,EAAUG,QAlDL,kBAoDEsD,GApDF,4D,sBAuDA,SAAeG,EAAtB,oC,4CAAO,WAAiCC,EAAMC,GAAvC,uBAAA3E,EAAA,sEACmBD,IAAeY,OAAM,SAAAC,GAC3C,MAAMA,KAFH,cACCC,EADD,gBAKsBC,EAAYD,GALlC,YAKCE,EALD,QAMYN,MANZ,sBAOG,IAAIH,MAAMS,EAAaN,OAP1B,WAWCmE,EAAU7D,EAAaE,SAAS,IAG1BE,QAAQ0C,gBAAkBc,EAAcd,cAd/C,4CAgBsB,IAAIpB,IAAO5B,GAAWgE,oBAAoBD,EAAQvC,eAAgBqC,EAAKX,OAAO,IAhBpG,QAgBKe,EAhBL,OAiBDC,EAAY,KAAOD,EAASP,EAAIO,EAASN,EAAIM,EAASX,EAAEa,SAAS,IAjBhE,yDAmBK,IAAI1E,MAAM,oBAAsB,KAAEmB,SAnBvC,sCAsBG,IAAInB,MAAM,gEAtBb,eAwBLO,EAAUG,QAxBL,kBAyBE+D,GAzBF,4D,sBA4BP,SAASxC,EAA2BH,EAAuB6C,GAEzD,IADA,IAAMC,EAAc,GACXC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAE9B,IAAMC,EAAkB,YAAQhD,EAAsBE,mBAA9B,YAAoD6C,GACtEE,EAAI,YAAQF,GACZtD,EAAQO,EAAsBP,MAAMyD,OAAOD,GAE3CE,EAAa,CACjBpE,QAFcgB,EAAeN,GAG7BA,QACAS,mBAAoBF,EAAsBoD,oBAC1CnD,eAAgB+C,GAGlBF,EAAYO,KAAKF,GAEnB,OAAOL,EAGF,SAAS/C,EAAeN,GAC7B,IACM6D,EAAmB7D,EAAMC,UACzB6D,EAA4BjG,EAC/BkG,gBAAgBF,GAHa,GAI7BV,SAAS,OACZ,OAAOtF,EAAQmG,aAAaF,GAA2B9B,iB,+pCC5N5CiC,EAAQnG,EAAQ,KAEtB,SAAeoG,EAAtB,oC,4CAAO,WAA0BC,EAAKC,GAA/B,eAAAjG,EAAA,sEACU8F,EAAME,EAAK,CAC1BE,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,OACRF,KAAMG,KAAKC,UAAUJ,KAJhB,cACA1B,EADA,yBAMCA,EAAE+B,QANH,4C,sBASA,IAAMC,EAAQ,uCAAG,WAAMP,GAAN,eAAAhG,EAAA,sEACC8F,EAAME,EAAK,CAChCG,OAAQ,MACRD,QAAS,CACP,eAAgB,sBAJE,UAOE,OANlBM,EADgB,QAOTC,OAPS,sBAOa,IAAInG,MAAM,mBAPvB,gCAQfkG,EAASF,QARM,2CAAH,sDAWd,SAAeI,EAAtB,oC,4CAAO,WAA4BV,EAAKW,GAAjC,iBAAA3G,EAAA,+EAGY8F,EAAME,EAAKW,GAHvB,OAGDC,EAHC,8DAKDjF,QAAQlB,MAAR,MALC,kBAMM,CAAEoG,OAAO,qBAAD,OAAuB,MAAK,KAAEpF,WAN5C,mCAUYmF,EAAKN,OAVjB,QAUDL,EAVC,iEAYDtE,QAAQlB,MAAR,MAZC,kBAaM,CAAEoG,OAAO,qBAAD,OAAuBD,EAAKH,OAA5B,aAAuC,MAAK,KAAEhF,SAAWmF,SAbvE,iCAeI,CAAEX,OAAMW,OAAMC,OAAQ,KAf1B,kE,sBCpBP,IAYeC,EATQ,CACnBC,KAAM,qEACNC,oBAAqB,6CACrBC,iBAAkB,6CAClBC,gBAAiB,6CACjBC,aAAc,6CACdC,iBAAkB,OAClBC,eAAgB,CAAEC,OAAQ,CAAEC,EAVN,S,kCCmCXC,EAjCK,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,WAAY/G,EAAgD,EAAhDA,UAAWgH,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cACrDC,EAAQlH,EAAUmH,QAAO,sBAAGC,WAA+BL,MAEjE,OACI,qBAAKM,UAAU,eAAf,SAESH,EAAMzH,OAGHyH,EAAM1G,KAAI,gBAAG4G,EAAH,EAAGA,UAAWE,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAAM9G,EAA1B,EAA0BA,QAA1B,OACN,sBAAK4G,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAQG,QAAS,kBAAMR,GAAmBA,EAAgBvG,IAAzE,UACI,qBAAK4G,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASJ,EAAT,QAC9C,sBAAKD,UAAU,UAAf,UACI,gCAASE,IACT,qBAAKF,UAAU,UAAf,SAA2B5G,UAI9B2G,EAKG,KAJA,qBAAKC,UAAU,SAASG,QAAS,kBAAMP,EAAcM,EAAM9G,IAA3D,SACI,cAAC,IAAD,QAXWA,EAAU8G,MAHzC,qBAAKF,UAAU,cAAf,2CC+ELM,EAlFK,SAAC,GAAoF,IAAlF3H,EAAiF,EAAjFA,UAAW4H,EAAsE,EAAtEA,WAAYX,EAA0D,EAA1DA,cAAeY,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,QAASd,EAAsB,EAAtBA,gBAC9E,EAA8Be,mBAAS,IAAvC,mBAAOtH,EAAP,KAAgBuH,EAAhB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOR,EAAP,KAAaU,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAOMC,EAAwB7H,EAAQhB,QAAU8H,EAAK9H,QAAU,sBAAsB8I,KAAK9H,GACpF+H,EAAeC,uBAAY,WAC7BN,GAAY,GACZE,GAAkB,GAClBT,EAAWL,EAAM9G,KAClB,CAAC8G,EAAM9G,EAASmH,IAEbc,EAAmBD,uBAAY,SAAAE,GACjCR,EAAYQ,GACPA,IACDV,EAAQ,IACRD,EAAW,OAEhB,IAYH,OAVAY,qBAAU,kBAAOV,GAAUJ,EAAUA,IAAY,OAAM,CAACI,EAAQJ,IAEhEc,qBAAU,WACFf,IACAG,EAAWH,GACXM,GAAY,GACZE,GAAkB,MAEvB,CAACR,IAGA,eAAC,EAAD,CAAUgB,MAAO,qCAAE,cAAC,IAAD,IAAF,kBAAmCxB,UAAU,eAAeyB,KAAMZ,EAAQa,SAAUL,EAArG,UACI,sBAAKrB,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IADJ,mBAIKe,EAKG,qBAAKf,UAAU,SAASG,QAAS,kBAAMa,GAAkB,IAAzD,SACI,cAAC,IAAD,MALJ,qBAAKhB,UAAU,SAASG,QAAS,kBAAMa,GAAkB,IAAzD,SACI,cAAC,IAAD,SASZD,EACI,sBAAKY,GAAG,cAAc3B,UAAU,UAAhC,UACI,sBAAKA,UAAU,SAAf,UACI,cAAC,GAAD,CAAW4B,aAAa,OAAOC,YAAY,OAAOC,MAAO5B,EAAM6B,QAAS,SAAAD,GAAK,OAAIlB,EAAQkB,MACzF,cAAC,GAAD,CAAWF,aAAa,OAAOC,YAAY,UAAUC,MAAO1I,EAAS2I,QAAS,SAAAD,GAAK,OAAInB,EAAWmB,SAEtG,eAAC,EAAD,CAAQE,OAAK,EAACC,OAAK,EAACC,UAAWjB,EAAuBd,QAASgB,EAA/D,UACI,cAAC,IAAD,IADJ,qBAKHxI,EAAUP,OAKP,qBAAK4H,UAAU,UAAf,SACI,cAAC,EAAD,CACIrH,UAAWA,EACXgH,gBAnEN,SAAAvG,GAClBuG,GAAmBA,EAAgBvG,GACnC0H,GAAY,IAkEYlB,cAAeA,MARvB,qBAAKI,UAAU,UAAf,6C,iBCxElBmC,EAAiB,SAAA/I,GAAO,MAAI,sBAAsB8H,KAAK9H,IAEvDgJ,EAAyB,SAAAhJ,GAC3B,IAAMiJ,EAAqBjJ,EAAQ0C,cAC7BwG,EAAkBC,OAAOC,KAAKC,KAC9BC,EAAqBH,OAAOC,KAAKG,KACvC,OAAOL,EAAgBM,SAASP,IAAuBK,EAAmBE,SAASP,IC8BxEQ,EA/BQ,SAAC,GAA4D,IAA1DzJ,EAAyD,EAAzDA,QAASsI,EAAgD,EAAhDA,SAAUoB,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAC1D,EAAkCrC,oBAAS,GAA3C,mBAAOsC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,mBAAQ,kBAAMhB,EAAe/I,KAAa2J,EAAe3J,KAAU,CAACA,EAAS2J,IAC9FK,EAAuBD,mBAAQ,kBAAMf,EAAuBhJ,KAAU,CAACA,IAM7E,OAJAmI,qBAAU,WACFG,GAAUA,EAASsB,KACxB,CAACA,EAAWtB,IAGX,oCAES0B,GAAwBF,EACrB,sBAAKvB,GAAG,0BAAR,UACI,cAAC,EAAD,CACI0B,MAAM,kDACNC,QAASN,EACTtB,SAAU,gBAAG6B,EAAH,EAAGA,OAAH,OAAgBN,EAAaM,EAAOD,YAElD,sBAAKtD,UAAU,SAASG,QAAS2C,EAAjC,UACI,cAAC,IAAD,IADJ,mCAMJ,Q,kBCbLU,EAjBA,SAAC,GAAuH,IAArHC,EAAoH,EAApHA,SAAUzD,EAA0G,EAA1GA,UAAWiC,EAA+F,EAA/FA,MAAOyB,EAAwF,EAAxFA,KAAMzD,EAAkF,EAAlFA,KAAM0D,EAA4E,EAA5EA,UAAWzB,EAAiE,EAAjEA,SAAU/B,EAAuD,EAAvDA,QAASyD,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,OAAQ7B,EAAiC,EAAjCA,MAAO8B,EAA0B,EAA1BA,OAAQtC,EAAkB,EAAlBA,MAAOuC,EAAW,EAAXA,KACvH,OACI,yBACI5D,QAAS,sCAAI6D,EAAJ,yBAAIA,EAAJ,uBAAc9B,GAAY/B,GAAWA,EAAQ8D,MAAM,EAAMD,IAClEhE,UAAS,0BAAqBA,EAArB,YAAkCiC,EAAQ,QAAU,GAApD,YAA0DyB,EAAO,OAAS,GAA1E,YAAgFG,GAAUD,EAAM,SAAW,GAA3G,YAAiH5B,EAAQ,QAAU,GAAnI,YAAyI8B,EAAS,SAAW,GAA7J,YAAmK5B,EAAW,WAAa,IAEpMV,MAAOA,EAEPuC,KAAMA,EANV,UAQM9D,EAAO,qBAAKD,UAAU,cAAf,SAA+BC,IAAe,KACrDwD,EACAE,EAAY,qBAAK3D,UAAU,cAAf,SAA+B2D,IAAoB,S,2BC8D9DO,EAvED,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACnB,EAAsC1D,mBAAS,IAA/C,mBAAO2D,EAAP,KAAoBC,EAApB,KAEMC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA0BJ,OACI,sBAAKvE,UAAU,QAAf,UACI,cAAC,IAAD,CACIA,UAAU,QACVwE,OAAQJ,EACRK,MAAOL,EACPM,aAAc,SAACC,GAAD,OAzBL,SAACA,GAClBL,EAAeK,EAAKtB,OAwBYqB,CAAaC,IACrCR,KAhBK,SAAAA,GACb,OAAOA,EAAKS,MAAK,SAAC3M,EAAG4M,GAAJ,OAAUA,EAAE/C,MAAQ7J,EAAE6J,SAezBgD,CAASX,GACfI,OAAQA,EACRQ,YAAa,GACbC,YAjCQ,cAkCRC,YAjCQ,GAkCRC,eAjCW,IAkCXC,QAAQ,EACRhF,QAAS,SAACwE,EAAMS,GAAP,OA7BL,SAACT,EAAMS,GACfA,GACAxL,QAAQC,IAAI8K,GA2BoBxE,CAAQwE,EAAMS,MAE9C,qBAAKpF,UAAU,SAASI,MAAO,CAACiF,UAAWjB,GAA3C,SAEQD,EAAKhL,KAAI,SAACwL,EAAMvH,GAAP,OACL,sBAAK4C,UAAS,eAAUqE,IAAgBM,EAAKtB,MAAQ,SAAW,IAAhE,UACI,qBAAKrD,UAAU,QAAQI,MAAO,CAACkF,iBAzBlCC,EAyBgEnI,EAvB1EmI,EADYhB,EAAOnM,OAAS,EACPmM,EAAOgB,EAAShB,EAAOnM,OAASiE,KAAKmJ,MAAMD,EAAQhB,EAAOnM,SAAYmM,EAAOgB,OAwBrF,gCAASZ,EAAKtB,QACd,qBAAKrD,UAAU,cACf,sBAAKA,UAAU,UAAf,UACMyF,WAAWd,EAAK7C,OAAO4D,QAAQ,GADrC,SAJJ,eAAmFtI,IAxBlF,IAAAmI,WClCnBI,G,OAAWC,sBAAW,SAACC,EAAOC,GAChC,IAAMC,EACF,uBAAOhC,KAAK,WAAWT,QAASuC,EAAMvC,QAAS0C,SAAUH,EAAMG,SAAUtE,SAAUmE,EAAMnE,SAAUoE,IAAKA,IAG5G,OAAOD,EAAMxC,MAAS,wBAAOrD,UAAS,6BAAwB6F,EAAM3D,SAAW,WAAY,IAArE,UACjB6D,EACD,qBAAK/F,UAAU,kBACf,qBAAKA,UAAU,iBAAf,SAAiC6F,EAAMxC,WAC9B,qCACR0C,EACD,qBAAK/F,UAAU,yB,2BCZR,SAASiG,EAAkBH,EAAKI,GAC3C3E,qBACI,WACI,IAAM4E,EAAW,SAACC,GACTN,EAAIO,UAAWP,EAAIO,QAAQC,SAASF,EAAM7C,SAG/C2C,EAAQE,IAIR,OAFJG,SAASC,iBAAiB,YAAaL,GACvCI,SAASC,iBAAiB,aAAcL,GAC7B,WACHI,SAASE,oBAAoB,YAAaN,GAC1CI,SAASE,oBAAoB,aAAcN,MAGvD,CAACL,EAAKI,ICXC,SAASQ,EAAT,GAA0H,IAAtGjD,EAAqG,EAArGA,SAAU9B,EAA2F,EAA3FA,GAAI1B,EAAuF,EAAvFA,KAAMD,EAAiF,EAAjFA,UAAWwB,EAAsE,EAAtEA,MAAOmF,EAA+D,EAA/DA,MAAOlF,EAAwD,EAAxDA,KAAMmF,EAAkD,EAAlDA,aAAclF,EAAoC,EAApCA,SAAUmF,EAA0B,EAA1BA,OAAQpG,EAAkB,EAAlBA,QAASL,EAAS,EAATA,MACrH0F,EAAMgB,mBACNC,EAAgBD,mBACtB,EAAkCpG,oBAAS,GAA3C,mBAAOsG,EAAP,KAAmBC,EAAnB,KAQA,OANA1F,qBAAU,kBAAM0F,EAAYxF,KAAO,CAACA,IACpCF,qBAAU,kBAAMG,GAAYA,EAASsF,KAAa,CAACtF,EAAUsF,IAC7DzF,qBAAU,kBAAOyF,GAAcvG,GAAWA,MAAW,CAACuG,EAAYvG,IAClEc,qBAAU,kBAAMyF,GAAcH,GAAUA,MAAU,CAACG,EAAYH,IAC/DZ,EAAkBH,GAAK,kBAAMmB,GAAY,MAGrC,sBAAKtF,GAAIA,EAAIvB,MAAOA,EAAOJ,UAAS,mBAAcA,GAAa8F,IAAKA,EAApE,UACI,sBAAK9F,UAAU,UAAUG,QAAS,kBAAM8G,GAAaD,IAArD,UAEQ/G,EACI,qBAAKD,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASJ,EAAT,QAE7C,KAER,qBAAKD,UAAU,QAAf,SAAyBwB,IAErBmF,EACI,qBAAK3G,UAAU,QAAf,SACM2G,EAAQ,EAAI,KAAOA,IAGzB,KAER,qBAAK3G,UAAU,cACf,qBAAKA,UAAS,iBAAYgH,EAAa,OAAS,IAAhD,SACI,cAAC,IAAD,CAAe5C,KAAM,UAG7B,cAAC8C,EAAA,EAAD,CAAeC,eAAa,EAACC,GAAIJ,EAAYK,QAAS,IAAKC,WAAW,OAAOC,QAASR,EAAtF,SACI,qBAAK/G,UAAU,OAAO8F,IAAKiB,EAAe5G,QAASyG,EAAe,kBAAMK,GAAY,IAAS,KAA7F,SACMxD,S,mBC7BP+D,EAVC,WACZ,OACI,qBAAKxH,UAAU,UAAf,SACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAkBoE,KAAM,UCCzBqD,EAPO,WAClB,OACI,qBAAKzH,UAAU,kCCQR0H,EAVE,SAAC,GAAgB,IAAfjE,EAAc,EAAdA,SACf,OACI,qBAAKzD,UAAU,WAAf,SACI,qBAAKA,UAAU,GAAf,SACKyD,O,0BCCXkE,EAAeC,IAAMC,cAAc,MAErClG,EAAK,EAgHMmG,EA9GO,SAAC,GAAkB,IAAhBrE,EAAe,EAAfA,SACfsE,EAAUC,uBAChB,EAA4BtH,mBAAS,IAArC,mBAAOuH,EAAP,KAAeC,EAAf,KAEMC,EAAc/G,uBAAY,SAAAO,GAC5BuG,GAAU,SAAAD,GAAM,OAAIA,EAAOnI,QAAO,SAAAsI,GAAC,OAAIA,EAAEzG,KAAOA,UACjD,IAEG0G,EAAWjH,uBAAY,SAACkH,EAASC,GACnC,IAWMC,EAAK,yBACP7G,GAAIA,IACJ2G,UACAxC,IAAK2C,uBAdc,CACnBpB,QAAS,IACT3O,OAAO,EACPgQ,SAAU,SACVC,QAAQ,EACRhC,MAAO,KACPxG,QAAS,KACTlC,IAAK,KACL2K,MAAO,OAQJL,GAUP,OAPAL,GAAU,SAAAD,GAAM,4BACTA,GADS,CAEZO,QAGHA,EAAMG,QAAU3N,YAAW,kBAAMmN,EAAYK,EAAM7G,MAAK6G,EAAMnB,SAExDmB,EAAM7G,KACd,CAACuG,EAAWC,IAETU,EAAwBzH,uBAAY,WACtC6G,EACKnI,QAAO,qBAAG6I,UACVG,SAAQ,YAAkB,IAAfnH,EAAc,EAAdA,GACFoH,EADgB,EAAVjD,IACaO,QACzB,GAAK0C,EAAL,CAGA,IADA,IAAIC,EAAe,GAJG,WAKb5L,GACL,IAAM6L,EAAUhB,EAAOnI,QAAO,qBAAG6I,UAAsBO,MAAK,qBAAGvH,KAAgBvE,KAC3E6L,GAASD,EAAatL,KAAKuL,IAF1B7L,EAAIuE,EAAIvE,GAAK6K,EAAOA,EAAO7P,OAAS,GAAGuJ,GAAIvE,IAAM,EAAjDA,GAKT,IAAMgD,EAAQ+I,iBAAiBJ,GACzBK,EAAejN,SAASiE,EAAMgJ,cAE9BC,EAAK9C,SAASrI,KAAKoL,YAAc,EAAMP,EAAaO,YAAc,EAClEC,EAAIP,EAAa7P,KAAI,gBAAG2M,EAAH,EAAGA,IAAH,OAAaA,EAAIO,SAAWP,EAAIO,QAAQmD,gBAAcC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAOP,IAAc,GAClIL,EAAa3I,MAAMwJ,UAAnB,oBAA4CP,EAA5C,gBAAqDE,EAArD,aAET,CAACtB,IAEJ1G,qBAAU,kBAAMsH,MAAyB,CAACZ,EAAQY,IAClDtH,qBAAU,WACN,IAAMsI,EAAW,kBAAMhB,KAEvB,OADAiB,OAAOtD,iBAAiB,SAAUqD,GAAU,GACrC,kBAAMC,OAAOrD,oBAAoB,SAAUoD,GAAU,MAC7D,CAAChB,IAQJ,OACI,eAAClB,EAAaoC,SAAd,CACIjI,MAAO,CACHuG,WACAF,eAHR,UAMI,qBAAKxG,GAAG,kBAAkB3B,UAAYiI,EAAO7P,OAAkB,GAAT,OAAtD,SACI,cAAC4R,EAAA,EAAD,CAAiBhK,UAAU,mBAA3B,SAEIiI,EAAO9O,KAAI,gBAAGwI,EAAH,EAAGA,GAAImE,EAAP,EAAOA,IAAK7H,EAAZ,EAAYA,IAAK2K,EAAjB,EAAiBA,MAAOlQ,EAAxB,EAAwBA,MAAOiQ,EAA/B,EAA+BA,OAAQhC,EAAvC,EAAuCA,MAAO+B,EAA9C,EAA8CA,SAAUJ,EAAxD,EAAwDA,QAASnI,EAAjE,EAAiEA,QAAjE,OACP,cAAC+G,EAAA,EAAD,CAAeG,QAAS,IAAKC,WAAW,aAAsBC,QAASzB,EAAvE,SACI,sBAAK9F,UAAS,gBAAWtH,EAAQ,QAAU,GAA7B,YAAmCiQ,EAAS,SAAW,GAAvD,YAA6DD,GAAsB,IAAM5C,IAAKA,EAA5G,UACI,sBAAK9F,UAAU,QAAQG,QAAS,kBAnBvC,SAACwB,EAAIxB,EAASlC,EAAK2K,GAChC3K,EAAK6L,OAAOrI,KAAKxD,EAAK,UACjB2K,GAAOb,EAAQrK,KAAKkL,GAC7BzI,EAAUA,IAAYgI,EAAYxG,GAgB4BsI,CAAatI,EAAIxB,EAASlC,EAAK2K,IAArE,UACMjC,EAAQ,qBAAK3G,UAAU,QAAf,SAAyB2G,IAAgB,KACjD2B,KAGFK,EACI,qBAAK3I,UAAU,QAAQG,QAAS,kBAAMgI,EAAYxG,IAAlD,SACI,cAAC,IAAD,MAGJ,SAZ0CA,UAoBpE8B,MChHRyG,EAAY,WACd,OAAOC,qBAAWxC,ICJtB,IAqDeyC,EArDE,CAAC,CAChBzI,GAAI,WACJpG,QAAS,EAGT8O,IAAK,gEACLC,kBAAmB,MACnBpK,KAAM,WACND,KAAM,mCACNsK,YAAa,wBACV,CACH5I,GAAI,UACJpG,QAAS,IACT8O,IAAK,8BACLC,kBAAmB,QACnBpK,KAAM,UACND,KAAM,kCACNsK,YAAa,2BACX,CACF5I,GAAI,YACJpG,QAAS,MACT8O,IAAK,wCACLC,kBAAmB,OACnBpK,KAAM,YACND,KAAM,oCACNsK,YAAa,wBACX,CAEF5I,GAAI,sBACJpG,QAAS,GACT8O,IAAK,mCACLC,kBAAmB,MACnBpK,KAAM,sBACND,KAAM,8BACNsK,YAAa,uBACX,CACF5I,GAAI,SACJpG,QAAS,IACT8O,IAAK,wBACLC,kBAAmB,MACnBpK,KAAM,eACND,KAAM,iCACNsK,YAAa,wBC1CR,I,2BAIMC,GAAiBC,uCAGjBC,GAAsBD,+BC8BpBE,GAnCW,CACtB,CACIC,QAAS,WACTC,UAAW,CAAC,QAAS,UAAW,WAAY,SAAU,cAAe,WAAY,QAAS,QAAS,YAAa,aAAc,aAAc,OAC5IC,iBAAkB,SAClBC,aAAc,UAElB,CACIH,QAAS,UACTC,UAAW,CAAC,UAAW,YAAa,YAAa,OACjDC,iBAAkB,SAClBC,aAAc,UAElB,CACIH,QAAS,YACTC,UAAW,CAAC,WACZC,iBAAkB,UAEtB,CACIF,QAAS,sBACTC,UAAW,CAAC,eACZC,iBAAkB,UAEtB,CACIF,QAAS,SACTC,UAAW,GAClBC,iBAAkB,W,4BCxBbE,GAAQ,IAAIC,aAAUC,IAAKC,aAC3BC,GAAgB,SAACC,EAAWC,GAAZ,IAAqBC,EAArB,+DAA0CF,EAAUvP,gBAAkBwP,EAAQxP,cAC/FyP,EAAe,GAAhB,GAAsBA,EAA4C,CAAC,iBAAkB,CAAExH,KAAM,UAAW3K,QAASiS,IAA5F,0BAA+BA,IAElDG,GAAe,SAACC,EAAcC,GAClC,GAAIA,EAAO,MAAO,GAClB,IAAMC,EAAS,IAETC,EAD0B,IAAfH,EACOI,KAAKC,MAC7B,OAAIF,EAAO,GAAKA,GAAO,KAAiB,qBAIpCA,EAAO,EAAU,GACjBA,EAAOD,EAAc,kCACrBC,EAAO,IAAiB,gBAAN,OAAuBvP,KAAKC,MAAMsP,EAAOD,GAAzC,YACf,IAGHI,GAAa,SAACC,EAAWC,EAASZ,EAAWa,GAA6B,IAApBC,IAAmB,yDACvEC,EAAQD,EAAsB,GAAZ,CAAC,SACzB,MAAO,CAAC,CACN,QADK,OAEFC,EAFE,cAIHrI,KAAM,SACHiI,GAELG,EAAU,eAAiB,MAPtB,aASHpI,KAAM,SACHkI,IAVA,YAYFZ,GAZE,CAaLa,MAIEG,IAAY,oBAEfrB,GAAMsB,WAAW,6BAA8B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACpE,cAAuDvB,GAAMwB,iBAAiBlR,GAAK0I,KAAnF,GAAQyI,EAAR,KAAkBC,EAAlB,KAAgCpP,EAAhC,KAAsCqP,EAAtC,KAA0CC,EAA1C,KACMC,EAAcvP,EAAKA,EAAKlF,OAAS,GACvC,OAAQmU,EAAKhB,SAETQ,GAAWe,GAAMxP,EAAK,GAAImP,GAAU,GAAOK,GAAMD,EAAaH,GAAc,GAAOtB,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QADpJ,CAAC,QAAD,OAASoB,GAAMxP,EAAK,GAAImP,GAAxB,yBAAkDK,GAAMD,EAAaH,IAArE,OAAqFtB,GAAcuB,EAAIrR,EAAIrB,OAA3G,OAAmHuR,GAAaoB,EAAUL,EAAKb,YANnI,eASfV,GAAMsB,WAAW,6BAA8B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACpE,cAAuDvB,GAAMwB,iBAAiBlR,GAAK0I,KAAnF,GAAQ+I,EAAR,KAAmBC,EAAnB,KAAgC1P,EAAhC,KAAsCqP,EAAtC,KAA0CC,EAA1C,KACMC,EAAcvP,EAAKA,EAAKlF,OAAS,GACvC,OAAQmU,EAAKhB,SAETQ,GAAWe,GAAMxP,EAAK,GAAI0P,GAAa,GAAOF,GAAMD,EAAaE,GAAW,GAAO3B,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QAAQ,GAD5J,CAAC,cAAD,OAAeoB,GAAMxP,EAAK,GAAI0P,GAA9B,gBAAkDF,GAAMD,EAAaE,IAArE,OAAkF3B,GAAcuB,EAAIrR,EAAIrB,OAAxG,OAAgHuR,GAAaoB,EAAUL,EAAKb,YAbhI,eAgBfV,GAAMsB,WAAW,0BAA2B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACjE,EAAwBvB,GAAMwB,iBAAiBlR,GAAvC0I,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,MACd,cAA6CkC,EAA7C,GAAQ0I,EAAR,KAAsBpP,EAAtB,KAA4BqP,EAA5B,KAAgCC,EAAhC,KACMC,EAAcvP,EAAKA,EAAKlF,OAAS,GACvC,OAAQmU,EAAKhB,SAETQ,GAAWkB,GAAYrC,EAAS9I,GAAO,GAAOgL,GAAMD,EAAaH,GAAc,GAAOtB,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QADvJ,CAAC,QAAD,OAASuB,GAAYrC,EAAS9I,GAA9B,yBAAqDgL,GAAMD,EAAaH,IAAxE,OAAwFtB,GAAcuB,EAAIrR,EAAIrB,OAA9G,OAAsHuR,GAAaoB,EAAUL,EAAKb,YArBtI,eAwBfV,GAAMsB,WAAW,0BAA2B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACjE,cAAuDvB,GAAMwB,iBAAiBlR,GAAK0I,KAAnF,GAAQ+I,EAAR,KAAmBC,EAAnB,KAAgC1P,EAAhC,KAAsCqP,EAAtC,KAA0CC,EAA1C,KACA,OAAQL,EAAKhB,SAETQ,GAAWe,GAAMxP,EAAK,GAAI0P,GAAa,GAAOC,GAAYrC,EAASmC,GAAW,GAAO3B,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QAAQ,GAD9J,CAAC,cAAD,OAAeoB,GAAMxP,EAAK,GAAI0P,GAA9B,gBAAkDC,GAAYrC,EAASmC,IAAvE,OAAoF3B,GAAcuB,EAAIrR,EAAIrB,OAA1G,OAAkHuR,GAAaoB,EAAUL,EAAKb,YA3BlI,eA8BfV,GAAMsB,WAAW,0BAA2B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACjE,cAAuDvB,GAAMwB,iBAAiBlR,GAAK0I,KAAnF,GAAQyI,EAAR,KAAkBC,EAAlB,KAAgCpP,EAAhC,KAAsCqP,EAAtC,KAA0CC,EAA1C,KACA,OAAQL,EAAKhB,SAETQ,GAAWe,GAAMxP,EAAK,GAAImP,GAAU,GAAOQ,GAAYrC,EAAS8B,GAAc,GAAOtB,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QADtJ,CAAC,QAAD,OAASoB,GAAMxP,EAAK,GAAImP,GAAxB,yBAAkDQ,GAAYrC,EAAS8B,IAAvE,OAAuFtB,GAAcuB,EAAIrR,EAAIrB,OAA7G,OAAqHuR,GAAaoB,EAAUL,EAAKb,YAjCrI,eAoCfV,GAAMsB,WAAW,0BAA2B,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACjE,EAAwBvB,GAAMwB,iBAAiBlR,GAAvC0I,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,MACd,cAA0CkC,EAA1C,GAAQ+I,EAAR,KAAmBzP,EAAnB,KAAyBqP,EAAzB,KAA6BC,EAA7B,KACMC,EAAcvP,EAAKA,EAAKlF,OAAS,GACvC,OAAQmU,EAAKhB,SAETQ,GAAWkB,GAAYrC,EAAS9I,GAAO,GAAOgL,GAAMD,EAAaE,GAAW,GAAO3B,GAAcuB,EAAIrR,EAAIrB,MAAM,GAAOuR,GAAaoB,EAAUL,EAAKb,QAAQ,GAD5J,CAAC,cAAD,OAAeuB,GAAYrC,EAAS9I,GAApC,gBAAkDgL,GAAMD,EAAaE,IAArE,OAAkF3B,GAAcuB,EAAIrR,EAAIrB,OAAxG,OAAgHuR,GAAaoB,EAAUL,EAAKb,YAzChI,eA6CfV,GAAMsB,WAAW,iBAAkB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACxD,cAAwGvB,GAAMwB,iBAAiBlR,GAAK0I,KAApI,GAAOkJ,EAAP,KAAeC,EAAf,KAAuBC,EAAvB,KAAuCC,EAAvC,KAAuFV,EAAvF,KAA2FC,EAA3F,KACA,MAAO,CAAC,kBAAD,OAAmBE,GAAMI,EAAQE,GAAjC,gBAAwDN,GAAMK,EAAQE,IAAtE,OAAwFjC,GAAcuB,EAAIrR,EAAIrB,OAA9G,OAAsHuR,GAAaoB,EAAUL,EAAKb,YA/C3I,eAiDfV,GAAMsB,WAAW,oBAAqB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GAC3D,EAAwBvB,GAAMwB,iBAAiBlR,GAAvC0I,EAAR,EAAQA,KAAMlC,EAAd,EAAcA,MACd,cAAwFkC,EAAxF,GAAO8I,EAAP,KAAcQ,EAAd,KAAwEX,EAAxE,KAA4EC,EAA5E,KACA,MAAO,CAAC,kBAAD,OAAmBE,EAAMA,EAAOQ,GAAhC,gBAA2DL,GAAYrC,EAAS9I,IAAhF,OAAyFsJ,GAAcuB,EAAIrR,EAAIrB,OAA/G,OAAuHuR,GAAaoB,EAAUL,EAAKb,YApD5I,eAsDfV,GAAMsB,WAAW,oBAAqB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GAC3D,cAA+EvB,GAAMwB,iBAAiBlR,GAAK0I,KAA3G,GAAOkJ,EAAP,KAAeC,EAAf,KAAsCI,EAAtC,KAAkDC,EAAlD,KAA8Db,EAA9D,KAAkEC,EAAlE,KACA,MAAO,CAAC,8BAAD,OAA+BE,GAAMI,EAAQK,GAA7C,gBAAgET,GAAMK,EAAQK,IAA9E,OAA4FpC,GAAcuB,EAAIrR,EAAIrB,OAAlH,OAA0HuR,GAAaoB,EAAUL,EAAKb,YAxD/I,eA0DfV,GAAMsB,WAAW,uBAAwB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GAC9D,cAA4EvB,GAAMwB,iBAAiBlR,GAAK0I,KAAxG,GAAO8I,EAAP,KAA6BW,EAA7B,KAA6CC,EAA7C,KAA2Df,EAA3D,KAA+DC,EAA/D,KACA,MAAO,CAAC,8BAAD,OAA+BE,EAAMA,EAAOW,GAA5C,gBAAmER,GAAYrC,EAAS8C,IAAxF,OAAwGtC,GAAcuB,EAAIrR,EAAIrB,OAA9H,OAAsIuR,GAAaoB,EAAUL,EAAKb,YA5D3J,GAkEZiC,GAAU,IAAI1C,aAAUC,IAAK0C,aAC7BC,GAAY,SAAAC,GAKd,IAFA,IAAIxQ,EAAO,GAEFF,EAAI,EAAGA,EAAI0Q,EAAU1V,OAAQgF,GAAK,GACzCE,EAAKI,KAAK,KAAOoQ,EAAU9R,OAAOoB,EAAG,KAEvC,OAAOE,GAGLyQ,IAAY,oBACfJ,GAAQrB,WAAW,cAAe,SAAChR,EAAKsP,GACvC,IAAM5G,EAAO2J,GAAQnB,iBAAiBlR,GAAK0I,KAIrCgK,EAHQhK,EAAKA,EAAK5L,OAAS,GAGZe,KAAI,SAAAgL,GACvB,IAAM8J,EAAU9J,EAAK+J,MAAM,EAAG,IACxBC,EAAYJ,GAAaE,GAC/B,OAAOE,EAAYA,EAAU,2BAAK7S,GAAN,IAAW6I,SAAQyG,GAAW,QACzDwD,OAAOtO,QAAO,SAAAuJ,GAAC,OAAIA,KACtB,OAAO2E,EAAO5V,OAAS4V,EAAS,CAAC,iCAXnB,eAcfL,GAAQrB,WAAW,qBAAsB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GAC9D,cAAmBoB,GAAQnB,iBAAiBlR,GAAK0I,KAAjD,GAAQpF,EAAR,KAEA,MAAO,CAAC,QAAD,OAASkO,GAAMlO,EAAOyP,QAASzP,EAAO6N,UAAtC,yBAAgEK,GAAMlO,EAAO0P,SAAU1P,EAAO2P,mBAA9F,OAAkHnD,GAAcxM,EAAOyM,UAAW/P,EAAIrB,OAAtJ,OAA8JuR,GAAa5M,EAAOgO,SAAUL,EAAKb,YAjB1L,eAmBfiC,GAAQrB,WAAW,eAAgB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACxD,cAAmBoB,GAAQnB,iBAAiBlR,GAAK0I,KAAjD,GAAQpF,EAAR,KACMtB,EAAOuQ,GAAUjP,EAAOtB,MAC9B,MAAO,CAAC,QAAD,OAASwP,GAAMxP,EAAK,GAAIsB,EAAO6N,UAA/B,yBAAyDK,GAAMxP,EAAKA,EAAKlF,OAAS,GAAIwG,EAAO2P,mBAA7F,OAAiHnD,GAAcxM,EAAOyM,UAAW/P,EAAIrB,OAArJ,OAA6JuR,GAAa5M,EAAOgO,SAAUL,EAAKb,YAtBzL,eAwBfiC,GAAQrB,WAAW,sBAAuB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GAC/D,cAAmBoB,GAAQnB,iBAAiBlR,GAAK0I,KAAjD,GAAQpF,EAAR,KACA,MAAO,CAAC,cAAD,OAAekO,GAAMlO,EAAOyP,QAASzP,EAAO4P,iBAA5C,gBAAoE1B,GAAMlO,EAAO0P,SAAU1P,EAAOmO,YAAlG,OAA+G3B,GAAcxM,EAAOyM,UAAW/P,EAAIrB,OAAnJ,OAA2JuR,GAAa5M,EAAOgO,SAAUL,EAAKb,YA1BvL,eA4BfiC,GAAQrB,WAAW,gBAAiB,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACzD,cAAmBoB,GAAQnB,iBAAiBlR,GAAK0I,KAAjD,GAAQpF,EAAR,KACMtB,EAAOuQ,GAAUjP,EAAOtB,MAC9B,MAAO,CAAC,cAAD,OAAewP,GAAMxP,EAAK,GAAIsB,EAAO4P,iBAArC,gBAA6D1B,GAAMxP,EAAKA,EAAKlF,OAAS,GAAIwG,EAAOmO,YAAjG,OAA8G3B,GAAcxM,EAAOyM,UAAW/P,EAAIrB,OAAlJ,OAA0JuR,GAAa5M,EAAOgO,SAAUL,EAAKb,YA/BtL,eAiCfiC,GAAQrB,WAAW,gBAAiB,SAAChR,EAAKsP,GACzC,kBAAiC+C,GAAQnB,iBAAiBlR,GAAK0I,KAA/D,GAAQyK,EAAR,KAAmBpD,EAAnB,KACA,MAAO,CAAC,mBAAD,OAAoB4B,GAAYrC,EAAS6D,IAAzC,OAAsDrD,GAAcC,EAAW/P,EAAIrB,WAnC5E,GAuCZyU,GAAW,IAAIzD,aAAUC,IAAKyD,cAC9BC,IAAa,oBAChBF,GAASpC,WAAW,+BAAgC,SAAChR,EAAKsP,GAAwB,IAAf2B,EAAc,uDAAP,GACzE,cAA0BmC,GAASlC,iBAAiBlR,GAAK0I,KAAzD,GAAO4I,EAAP,KAAiBiC,EAAjB,KAGMb,EAASa,EAAM1V,KAAI,SAAAgL,GACvB,IAAM8J,EAAU9J,EAAK+J,MAAM,EAAG,IACxBC,EAAYS,GAAcX,GAChC,OAAOE,EAAYA,EAAU,2BAAK7S,GAAN,IAAW6I,SAAQyG,GAAW,QACzDwD,OAAOtO,QAAO,SAAAuJ,GAAC,OAAIA,KACtB,OAAQ2E,EAAO5V,OAAS4V,EAAS,CAAC,+BAE/Bc,OAAO,CAACtD,GAAaoB,EAASmC,WAAYxC,EAAKb,OAAOwC,MAAM,KAAKpO,QAAO,SAAAuJ,GAAC,OAAIA,QAZjE,eAehBqF,GAASpC,WAAW,qBAAsB,SAAChR,EAAKsP,GAC/C,IAAQhM,EAAR,YAAmB8P,GAASlC,iBAAiBlR,GAAK0I,KAAlD,MAEA,MAAO,CAAC,QAAD,OAAS8I,GAAMlO,EAAOyP,QAASzP,EAAO6N,UAAtC,yBAAgEK,GAAMlO,EAAO0P,SAAU1P,EAAO2P,mBAA9F,OAAkHnD,GAAcxM,EAAOyM,UAAW/P,EAAIrB,WAlB9I,eAoBhByU,GAASpC,WAAW,eAAgB,SAAChR,EAAKsP,GACzC,IAAQhM,EAAR,YAAmB8P,GAASlC,iBAAiBlR,GAAK0I,KAAlD,MACM1G,EAAOuQ,GAAUjP,EAAOtB,MAC9B,MAAO,CAAC,QAAD,OAASwP,GAAMxP,EAAK,GAAIsB,EAAO6N,UAA/B,yBAAyDK,GAAMxP,EAAKA,EAAKlF,OAAS,GAAIwG,EAAO2P,mBAA7F,OAAiHnD,GAAcxM,EAAOyM,UAAW/P,EAAIrB,WAvB7I,eAyBhByU,GAASpC,WAAW,sBAAuB,SAAChR,EAAKsP,GAChD,IAAQhM,EAAR,YAAmB8P,GAASlC,iBAAiBlR,GAAK0I,KAAlD,MACA,MAAO,CAAC,cAAD,OAAe8I,GAAMlO,EAAOyP,QAASzP,EAAO4P,iBAA5C,gBAAoE1B,GAAMlO,EAAO0P,SAAU1P,EAAOmO,YAAlG,OAA+G3B,GAAcxM,EAAOyM,UAAW/P,EAAIrB,WA3B3I,eA6BhByU,GAASpC,WAAW,gBAAiB,SAAChR,EAAKsP,GAC1C,IAAQhM,EAAR,YAAmB8P,GAASlC,iBAAiBlR,GAAK0I,KAAlD,MACM1G,EAAOuQ,GAAUjP,EAAOtB,MAC9B,MAAO,CAAC,cAAD,OAAewP,GAAMxP,EAAK,GAAIsB,EAAO4P,iBAArC,gBAA6D1B,GAAMxP,EAAKA,EAAKlF,OAAS,GAAIwG,EAAOmO,YAAjG,OAA8G3B,GAAcxM,EAAOyM,UAAW/P,EAAIrB,MAAlJ,SAhCQ,eAkChByU,GAASpC,WAAW,6BAA8B,SAAChR,EAAKsP,GAEvD,MAA6C8D,GAASlC,iBAAiBlR,GAAK0I,KAApE+I,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YAAa1P,EAAhC,EAAgCA,KAAMqP,EAAtC,EAAsCA,GACtC,MAAO,CAAC,cAAD,OAAeG,GAAMxP,EAAK,GAAI0P,GAA9B,gBAAkDF,GAAMxP,EAAKA,EAAKlF,OAAS,GAAI2U,IAA/E,OAA4F3B,GAAcuB,EAAIrR,EAAIrB,MAAlH,SArCQ,eAuChByU,GAASpC,WAAW,6BAA8B,SAAChR,EAAKsP,GAEvD,MAA6C8D,GAASlC,iBAAiBlR,GAAK0I,KAApEyI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcpP,EAAhC,EAAgCA,KAAMqP,EAAtC,EAAsCA,GACtC,MAAO,CAAC,QAAD,OAASG,GAAMxP,EAAK,GAAImP,GAAxB,yBAAkDK,GAAMxP,EAAKA,EAAKlF,OAAS,GAAIsU,IAA/E,OAA+FtB,GAAcuB,EAAIrR,EAAIrB,WA1C7G,eA4ChByU,GAASpC,WAAW,yBAA0B,SAAChR,EAAKsP,GACnD,IAAQ6D,EAAR,YAAsBC,GAASlC,iBAAiBlR,GAAK0I,KAArD,MACA,MAAO,CAAC,mBAAD,OAAoBiJ,GAAYrC,EAAS6D,QA9CjC,eAgDhBC,GAASpC,WAAW,iCAAkC,SAAChR,EAAKsP,GAC3D,kBAAiC8D,GAASlC,iBAAiBlR,GAAK0I,KAAhE,GAAQyK,EAAR,KAAmBpD,EAAnB,KACA,MAAO,CAAC,mBAAD,OAAoB4B,GAAYrC,EAAS6D,IAAzC,OAAsDrD,GAAcC,EAAW/P,EAAIrB,WAlD3E,GAwDJ+U,GADF,uCAAQ3C,IAAiB0B,IAAiBa,IClNjD5D,GAAQ,IAAIC,aAAUC,IAAK+D,OAkElBC,IAhEG,sBACflE,GAAMsB,WAAW,YAAa,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SACrE,cAAoCP,GAAMwB,iBAAiBlR,GAAK0I,KAAhE,GAAQmL,EAAR,KAAyBC,EAAzB,KACMlP,EAAOmP,GAAQF,EAAiBvE,GAChC0E,EAAYD,GAAQ/T,EAAIqR,GAAI/B,GAClC,OAAIwE,EAAOG,GAAG,GAAYhE,EAAiE,CAAC,CAC1F,SACA,eACA,CACExH,KAAM,UACN3K,QAAS+V,EACTjP,QAEF,SAR0F,aAUxF6D,KAAM,SACH+I,GAAMxR,EAAIqR,GAAIyC,GAAQ,MAXQ,CAAC,uBAAD,OAAwBlP,EAAxB,mBAAuCoP,IAexE/D,EAAiB,CAAC,CACpB,UACA,CACExH,KAAM,UACN3K,QAAS+V,EACTjP,QALkB,gBAOXkP,EAAOG,GAAGC,aAAUC,YAAc,QAAU,IAPjC,aASlB1L,KAAM,SACH+I,GAAMxR,EAAIqR,GAAIyC,GAAQ,MAIzBA,EAAOG,GAAGC,aAAUC,YAAoB,CAAC,WAAD,OAAYvP,EAAZ,wBAAgCoP,IACrE,CAAC,WAAD,OAAYpP,EAAZ,mBAA2B4M,GAAMxR,EAAIqR,GAAIyC,QAnClC,gBAqCfpE,GAAMsB,WAAW,aAAc,SAAChR,EAAKsP,EAAN,GAAiC,IAAhBW,EAAe,EAAfA,SAC/C,cAAuBP,GAAMwB,iBAAiBlR,GAAK0I,KAAnD,GAAQ2I,EAAR,KAAYyC,EAAZ,KACMlP,EAAOmP,GAAQ1C,EAAI/B,GAEzB,OAAIW,EAAiB,CAAC,CACpB,OADoB,aAGlBxH,KAAM,SACH+I,GAAMxR,EAAIqR,GAAIyC,GAAQ,IAE3B,KACA,CACErL,KAAM,UACN3K,QAASuT,EACTzM,UAIG,CAAC,QAAD,OAAS4M,GAAMxR,EAAIqR,GAAIyC,GAAvB,eAAqCzC,IAAOzM,EAAOyM,EAAKzM,EAAK,KAAKyM,EAAG,SAvD9D,ICHZ3B,GAAQ,IAAIC,aAAUC,IAAKwE,mBAC3BC,GAAe,SAACC,EAAUtE,GAAX,OAAuBsE,EAAS9T,gBAAkBwP,EAAQxP,cAC3E,iBAAiB8T,EACjB,IAEE7D,GAAa,SAAC8D,EAAQC,EAAMhD,EAAOxR,EAAKsU,GAC5C,MAAO,CAAC,CACNC,EADM,aAGJ9L,KAAM,SACH+I,GAELgD,EACA,CACE/L,KAAM,UACN3K,QAASkC,EAAIqR,GACbzM,KAAM,qBAER0P,EAAWD,GAAaC,EAAUtU,EAAIrB,MAAQ,MA0BnC8V,IAtBE,sBACd/E,GAAMsB,WAAW,YAAa,SAAChR,EAAKsP,EAAN,GAAiC,IAAhBW,EAAe,EAAfA,SAC9C,cAAoCP,GAAMwB,iBAAiBlR,GAAK0I,KAAhE,GAAQgM,EAAR,KAAeZ,EAAf,KAAuBQ,EAAvB,KACA,OAAIrE,EAAiBQ,GAAW,UAAW,KAAMe,GAAMkD,EAAOZ,GAAQ,GAAO9T,EAAKsU,GAC3E,CAAC,WAAD,OAAY9C,GAAMkD,EAAOZ,GAAzB,gCAAwDO,GAAaC,EAAUtU,EAAIrB,WAJ7E,gBAMd+Q,GAAMsB,WAAW,aAAc,SAAChR,EAAKsP,EAAN,GAAiC,IAAhBW,EAAe,EAAfA,SAC/C,cAAoCP,GAAMwB,iBAAiBlR,GAAK0I,KAAhE,GAAQgM,EAAR,KAAeZ,EAAf,KAAuBQ,EAAvB,KACA,OAAIrE,EAAiBQ,GAAW,WAAY,OAAQe,GAAMkD,EAAOZ,GAAQ,GAAO9T,EAAKsU,GAC9E,CAAC,YAAD,OAAa9C,GAAMkD,EAAOZ,GAA1B,kCAA2DO,GAAaC,EAAUtU,EAAIrB,WAThF,gBAWd+Q,GAAMsB,WAAW,UAAW,SAAChR,EAAKsP,EAAN,GAAiC,IAAhBW,EAAe,EAAfA,SAC5C,cAAoCP,GAAMwB,iBAAiBlR,GAAK0I,KAAhE,GAAQgM,EAAR,KAAeZ,EAAf,KAAuBQ,EAAvB,KACA,OAAIrE,EAAiBQ,GAAW,QAAS,KAAMe,GAAMkD,EAAOZ,GAAQ,GAAO9T,EAAKsU,GACzE,CAAC,SAAD,OAAU9C,GAAMkD,EAAOZ,GAAvB,gCAAsDO,GAAaC,EAAUtU,EAAIrB,WAd3E,gBAgBd+Q,GAAMsB,WAAW,WAAY,SAAChR,EAAKsP,EAAN,GAAiC,IAAhBW,EAAe,EAAfA,SAC7C,cAA0BP,GAAMwB,iBAAiBlR,GAAK0I,KAAtD,GAAQgM,EAAR,KAAeZ,EAAf,KACA,OAAI7D,EAAiBQ,GAAW,SAAU,OAAQe,GAAMkD,EAAOZ,GAAQ,GAAO9T,GACvE,CAAC,UAAD,OAAWwR,GAAMkD,EAAOZ,GAAxB,+BAnBM,ICtBXpE,GAAQ,IAAIC,aAAUC,IAAK+E,QAC3BC,GAAW,SAACjW,EAAMqR,GAAP,OAAmBrR,EAAK6B,gBAAkBwP,EAAQxP,cAA/B,gBAAwD7B,GAAS,IAE/F8R,GAAa,SAACoE,EAASlW,EAAM0S,EAAIrR,EAAKsP,GAAzB,MAAqC,CAAC,CACvD,OACA,CACE7G,KAAM,SACN3K,QAASkC,EAAIqR,GACb/B,QAASA,EAAQjJ,GACjBA,GAAIwO,EACJjQ,KAAK,UAAD,OAAYiQ,EAAQlT,SAAS,KAA7B,OAAmCiT,GAASjW,EAAMqB,EAAIrB,QAE5D,KACA,CACE8J,KAAM,UACN3K,QAASuT,EACTzM,KAAMmP,GAAQ1C,EAAI/B,OAgBPwF,IAZI,sBAChBpF,GAAMsB,WAAW,iBAAkB,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC1E,cAA8BP,GAAMwB,iBAAiBlR,GAAK0I,KAA1D,GAAQ/J,EAAR,KAAc0S,EAAd,KAAkBwD,EAAlB,KACA,OAAQ5E,EACNQ,GAAWoE,EAASlW,EAAM0S,EAAIrR,EAAKsP,GADlB,CAAC,eAAD,OAAgBuF,EAAQlT,SAAS,KAAjC,OAAuCiT,GAASjW,EAAMqB,EAAIrB,MAA1D,eAAsEoV,GAAQ1C,EAAI/B,QAHtF,gBAMhBI,GAAMsB,WAAW,8CAA+C,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SACvG,cAA8BP,GAAMwB,iBAAiBlR,GAAK0I,KAA1D,GAAQ/J,EAAR,KAAc0S,EAAd,KAAkBwD,EAAlB,KACA,OAAQ5E,EACNQ,GAAWoE,EAASlW,EAAM0S,EAAIrR,EAAKsP,GADlB,CAAC,eAAD,OAAgBuF,EAAQlT,SAAS,KAAjC,OAAuCiT,GAASjW,EAAMqB,EAAIrB,MAA1D,eAAsEoV,GAAQ1C,EAAI/B,QARtF,ICpBbmB,GAAa,SAAC8D,EAAQjF,EAASwE,GACnC,MAAO,CAAC,CACJS,EADI,aAGF9L,KAAM,SACHkJ,GAAYrC,EAASwE,GAAQ,OAKlCpE,GAAQ,IAAIC,aAAUC,IAAKmF,MAWlBC,IAVE,sBACdtF,GAAMsB,WAAW,YAAa,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC7DzJ,EAAUkJ,GAAMwB,iBAAiBlR,GAAjCwG,MACR,OAAQyJ,EAAqDQ,GAAW,OAAQnB,EAAS9I,GAAtE,CAAC,QAAD,OAASmL,GAAYrC,EAAS9I,QAHpC,gBAKdkJ,GAAMsB,WAAW,aAAc,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC9D6D,EAAR,YAAmBpE,GAAMwB,iBAAiBlR,GAAK0I,KAA/C,MACA,OAAQuH,EAAwDQ,GAAW,SAAUnB,EAASwE,GAA3E,CAAC,UAAD,OAAWnC,GAAYrC,EAASwE,QAPtC,ICXFmB,GAJW,CACxBC,KAAM,qEACNC,MAAO,sECGHzF,GAAQ,IAAIC,aAAUrT,EAAQ,MAmBrB8Y,GAjBM,gBAClB1F,GAAMsB,WAAW,qBAAsB,SAAChR,EAAKsP,GAC5C,kBAA4BI,GAAMwB,iBAAiBlR,GAAK0I,KAAxD,GAAQ2M,EAAR,KAAcC,EAAd,KACM1Q,EAAOmP,GAAQsB,EAAM/F,GACrBiG,EAAoBF,EAAK7U,gBAAkBiD,EAAeI,gBAAgBrD,cAChF,OAAI8U,IAAcL,GAAkBE,MAC9BI,EAA0B,CAAC,gCACnB,CAAC,4BAAD,OAA6B3Q,IAChC0Q,IAAcL,GAAkBC,KACrCK,EAA0B,CAAC,mCACxB,CAAC,oBAAD,OAAqB3Q,IAExB2Q,EAA0B,CAAC,mCACxB,CAAC,iCAAD,OAAkC3Q,O,UChBzC8K,GAAQ,IAAIC,aAAUrT,EAAQ,MASrBkZ,GAPK,gBACjB9F,GAAMsB,WAAW,WAAY,SAAChR,EAAKsP,GAClC,kBAAuBI,GAAMwB,iBAAiBlR,GAAK0I,KAAnD,GAAQ+M,EAAR,KAAc/R,EAAd,KACM2R,EAAOzV,sBAAW,KAAO8V,4BAAiB1V,EAAIqR,GAAIsE,qBAAU,CAACjS,IAAQ+R,GAAM9T,SAAS,QAC1F,MAAO,CAAC,gCAAD,OAAiC0T,OCNtC3F,GAAQ,IAAIC,aAAUC,IAAKgG,YAE3BC,GAAa,CAAEC,SAAU,QAASC,QAAS,aAC3CC,GAAgB,CAAEF,SAAU,IAAKC,QAAS,MAE1CE,GAAiB,SAACzE,EAAOlC,GAAR,OAAoBkC,EAAM0E,MAAM,KAAKrY,KAAI,SAACkQ,EAAGjM,GAAJ,OAAgB,IAANA,EAAUkU,GAAc1G,GAASvB,EAAIA,KAAGoI,KAAK,MACjHC,GAAe,SAAC,GAAD,IAAG/E,EAAH,EAAGA,GAAH,OAAYgF,IAAYzI,MAAK,SAAAG,GAAC,OAAIA,EAAEsH,OAAShE,MAAOiF,IAAgB1I,MAAK,SAAAG,GAAC,OAAIA,EAAEsH,OAAShE,MAExGkF,GAAiB,SAAChC,EAAQC,EAAMgC,EAAW1C,GAA1B,MAAqC,CAAC,CAC3DS,EAD2D,aAGzD9L,KAAM,SACH+I,GAAMgF,EAAUC,UAAW3C,GAAQ,IAExCU,EACA,CACE/L,KAAM,UACN7D,KAAM4R,EAAU5R,KAChB9G,QAAS0Y,EAAUnB,SAIjB5E,GAAa,SAAC8D,EAAQC,EAAMlF,EAASwE,GAAxB,MAAmC,CAAC,CACrDS,EACA,CACE9L,KAAM,QACNiO,OAAQ,QACR5C,OAAQA,EAAOnS,YAEjB6S,EACA,CACE/L,KAAM,UACN7D,KAAMiR,GAAWvG,EAAQjJ,QAkBdsQ,IAdY,sBACxBjH,GAAMsB,WAAW,6BAA8B,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC9E6D,EAAR,YAAmBpE,GAAMwB,iBAAiBlR,GAAK0I,KAA/C,MACM8N,EAAYJ,GAAapW,GAC/B,OAAIwW,EAAmBvG,EAAoFsG,GAAe,UAAW,KAAMC,EAAW1C,GAApH,CAAC,WAAD,OAAYtC,GAAMgF,EAAUC,UAAW3C,GAAvC,eAAqD0C,EAAU5R,OACzFqL,EAAsEQ,GAAW,UAAW,KAAMnB,EAASwE,GAAhG,CAAC,WAAD,OAAYA,EAAZ,qBAA+B+B,GAAWvG,EAAQjJ,SAL9C,gBAOxBqJ,GAAMsB,WAAW,8BAA+B,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC/E6D,EAAR,YAAmBpE,GAAMwB,iBAAiBlR,GAAK0I,KAA/C,MACM8N,EAAYJ,GAAapW,GAC/B,OAAIwW,EAAmBvG,EAAmHsG,GAAe,WAAY,OAAQC,EAAW1C,GAAtJ,CAAC,YAAD,OAAamC,GAAezE,GAAMgF,EAAUC,UAAW3C,GAASxE,EAAQjJ,IAAxE,iBAAoFmQ,EAAU5R,OACxHqL,EAAyEQ,GAAW,WAAY,OAAQnB,EAASwE,GAAtG,CAAC,YAAD,OAAaA,EAAb,uBAAkC+B,GAAWvG,EAAQjJ,SAXjD,ICnCrBuQ,GAAuB,IAAIjH,aAAUC,IAAKiH,aAC1CC,GAAsB,IAAInH,aAAUC,IAAKmH,YAEzCC,GAAa,SAAC/W,GAA+B,IAAtBgQ,EAAqB,wDAC1CX,EAAUR,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAEhX,UAAYiX,OAAOjX,MACxD,OAAQgQ,EAA0BX,EAAfA,EAAQ1K,MAGvB6L,GAAa,SAACC,EAAWpB,EAASqB,GACtC,MAAO,CAAC,CACN,WADM,aAGJlI,KAAM,SACHiI,GAEL,KANM,aAQJjI,KAAM,WACH6G,GAEL,MAXM,aAaJ7G,KAAM,SACHkI,MAqBMwG,IAhBE,sBACdP,GAAqB5F,WAAW,uBAAwB,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC/F,EAAmE2G,GAAqB1F,iBAAiBlR,GAAK0I,KAAK,GAA3G0O,EAAR,EAAQA,qBAAsBtD,EAA9B,EAA8BA,OAAQuD,EAAtC,EAAsCA,cAAeC,EAArD,EAAqDA,UACrD,OAAQrH,EAEJQ,GAAWe,GAAM4F,EAAsBtD,GAAQ,GAAOkD,GAAWM,GAAW,GAAO9F,GAAM6F,EAAe,MAAM,IADhH,CAAC,YAAD,OAAa7F,GAAM4F,EAAsBtD,GAAzC,eAAuDkD,GAAWM,GAAlE,gBAAoF9F,GAAM6F,QAJ/E,gBAOdP,GAAoB9F,WAAW,uBAAwB,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,gBAAuB,SAC9F,EAAgE6G,GAAoB5F,iBAAiBlR,GAAK0I,KAAK,GAAvG6O,EAAR,EAAQA,kBAAmBzD,EAA3B,EAA2BA,OAAQ0D,EAAnC,EAAmCA,cAAeF,EAAlD,EAAkDA,UAC1CG,EAAeF,EAAfE,WACYC,EAAgBF,EAA5BC,WACR,OAAQxH,EAEJQ,GAAWe,GAAMmG,GAAyBF,GAAa3D,GAAQ,GAAOkD,GAAWM,GAAW,GAAO9F,GAAMmG,GAAyBD,GAAc,MAAM,IADxJ,CAAC,YAAD,OAAalG,GAAMmG,GAAyBF,GAAa3D,GAAzD,eAAuEkD,GAAWM,GAAlF,gBAAoG9F,GAAMmG,GAAyBD,SAZxH,I,UC9BXhI,GAAQ,IAAIC,aAAUiI,IAEtBnH,GAAa,SAACoH,EAAYtD,GAC9B,OAAOsD,EAAa,CAAC,CAAEtD,IAAY,CAACA,IAWvBuD,IARoB,sBAChCpI,GAAMsB,WAAW,UAAW,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,SAC5C,OAAOQ,QAD4D,SACvC,oBAFG,gBAIhCf,GAAMsB,WAAW,gBAAiB,SAAChR,EAAKsP,EAAN,GAAyC,IAAD,IAAvBW,SAClD,OAAOQ,QADkE,SAC7C,0BALG,ICL7Bf,GAAQ,IAAIC,aAAUC,IAAKmI,SAWlBC,GATI,gBAChBtI,GAAMsB,WAAW,cAAe,SAAChR,EAAKsP,EAAS2B,GAC9C,IAAQgH,EAASvI,GAAMwB,iBAAiBlR,GAAK0I,KAArCuP,KACR,EAAkCA,EAAKA,EAAKnb,OAAS,GAA7CuU,EAAR,EAAQA,GAAI7K,EAAZ,EAAYA,MAAOqC,EAAnB,EAAmBA,KAAMlK,EAAzB,EAAyBA,KACnBgU,EAAU9J,EAAK+J,MAAM,EAAG,IAE9B,OAAOC,EADWqF,GAAWvF,IACZ,CAAEtB,KAAI7K,QAAOqC,OAAMlK,QAAQ2Q,EAAS2B,MCa1CkH,GAbN,uIACLC,IACAhE,IACAT,IACAgB,IACAI,IACAsD,IACAC,IACAC,IACAC,IACAC,IACAT,IChBEU,GAAe,GAEfC,GAAc,GAEPhB,GAA2B,SAAA7Z,GAAO,OAAIA,EAAQ0C,gBAAR,YAA+B,IAAIoY,OAAO,KAA1C,YAAuD,IAAIA,OAAO,KAAQ9a,EAAQ0C,eAE9H,SAASqY,GAAsB7Y,EAAK8Y,EAAWC,GAAyB,IAAZ9H,EAAW,uDAAJ,GACtE,cAAiCjR,EAAjC,GAAOqR,EAAP,KAAW7K,EAAX,YAAkBqC,OAAlB,MAAyB,KAAzB,EACMyG,EAAUR,EAASlB,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOyS,GAAa/K,EAAE9N,UAAY6Y,KACvE,IAAKxJ,EAAS,MAAO,oCAErB,GAAW,OAAP+B,IAAgBA,EAChB,MAAO,kBAGX,IAWI2H,EAAaC,EAXXC,EAAY/R,IAAOkK,EAAG7Q,eACtBoE,EAAOyC,IAAMgK,EAAG7Q,eAEtB,GAAa,OAATqI,GAAiBwI,EAAG7Q,gBAAkBuY,EAAYvY,cAElD,OAAQyQ,EAAKhB,SAAwC,CAAC,CAClD,SACA,gBAFG,2BAqBX,GAdIpP,SAAS2F,GAAS,IAAGyS,EAAehI,EAAKhB,SAAoE,CAC7G,OAD6G,aAGzGxH,KAAM,SACHkJ,GAAYrC,EAAS9I,GAAO,IAEnC,KACA,CACIiC,KAAM,UACN3K,QAASuT,EACTzM,SAV+B,eAAyB+M,GAAYrC,EAAS9I,GAA9C,eAA2D5B,GAAQyM,IAc7F,OAATxI,EAAe,CACfmQ,EAAe/H,EAAKhB,SAAmF,CACnG,UACA,mBACA,CACIxH,KAAM,UACN3K,QAASuT,EACTzM,KAAMA,GAASsU,GAAaA,EAAU,KANhC,mCAA6CtU,IAASsU,EAAYA,EAAU,GAAK7H,IAU/F,IAAMsB,EAAU9J,EAAK+J,MAAM,EAAG,IACxBC,EAAYqF,GAAWvF,GAC7B,GAAIE,EACA,IACI,IAAMsG,EAAUtG,EAAU,CAAExB,KAAI7K,QAAOqC,OAAMlK,KAAMoa,GAAezJ,EAAS2B,GAC3E,OAAyB,IAAlBA,EAAKhB,SAAoBkJ,EAAUA,EAAQhD,KAAK,MACzD,MAAOiD,GACLJ,GAAe,qBACf1a,QAAQlB,MAAM,iCAAkCgc,IAK5D,IAAMC,EAAkB,CAACL,EAAaC,GAAazU,QAAO,SAAAuJ,GAAC,OAAIA,KAC/D,OAAQkD,EAAKhB,SAAwCoJ,EAA7BA,EAAgBlD,KAAK,MAI1C,SAASpC,GAAQsB,EAAM/F,GAC1B,IAAMxR,EAAUuX,EAAK7U,cACrB,OAAIkY,GAAa5a,GAAiB4a,GAAa5a,GACxCuJ,IAAMvJ,KAAaqJ,IAAOrJ,GAAWqJ,IAAOrJ,GAAS,GAAK,SAAW,OAASuX,EAGlF,SAAS7D,GAAM6D,EAAMvB,GAA2B,IAAnB7D,EAAkB,wDAC5CnS,EAAUuX,EAAK7U,cACf8Y,EAAYnS,IAAOrJ,IAAY6a,GAAY7a,GAEjD,GAAIwb,EAAW,CACX,IAAMC,EAAgB,CAClBzb,UACA4Y,OAAQ4C,EAAU,GAClBE,SAAUF,EAAU,GACpBxF,OAAQ,MAGZ,OAAKA,EAEDI,aAAUC,WAAWF,GAAGH,GAAiB7D,EAAD,2BACrCsJ,GADqC,IAExCzF,QAAS,IAF+B,kBAAuBwF,EAAU,IAKrErJ,EAAD,2BACAsJ,GADA,IAEHzF,OAAQ2F,uBAAY3F,EAAQwF,EAAU,MAFnC,UAAeG,uBAAY3F,EAAQwF,EAAU,IAA7C,YAAoDA,EAAU,IAPhDrJ,EAA0BsJ,EAAfD,EAAU,GAY1C,OAAQrJ,EAAgE,CACpEnS,UACA4Y,OAAQ,KACR8C,SAAU,KACV1F,OAAQ2F,uBAAY3F,EAAQ,IAJzB,UAAe2F,uBAAY3F,EAAQ,GAAnC,2BASR,SAASnC,GAAYrC,EAASwE,GAA2B,IAAnB7D,EAAkB,wDACrDyJ,EAAsB,CACxB5b,QAAS,KAAO,IAAI8a,OAAO,IAC3BlC,OAAQ,uBACR8C,SAAU,IAId,OAAIlK,EACQW,EAAD,2BACAyJ,GADA,IAEHhD,OAAQpH,EAAQN,kBAChB8E,OAAQ2F,uBAAY3F,EAAQ,MAHzB,UAAe2F,uBAAY3F,EAAQ,IAAnC,YAA0CxE,EAAQN,mBAMjDiB,EAAD,2BACAyJ,GADA,IAEH5F,OAAQ2F,uBAAY3F,EAAQ,MAFzB,UAAe2F,uBAAY3F,EAAQ,IAAnC,yBAOR,SAAS6F,GAAkBC,GAC9BA,EAAMpM,SAAQ,gBAAG1P,EAAH,EAAGA,QAAS8G,EAAZ,EAAYA,KAAZ,OAAuB8T,GAAa5a,EAAQ0C,eAAiBoE,KAOxE,SAASiV,GAAQ7Z,EAAKrB,GACzB,GAAIqB,EAAI,KAAOrB,EAAM,OAAO,EAC5B,IAAMb,EAAUkC,EAAI,GAAGQ,cACvB,SAAUkY,GAAa5a,IAAYuJ,IAAMvJ,IAAYqJ,IAAOrJ,IAAY6a,GAAY7a,I,iCChJlFgc,GAAqB,GAEpB,SAASC,GAAajB,GAC3B,IAAMxJ,EAAUR,EAASlB,MAAK,qBAAGvH,KAAgByS,KACjD,IAAKxJ,EAAS,MAAM,IAAIrS,MAAJ,wDAA2D6b,IAI/E,GAAIgB,GAAmBhB,GAAY,OAAOgB,GAAmBhB,GAE7D,IAAYlU,EAAkB0K,EAAtBjJ,GAAUpG,EAAYqP,EAAZrP,QACZ0C,EAAM2M,EAAQP,IASpB,OAPIpM,EAAIqX,WAAW,QACjBF,GAAmBhB,GAAa,IAAImB,aAAUC,kBAAkBvX,EAAK,CAAEiC,OAAM3E,YAG7E6Z,GAAmBhB,GAAa,IAAImB,aAAUE,sBAAsBxX,EAAK,CAAEiC,OAAM3E,YAG5E6Z,GAAmBhB,GCpB5B,OAAiEsB,UAAOC,MAAhE1K,GAAR,GAAQA,UAAW2K,GAAnB,GAAmBA,SAAUb,GAA7B,GAA6BA,YAAsBc,IAAnD,GAA0CC,QAA1C,GAAmDD,WAC7CE,GAA0B,IAAI9K,GAAU+K,IACxCC,GAAU,6CACVC,GAAW,UACXC,GAA8B,6C,SAErBC,G,iFAAf,uCAAAne,EAAA,6DAAqCoe,EAArC,EAAqCA,WAAY5T,EAAjD,EAAiDA,OAAQmI,EAAzD,EAAyDA,QAAS0L,EAAlE,EAAkEA,cAAlE,SACqBC,GAAK,CAAEF,aAAY5T,SAAQmI,YADhD,YACM4L,EADN,QAEaC,QAFb,wBAGUC,EAAajU,EAAOtJ,KAAI,SAAAiP,GAC5B,IAAMuO,EAAkBH,EAAOrS,KAAKrE,QAAO,SAAAtD,GAAC,OAAIA,EAAEpD,UAAYgP,EAAEhP,SAAWqM,WAAWjJ,EAAEoa,SAAW,KAAG,GACtG,OAAQD,EAAkB,CACxB5S,KAAM,OACN6G,QAASA,EACTxR,QAASud,EAAgBvd,QACzB0b,SAAU6B,EAAgB7B,SAC1B9C,OAAQ2E,EAAgB3E,OACxB6E,MAAOF,EAAgBE,OAAS,EAChCD,QAASpE,OAAOmE,EAAgBC,SAChCE,WAAYH,EAAgBG,WAC5BC,UAAW,IAAIlL,MAAQ5O,WACvB+Z,WAAYxE,OAAO/M,WAAWkR,EAAgBE,MAAQF,EAAgBC,SAAW,GAAGlR,QAAQ,IAC5FuR,cAAeN,EAAgBM,eAAhB,iEAA2FrM,EAA3F,YAAsG+L,EAAgBvd,QAAtH,SACbgP,KACHtI,QAAQ,SAAAsI,GAAC,OAAIA,GAAKA,EAAEwO,WACnBN,GAA0C,oBAAlBA,GAA8BA,EAAcI,GAnB5E,kBAoBWA,GApBX,eAsBI9c,QAAQlB,MAAM8d,EAAO9c,QAAS8c,EAAOrS,MAtBzC,kBAuBW1B,GAvBX,6C,+BA4Be8T,G,iFAAf,+CAAAte,EAAA,yDAAuBoe,EAAvB,EAAuBA,WAAY5T,EAAnC,EAAmCA,OAAQmI,EAA3C,EAA2CA,QACpCiL,GAAUQ,GADjB,yCACqC,CAACI,SAAS,EAAOtS,KAAMkS,EAAY3c,QAAQ,6CADhF,cAEQwd,EAAW7B,GAAYzK,GACvBuM,EAAQ,IAAIvB,GACZ5R,EAAO,CAEX,6CAEA,+MAEA,qEAEA,CAAC,CAAC,6CAA8C,MAAO,+CACvD,uEACAqS,EACA5T,EAAOtJ,KAAI,SAAAkQ,GAAC,OAAIA,EAAEjQ,YAEdge,EAAW,CACfnd,KAAMgc,GACNtJ,GAAIwJ,GACJhS,KAAM4R,GAAwBsB,mBAAmB,uBAAwBrT,IApB7E,SAsB2BkT,EAASX,KAAKa,EAAUlB,IAtBnD,WAuBMoB,GADEC,EAtBR,+BAuB+B,IAAIhf,MAAJ,yEAvB/B,eAwBQif,EAAWL,EAAMM,OAAO,CAAC,UAAWF,GAAY,GAChDf,EAAS/T,EAAOtJ,KAAI,SAACkQ,EAAGjM,GAAJ,mBAAC,eAAeiM,GAAhB,IAAmByN,WAAYU,EAASpa,GAAGH,WAAY2Z,QAASnR,WAAWsP,GAAYyC,EAASpa,GAAIiM,EAAEyL,WAAWpP,QAAQ,SAzBrJ,kBA0BS,CAAE+Q,SAAS,EAAMtS,KAAMqS,IA1BhC,6C,sBA8BA,IAAMkB,GAAY,aAEZC,GAAY,aAElB,SAASL,GAAOM,GACf,OAAOA,EAAItC,WAAWoC,KAAcE,EAAItC,WAAWqC,IAsBpD,SAASE,GAAgB1f,GACvB,OAAOA,EAAK2H,QAAO,SAAAsI,GACjB,OAAOyN,GAAUzN,EAAEhP,YCvFvB,IAEI0e,GAAQC,GAFNC,GAAc,SAACC,EAAQrN,EAASsN,EAAU9e,EAAS8d,GAArC,OAAkD1Y,EAAS,GAAD,OAAiB,WAAb0Y,EAAwBxM,GlBNvED,2BkBM2C,sBAAmFyN,EAAnF,iCAAoH9e,EAApH,oBAAuIwR,EAAvI,oBAA0JqN,EAA1J,uBAG/C,qBAApB1R,SAASuR,QAChBA,GAAS,SACTC,GAAmB,oBACiB,qBAAtBxR,SAAS4R,UACvBL,GAAS,WACTC,GAAmB,sBACqB,qBAA1BxR,SAAS6R,eACvBN,GAAS,eACTC,GAAmB,0BAEvB,IAAIM,GAA0B,KAG9B,SAASC,GAAcC,EAAOC,GAG1B,IAFA,IAAIC,EAAQ,GACRxe,EAAO,EACFmD,EAAI,EAAGA,GAAKf,KAAKqc,KAAKH,EAAMngB,OAASogB,GAAQpb,IAClDqb,EAAM/a,KAAK6a,EAAMrK,MAAMjU,EAAMmD,EAAIob,IACjCve,GAAQue,EAEZ,OAAOC,E,SAEIE,G,iFAAf,+CAAA1gB,EAAA,yDAAiDoe,EAAjD,EAAiDA,WAAYzL,EAA7D,EAA6DA,QAASgO,EAAtE,EAAsEA,WAAYC,EAAlF,EAAkFA,YAAavC,EAA/F,EAA+FA,cACtFD,GAA2B,KAAbA,GAAoBzL,GAAwB,MAAZA,EADvD,yCAC+E,IAD/E,cAESgO,GAAeA,EAAW,KAAIA,EAAaf,GAAee,GAAc,KACxEC,GAAgBA,EAAY,KAAIA,EAAchB,GAAegB,GAAe,KAG3EC,EANV,YAM+B,IAAIC,IAC3BC,GAAUpO,GAAWoO,GAAUpO,GAASkE,OAAO+J,GAA/C,YAAkEA,KAEhEpW,EAASqW,EAAc3f,KAAI,SAAAiP,GAC/B,OAAOwQ,EAAW1P,MAAK,SAAA+P,GAAE,OAAIA,EAAG7f,UAAYgP,EAAEhP,YAAYgP,KAEtD8Q,EAAkBN,EAAW9Y,QAAO,SAAAmZ,GACxC,OAAQxW,EAAO0W,MAAK,SAAA/Q,GAAC,OAAIA,EAAEhP,UAAY6f,EAAG7f,cAKtCyV,EAAQyJ,GAAc7V,EAAQ,KAAKqM,OAAOwJ,GAAcY,EAAiB,MAlBnF,UAoBiCte,QAAQ6Y,IAAI5E,EAAM1V,KAAI,SAAAigB,GAC/C,OAAOhD,GAAoB,CAAEC,aAAY5T,OAAQ2W,EAAYxO,UAAS0L,sBArB9E,eAoBU+C,EApBV,OAsBSjL,OAAOtO,QAAO,SAAAsI,GACf,QAAOyQ,EAAYM,MAAK,SAAAG,GAAE,OAAIlR,EAAEhP,UAAYkgB,EAAGlgB,YAAmBqM,WAAW2C,EAAEwO,SAAW,KAvBlG,kBAyBWyC,GAzBX,6C,sBA6Be,SAASE,GAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,eAAgB3c,EAAuB,EAAvBA,QAAS4c,EAAc,EAAdA,WACpDpR,EAAa6B,IAAb7B,SAEFqR,EAAiB5S,mBACvB,EAA8CpG,oBAAS,GAAvD,mBAAOiZ,EAAP,KAAyBC,EAAzB,KACA,EAAmDlZ,oBAAS,GAA5D,mBAAOmZ,EAAP,KAA4BC,EAA5B,KAEA,EAAgDpZ,mBAAS,IAAzD,mBAAOqZ,EAAP,KAAyBC,EAAzB,KACA,EAAgEtZ,mBAAS,IAAzE,mBAAOuZ,EAAP,KAAiCC,EAAjC,KAEA,EAA8BxZ,mBAAS,CACnCyZ,MAAO,CACHC,KAAM,EACNC,UAAW,EACXvF,SAAU,MAEdrS,OAAQ,KANZ,mBAAOmU,EAAP,KAAgB0D,EAAhB,KAQA,EAA0C5Z,mBAAS,IAAnD,mBAAO6Z,EAAP,KAAsBC,EAAtB,KACA,EAA4B9Z,mBAAS,IAArC,mBAAO+B,EAAP,KAAegY,EAAf,KACA,EAAkC/Z,mBAAS,IAA3C,mBAAOmK,EAAP,KAAkB6P,EAAlB,KACA,EAAwCha,mBAAS,IAAjD,mBAAOia,EAAP,KAAqBC,EAArB,KACA,EAAsCnB,EAAW,CAAEoB,IAAK,cAAeC,aAAc,KAArF,mBAAOjC,EAAP,KAAoBkC,EAApB,KAEMC,EAAuB5Z,uBAAY,SAACvE,EAAS+N,GAAV,OAAsBiO,EAC1D/Y,QAAO,SAAAmb,GAAK,OAAIA,EAAMpe,UAAYA,GAAWoe,EAAMrQ,UAAYA,KAC/DzR,KAAI,SAAA+hB,GAAU,kCACRA,GADQ,IAEXnX,KAAM,OACN8S,MAAO,EACPG,WAAY,EACZmE,cAAc,SAEpB,CAACtC,IAEGuC,GAA2Bha,sBAAW,uCAAC,WAAOia,GAAP,mBAAApjB,EAAA,6DACnCqjB,EAAuBD,EAAcnS,MAAK,qBAAG0B,UAA0B4O,MAAmB,CAAE5O,QAAS4O,EAAgB+B,KAAM,GAAIC,OAAQ,IAEvIC,EAAoBT,EAAqBne,EAAS2c,GAHf,kBAKVb,GAAgC,CACvDtC,WAAYxZ,EACZ+N,QAAS4O,EACTZ,WAAY0C,EAAuBA,EAAqBE,OAAO1b,QAAO,qBAAGqb,gBAAoC,GAC7GtC,YAAa4C,IAToB,OAK/BC,EAL+B,OAYrCJ,EAAqBE,OAASE,EAE9B1B,GAAoB,SAAAD,GAAgB,4BAC7BA,EAAiBja,QAAO,qBAAG8K,UAA0B4O,MADxB,CAEhC8B,OAGJ1B,GAAkB,GAnBmB,kDAqBrChgB,QAAQlB,MAAM,yCAAd,MArBqC,0DAAD,sDAuBzC,CAACsiB,EAAsBne,EAAS2c,IAE7BmC,GAAcva,sBAAW,uCAAC,WAAOvE,GAAP,qCAAA5E,EAAA,6DAAgBuhB,EAAhB,yCAElBpP,EAAWoP,EAAiB,CAACoC,GAAmB1S,MAAK,qBAAG0B,UAA0B4O,MAAmBoC,GAEvGC,EAAiB,EACfC,EAAgB1R,EAAShS,OALP,SAOKwC,QAAQ6Y,IAAIrJ,EAASjR,IAAT,uCAAa,2CAAAlB,EAAA,6DAAS2S,EAAT,EAASA,QAASE,EAAlB,EAAkBA,iBAAlB,kBAExBkN,GAAYxN,GAAgBI,EAAS,SAAU/N,EAASiO,GAFhC,UAExC8L,EAFwC,gDAGzB,MAHyB,gBAKnBrU,OAAOwZ,OAAOnF,GAAS,GAA1C2E,EALsC,EAKtCA,KAAMS,EALgC,EAKhCA,SAERP,EAAoBT,EAAqBne,EAAS+N,GAClD4Q,EARwC,sBASvCQ,EAAS7iB,KAAI,qBAAGqiB,OAAoBriB,KAAI,qBAAGsJ,aAAsB2L,KAAK,IAT/B,YAUvCqN,IAVuC,kBAavC,CACH7Q,UACA2Q,OACAC,WAhB0C,kCAmB9C5hB,QAAQlB,MAAM,qBAAd,MACAmjB,IApB8C,0DAAb,wDAPjB,UAOlBR,EAPkB,OA6BnBvb,QAAO,SAAAqE,GAAI,OAAIA,KACd8X,EAAkBZ,EAAcliB,KAAI,qBAAGyR,WAGzC8O,EAAerT,UAAYxJ,EAjCP,sDAmCxBmd,GAAoB,SAAAD,GAAgB,4BAC7BA,EAAiBja,QAAO,gBAAG8K,EAAH,EAAGA,QAAH,OAAkBqR,EAAgBrZ,SAASgI,OADtC,YAE7ByQ,OAGF7B,GAAgB4B,GAAyBC,KAE1CQ,GAAkBC,GA1CE,uBA0CmB,IAAIvjB,MAAM,mCA1C7B,kCA2CjB,GA3CiB,yCA6CxBqB,QAAQlB,MAAR,MACA2P,EAAS,KAAM3O,QAAS,CAAEhB,OAAO,IA9CT,mBA+CjB,GA/CiB,0DAAD,sDAiD5B,CAACsiB,EAAsBI,GAA0B/S,IAE9C6T,GAAsB9a,sBAAW,uCAAC,WAAOvE,GAAP,qCAAA5E,EAAA,yDAAgBuhB,EAAhB,yCAE1B3O,EAAY2O,EAAiB,CAACoC,GAAmB1S,MAAK,qBAAG0B,UAA0B4O,MAAmBoC,GAExGC,EAAiB,EAEC,KADhBC,EAAgBjR,EAAUpB,QAAO,SAACC,EAAKC,GAAN,OAAeA,EAAKkB,UAAUzS,OAASsR,IAAK,IALnD,0CAMA,GANA,uBAOA9O,QAAQ6Y,IAAI5I,EAAU1R,IAAV,uCAAc,mCAAAlB,EAAA,6DAAS2S,EAAT,EAASA,QAASC,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,aAA7B,SACnCnQ,QAAQ6Y,IAAI5I,EAAU1R,IAAV,uCAAc,WAAM+e,GAAN,eAAAjgB,EAAA,+EAEf+f,GAAYxN,GAAgBI,EAASsN,EAAUrb,EAAsB,QAAbqb,EAAqBnN,EAAe,MAF7E,cAE/B6L,EAF+B,yBAG9BA,EAAUrU,OAAOwZ,OAAOnF,GAAS,GAAK,MAHR,gCAKrChd,QAAQlB,MAAM,qBAAd,MACAmjB,IANqC,yDAAd,wDADuB,cAChDpI,EADgD,OASjD3T,QAAO,SAAAqE,GAAI,OAAIA,KAAMiK,OAT4B,kBAW/CqF,EAAIrb,OAAS,CAChBwS,UACAC,UAAW4I,EACNta,KAAI,qBAAG6iB,SACK7iB,KAAI,kBACR,CAAEkK,MADM,EAAGA,MACFmY,OADD,EAAUA,OACMriB,KAAI,qBAAGsJ,UAAqB2L,KAAK,UAGjEA,KAAK,IACV,MApBkD,2CAAd,wDAPZ,UAO1B+N,EAP0B,OA4B3Brc,QAAO,SAAAqE,GAAI,OAAIA,KACd8X,EAAkBE,EAAiBhjB,KAAI,qBAAGyR,WAG5C8O,EAAerT,UAAYxJ,EAhCC,sDAkChCqd,GAA4B,SAAAkC,GAAmB,4BACxCA,EAAoBtc,QAAO,gBAAG8K,EAAH,EAAGA,QAAH,OAAkBqR,EAAgBrZ,SAASgI,OAD9B,YAExCuR,OAGP9D,GAA0BxM,KAAKC,QAC3B+P,GAAkBC,GAxCU,uBAwCW,IAAIvjB,MAAM,4CAxCrB,kCAyCzB,GAzCyB,yCA2ChCqB,QAAQlB,MAAR,MACA2P,EAAS,KAAM3O,QAAS,CAAEhB,OAAO,IA5CD,mBA6CzB,GA7CyB,0DAAD,sDA+CpC,CAAC2P,IAEEgU,GAAyBjb,uBAAY,WAClCvE,IACA0J,SAASuR,KAAY6B,GAAkBgC,GAAY9e,EAAS2c,MAClE,CAACG,EAAkB9c,EAAS8e,GAAanC,IAEtC8C,GAA4B,uCAAG,sBAAArkB,EAAA,yDAC5B4E,EAD4B,sDAE5BgP,KAAKC,MAAQuM,GAA2B,MAAUwB,EAFtB,gCAEiDqC,GAAoBrf,EAAS2c,GAF9E,2CAAH,qDAM5B+C,GAAsB,SAAAxC,GACxB,IAAMyC,EAAaja,OAAOwZ,OAAOhC,GAAkB5gB,KAAI,qBAAGqiB,UAAqBpN,KAAK,GAEpF6G,GADqBuH,EAAWrjB,KAAI,kBAA0B,CAAEC,QAA5B,EAAGA,QAAkC8G,KAArC,EAAY8R,YHhGjD,SAAwBvP,GAC3BA,EAAOqG,SAAQ,gBAAG1P,EAAH,EAAGA,QAAS4Y,EAAZ,EAAYA,OAAQ8C,EAApB,EAAoBA,SAApB,OAAmCb,GAAY7a,EAAQ0C,eAAiB,CAACkW,EAAQ8C,MGiG5F2H,CAAeD,IA0InB,OA1GAjb,qBAAU,WAAM,4CAGZ,sBAAAtJ,EAAA,yDACS4E,EADT,wDAEI+c,GAAkB,GAFtB,SAGc+B,GAAY9e,GAH1B,kCAGoC+c,GAAkB,GAHtD,4CAHY,kEASZ,sBAAA3hB,EAAA,yDACS4E,EADT,wDAEIid,GAAoB,GAFxB,SAGcoC,GAAoBrf,GAHlC,kCAG4Cid,GAAoB,GAHhE,4CATY,sBACZJ,EAAerT,QAAUxJ,EADb,mCAeZ6f,GAfY,mCAgBZC,KACD,CAAC9f,EAAS8e,GAAaO,KAG1B3a,qBAAU,WACN,IACI,IAAMkB,EAASsX,EAAiB7Q,MAAK,qBAAG0B,UAA0B4O,KAC9D/W,GAAQgY,EAAUhY,EAAO+Y,QAE7B,IAAMoB,EAAoB7C,EAAiB5gB,KAAI,YAAgC,IAAD,EAA5ByR,EAA4B,EAA5BA,QAAS2Q,EAAmB,EAAnBA,KAEjDvE,EAFoE,EAAbwE,OACrC/R,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKqN,aAAY,IAC1C,UAAGuE,EAAKrS,MAAK,kBAAyB,SAAzB,EAAG7F,gBAAhB,aAAG,EAA4CvB,OAC1E,IAAKkV,EAAY,MAAO,CACpBpM,UACAuP,MAAO,CACHC,KAAM,EACNC,UAAW,EACXvF,SAAU,OAIlB,MAA8BtC,OAAOwE,EAAW/Z,YAAYyI,QAAQ,GAAG8L,MAAM,KAA7E,mBAAO6I,EAAP,KAAkBvF,EAAlB,KACA,MAAO,CACHlK,UACAuP,MAAO,CACHC,KAAMpD,EACNqD,UAAW7H,OAAO6H,GAAWwC,eAAe,SAC5C/H,gBAKN8B,EAAUgG,EAAkB1T,MAAK,qBAAG0B,UAA0B4O,KAChE5C,IACA0D,EAAW1D,GACX4D,EAAiBoC,EAAkB9c,QAAO,qBAAG8K,UAA0B4O,OAG3E+C,GAAoBxC,GAEpB,IAC8B,EADxB+C,EAAiB7C,EAAyB/Q,MAAK,qBAAG0B,UAA0B4O,KAClF,GAAI/W,GAAUqa,EACVpC,EAAa,CACT,CACIrX,MAAO,SACPmY,OAAQ/Y,EAAO+Y,SAHX,mBAKLsB,EAAejS,UAAU/K,QAAO,kBAAyB,SAAzB,EAAGuD,YAE1CuX,GAAgB,UAAAkC,EAAejS,UAAU3B,MAAK,kBAAyB,SAAzB,EAAG7F,gBAAjC,eAAgEmY,SAAU,IAEhG,MAAM9G,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAASqM,EAAEhb,QAAUgb,EAAG,CAAEhc,OAAO,OAEtC,CAAC8gB,EAAgBO,EAAkBE,EAA0B5R,IAGhE9G,qBAAU,WACN8a,OACD,CAAC7C,EAAgB6C,KAIpB9a,qBAAU,WACN,IAAMwb,EAAkBC,YAAYX,GAAwB,KAC5D,OAAO,kBAAMY,cAAcF,MAC5B,CAACV,KAGJ9a,qBAAU,WACN,IAGMwb,EAAkBC,aAHA,kBAAMzW,SAASuR,MAAY6B,EAC7CgC,GAAY9e,EAAS2c,GACrB,OAC+C,MACrD,OAAO,kBAAMyD,cAAcF,MAC5B,CAAClgB,EAAS2c,EAAgBG,EAAkBgC,KAG/Cpa,qBAAU,WACN,IAAMwb,EAAkBC,aAAY,kBAAM5B,GAAyBrB,KAAmB,KACtF,OAAO,kBAAMkD,cAAcF,MAC5B,CAAC3B,GAA0BrB,IAG9BxY,qBAAU,WAEN,OADAgF,SAASC,iBAAiBuR,GAAkBsE,IAAwB,GAC7D,kBAAM9V,SAASE,oBAAoBsR,GAAkBsE,IAAwB,MACrF,CAACA,KAEG,CACH1C,mBACAE,sBACAjD,UACA2D,gBACA9X,SACAoW,cACAhO,YACA8P,eACA2B,gCACAY,gBAjJoB,SAAAhC,GACpB,IAAQ9hB,EAA0B8hB,EAA1B9hB,QAAS8G,EAAiBgb,EAAjBhb,KAAM8R,EAAWkJ,EAAXlJ,OACvB,GAAI6G,EAAY1f,KAAI,qBAAGC,WAAuBwJ,SAASxJ,GAAU,OAAOiP,EAAS,GAAD,OAAInI,EAAJ,aAAa8R,EAAb,uCAChF,GAAIzP,OAAOwZ,OAAO/C,IAAW5K,KAAK,GAAGjV,KAAI,qBAAGC,WAAuBwJ,SAASxJ,GAAU,OAAOiP,EAAS,GAAD,OAAInI,EAAJ,aAAa8R,EAAb,yCACrG,GAAIvP,EAAOtJ,KAAI,qBAAGC,WAAuBwJ,SAASxJ,GAAU,OAAOiP,EAAS,oBAAD,OAAqBnI,EAArB,aAA8B8R,EAA9B,sBAE3E,IAAMmL,EAAkB,sBACjBtE,GADiB,4BAGbqC,GAHa,IAIhBkC,YAAa,SAIrBrC,EAAeoC,GACf9U,EAAS,GAAD,OAAInI,EAAJ,aAAa8R,EAAb,mCAmIRqL,mBAhIuB,SAAAjkB,GACvB,IAAM0T,EAAQ+L,EAAY3P,MAAK,SAAAd,GAAC,OAAIA,EAAEhP,UAAYA,KAClD,IAAK0T,EAAO,OAAOzE,EAAS,GAAD,OAAIjP,EAAJ,oCAE3B,IAAM+jB,EAAqBtE,EAAY/Y,QAAO,SAAAsI,GAAC,OAAIA,EAAEhP,UAAYA,KAEjE2hB,EAAeoC,GACf9U,EAAS,GAAD,OAAIyE,EAAM5M,KAAV,aAAmB4M,EAAMkF,OAAzB,sCC5QT,SAASsL,KACd,MAA8B,qBAAfC,WAA8BA,UAAUC,UAAU1hB,cAAc8G,SAAS,W,wBCMpF6a,GAAO,kBAAM,MACbC,GAAqB,CAAEC,WAAYF,GAAMG,WAAYH,GAAMI,cAAeJ,IAG1EK,GAAoB,CAAC,sBAAuB,gBAAiB,gBAAiB,YAKhFC,GAAa,GACbC,GAAmB,GAIjBC,GAAiB,SAAAC,GAEnB,OADeF,GAAiBle,QAAO,SAAAuJ,GAAC,OAAIA,EAAE6U,MAAQA,KACxChV,MAAK,wEAAY,GAATiV,EAAH,EAAGA,KAAH,OAAmBA,EAAQtS,KAAKC,MAHtB,QAQlB,SAASsS,GAAT,GAAmG,IAAtEvhB,EAAqE,EAArEA,QAAStB,EAA4D,EAA5DA,QAAS8iB,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,WAAY9E,EAAc,EAAdA,WACvFpR,EAAa6B,IAAb7B,SAGFmW,EAAW1X,mBACjB0X,EAASnY,QAAU,CAAExJ,UAAStB,WAE9B,MAAwCke,EAAW,CAAEoB,IAzBrC,cAyBhB,mBAAO4D,EAAP,KAAqBC,EAArB,KAEA,EAA0BC,sBAAW,SAACrd,EAAOuO,GACzC,GAAoB,sBAAhBA,EAAO9L,KAA8B,OAAO,2BAAKzC,GAAZ,IAAmBsd,YAAa/O,EAAO+O,cAChF,GAAoB,wBAAhB/O,EAAO9L,KACP,OAAO,2BACAzC,GADP,IAEIsd,YAAY,GAAD,mBAAMtd,EAAMsd,aAAZ,CAAyB,CAAEV,IAAKrO,EAAOqO,IAAKW,QAAShP,EAAOgP,QAASC,WAAW,OAGnG,GAAoB,iBAAhBjP,EAAO9L,KACP,OAAO,2BACAzC,GADP,IAEIsd,YAAatd,EAAMsd,YAAY9e,QAAO,SAAAuJ,GAAC,OAAIA,EAAE6U,MAAQrO,EAAOqO,SAGpE,GAAoB,uBAAhBrO,EAAO9L,KAA+B,CACtC,GAAIzC,EAAMyd,SAAS7V,MAAK,qBAAGvH,KAAgBkO,EAAOmP,aAAard,GAAK,QAAO,OAAO,eAAKL,GAEvF,IAAM2d,EAAc,GACpB,IAAK,IAAIC,KAAMrP,EAAOmP,aAAazL,KAC/B0L,EAAYvhB,KAAZ,2BACOmS,EAAOmP,cADd,IAEIjb,KAAM,sBACNob,SAAS,EACTxd,GAAIkO,EAAOmP,aAAard,GAAK,IAAMud,EACnCriB,UACAvB,IAAI,2BACGuU,EAAOmP,aAAazL,KAAK2L,IAD7B,IAECjlB,KAAM4C,OAKlB,OAAO,2BAAKyE,GAAZ,IAAmByd,SAAS,GAAD,mBAAMzd,EAAMyd,UAAaE,KAExD,MAAoB,iBAAhBpP,EAAO9L,KACHzC,EAAMyd,SAAS7V,MAAK,qBAAGvH,KAAgBkO,EAAOvX,QAAQqJ,MAAY,eAAKL,GACpE,2BAAKA,GAAZ,IAAmByd,SAAS,GAAD,mBAAMzd,EAAMyd,UAAZ,CAAsBlP,EAAOvX,YAExC,qBAAhBuX,EAAO9L,KACA,2BACAzC,GADP,IAEIyd,SAAUzd,EAAMyd,SAASjf,QAAO,SAAAuJ,GAAC,OAAKwG,EAAOuP,IAAIxc,SAASyG,EAAE1H,SAG7D,eAAKL,KACb,MAAM,WACL,IAAKmd,EAAc,MArEI,CAAEG,YAAa,GAAIG,SAAU,IAsEpD,IACI,OAAO,2BAvEY,CAAEH,YAAa,GAAIG,SAAU,KAyEzCN,GAET,MAAM/J,GAEJ,OADA9a,QAAQlB,MAAMgc,GA5EK,CAAEkK,YAAa,GAAIG,SAAU,QAuBxD,mBAAOzd,EAAP,KAAc+d,EAAd,KA2DMC,EAAsB,WAExB,IAAIC,GAAoB,EACxBje,EAAMsd,YAAY9V,SAAQ,YAAkC,IAA/BoV,EAA8B,EAA9BA,IAAcY,GAAgB,EAAzBD,QAAyB,EAAhBC,WACvC,GAAIf,GAAWG,GAAM,CACjB,IAAMsB,EAAYzB,GAAWG,GACvBW,EAAUW,EAAUX,QACtBA,EAAQ3lB,SAAS,KAAO2D,GAAWgiB,EAAQtjB,UAAYA,GAAW0iB,GAAeC,KAASY,IAE1FU,EAAUC,cAAc,CAAEvmB,SAAU,CAAC2D,GAAUtB,YAC/CgkB,GAAoB,OAKhCb,EAAgBpd,GAEZie,GAAmBF,EAAS,CAC5Btb,KAAM,oBACN6a,YAAatd,EAAMsd,YACd9e,QAAO,gBAAGoe,EAAH,EAAGA,IAAH,OAAaH,GAAWG,MAC/B/kB,KAAI,gBAAG+kB,EAAH,EAAGA,IAAH,MAAc,CAAEA,MAAKW,QAASd,GAAWG,GAAKW,QAASC,UAAWb,GAAeC,UAGlG3c,oBAAU+d,EAAqB,CAACziB,EAAStB,EAAS+F,EAAOod,IAEzDF,EAASnY,QAAQiZ,oBAAsBA,EAGvC,IAAMI,EAAUte,uBAAY,SAAAue,GACxB,GAAI5B,GAAW4B,EAAczB,KAEzB,OADA7V,EAAS,0BACF0V,GAAW4B,EAAczB,KAEpC,IAAIsB,EACJ,IACIA,EAAYzB,GAAW4B,EAAczB,KAAO,IAAI0B,KAAkB,CAC9DD,gBACAE,aACAC,eAAgBpC,KAEtB,MAAMhJ,GAGJ,OAFA9a,QAAQlB,MAAMgc,GACdrM,EAAS,wBAAD,OAAyBsX,EAAczB,IAAvC,aAA+CxJ,EAAEhb,SAAW,CAAEhB,OAAO,IACtE,KAGX,IAKIqnB,EACAC,EANEC,EAAU,SAAApnB,GACZwP,EAAS,wBAAD,OAA0BmX,EAAUX,SAAWW,EAAUX,QAAQqB,UAAYV,EAAUX,QAAQqB,SAAShgB,KAAxG,YAAiHrH,EAAIa,SAAWb,GAAO,CAAEH,OAAO,IACxJkB,QAAQlB,MAAM,sBAAuBG,IA8JzC,OAzJK2mB,EAAUX,QAAQqB,WAAUF,EAAiBhlB,YAAW,WACzD,IAAMmlB,EAAa,sCAAsCjf,KAAKse,EAAUX,QAAQuB,QAE1E,oFACA,gEACDZ,EAAUX,QAAQqB,UAAU7X,EAAS,qCAAD,OAAsC8X,GAAc,CAAEznB,OAAO,MA/I1F,MAkJhB8mB,EAAUa,GAAG,mBAAmB,SAAC3nB,EAAO4nB,GACpC,GAAI5nB,EACAunB,EAAQvnB,OADZ,CAQA,GAFA0C,aAAa4kB,GAETR,EAAUX,QAAQqB,SAASjiB,IAAI2E,SAAS,uBAAwB,CAChE,IAAMlJ,EAAU,6DAGhB,OAFA8lB,EAAUe,cAAc,CAAE7mB,iBAC1B2O,EAAS3O,EAAS,CAAEhB,OAAO,IAK/BqnB,EAAelU,KAAKC,MACpB0T,EAAUgB,eAAe,CACrBtnB,SAAU,CAACslB,EAASnY,QAAQxJ,SAC5BtB,QAASijB,EAASnY,QAAQ9K,UAI9B8jB,EAAS,CAAEtb,KAAM,sBAAuBma,IAAKyB,EAAczB,IAAKW,QAASW,EAAUX,UAEnFxW,EAAS,6BAA6BmX,EAAUX,QAAQqB,SAAShgB,UAGrEsf,EAAUa,GAAG,mBAAmB,SAAC3nB,EAAO4nB,GACpC1mB,QAAQlB,MAAM,gCAAiC4nB,GAC/CtC,GAAiBtgB,KAAK,CAAEwgB,IAAKyB,EAAczB,IAAK9X,MAAOka,EAAQla,MAAO+X,KAAMtS,KAAKC,QAEjFkS,GAAmBA,GAAiB9P,OAAO,KAC3CsQ,EAASnY,QAAQiZ,yBAGrBE,EAAUa,GAAG,gBAAgB,SAAC3nB,EAAO4nB,GACjC,GAAI5nB,EACAunB,EAAQvnB,OADZ,CAQA,GAAuB,sBAAnB4nB,EAAQliB,OAAgC,CAExC,IAAMqiB,EAAcpiB,KAAKqiB,MAAMJ,EAAQ1hB,OAAO,IACd,oBAA5B6hB,EAAYE,cACZL,EAAO,2BACAA,GADA,IAEHliB,OAAQ,sBACRQ,OAAQ,CAAC,CACL+N,GAAI8T,EAAYG,OAAOC,kBACvB5mB,KAAMwmB,EAAY/mB,QAAQO,KAC1BkK,KAAMsc,EAAY/mB,QAAQonB,kBAC1Bhf,MAAO2e,EAAY/mB,QAAQoI,OAAS,WAKpD,GAAuB,kBAAnBwe,EAAQliB,QAAiD,gCAAnBkiB,EAAQliB,OAAlD,CAaA,GAAuB,+BAAnBkiB,EAAQliB,OAAyC,CACjD,IAKO,EALD2iB,EAAmBzC,EAAYpV,MAAK,SAAAjR,GAAC,OAAIA,EAAEsD,UAAYY,SAASmkB,EAAQ1hB,OAAO,GAAGrD,QAAS,OAEjG,GAAIwlB,EACAxC,EAAWwC,EAAiBxlB,SAC5BikB,EAAUwB,eAAe,CAAErf,GAAI2e,EAAQ3e,GAAI6U,OAAQ,CAAEjb,QAASwlB,EAAiBxlB,gBAG/E8M,EAAS,iDAAD,iBAAkDiY,EAAQ1hB,OAAO,UAAjE,aAAkD,EAAmBrD,SAAW,CAAE7C,OAAO,IACjG8mB,EAAUyB,cAAc,CAAEtf,GAAI2e,EAAQ3e,GAAIjJ,MAAO,CAAEgB,QAAS,uBAGpE,IAAKokB,GAAkBlb,SAAS0d,EAAQliB,QAQpC,MAP0C,yBAAnBkiB,EAAQliB,QACxBohB,EAAUX,QAAQqB,UAClBV,EAAUX,QAAQqB,SAAShgB,KAAK0C,SAAS,YAG3ByF,EAAS,sCAAD,OAAuCiY,EAAQliB,QAAU,CAAE1F,OAAO,SAC/F8mB,EAAUyB,cAAc,CAAEtf,GAAI2e,EAAQ3e,GAAIjJ,MAAO,CAAEgB,QAAS,yBAA2B4mB,EAAQliB,UAUnG,GANuB,wBAAnBkiB,EAAQliB,QAAoCkiB,EAAQ1hB,OAAO,IAAM0hB,EAAQ1hB,OAAO,GAAG3E,MAChFqmB,EAAQ1hB,OAAO,GAAG3E,KAAK6B,gBAAkB0jB,EAAUX,QAAQ3lB,SAAS,GAAG4C,eAEvD,aAAnBwkB,EAAQliB,QAAyBkiB,EAAQ1hB,OAAO,IAC7C0hB,EAAQ1hB,OAAO,GAAG9C,gBAAkB0jB,EAAUX,QAAQ3lB,SAAS,GAAG4C,cAKrE,OAFAuM,EAAS,8CAAD,OAA+CiY,EAAQ1hB,OAAO,GAAG3E,MAAQ,CAAEvB,OAAO,SAC1F8mB,EAAUyB,cAAc,CAAEtf,GAAI2e,EAAQ3e,GAAIjJ,MAAO,CAAEgB,QAAS,0CAGhE2lB,EAAS,CAAEtb,KAAM,eAAgBzL,QAAS,CACtCqJ,GAAI2e,EAAQ3e,GACZoC,KAAMuc,EAAQliB,OACd8iB,MAAOvB,EAAczB,IACrB5iB,IAAwB,aAAnBglB,EAAQliB,OAAwBkiB,EAAQ1hB,OAAO,GAAK0hB,EAAQ1hB,OAAO,GACxErD,QAASikB,EAAUX,QAAQtjB,QAC3BsB,QAAS2iB,EAAUX,QAAQ3lB,SAAS,GACpCioB,cAAc,UArDd9B,EAAS,CAAEtb,KAAM,qBAAsBib,aAAc,CAC7Crd,GAAI2e,EAAQ3e,GACZoC,KAAMuc,EAAQliB,OACd8iB,MAAOvB,EAAczB,IACrB3K,KAAM+M,EAAQ1hB,OACdrD,QAASikB,EAAUX,QAAQtjB,QAC3BsB,QAAS2iB,EAAUX,QAAQ3lB,SAAS,GACpCioB,cAAc,SAkD9B3B,EAAUa,GAAG,cAAc,SAAC3nB,EAAO4nB,GAC3B5nB,EACAunB,EAAQvnB,IAIZ0C,aAAa4kB,GAKbX,EAAS,CAAEtb,KAAM,eAAgBma,IAAKyB,EAAczB,MACpDH,GAAW4B,EAAczB,KAAO,KAI5B6B,GAAiBlU,KAAKC,MAAQiU,EA1RtB,IA2RR1X,EAAS,mFAAoF,CAAE3P,OAAO,IAEtG2P,EAAS,GAAD,OAAImX,EAAUX,QAAQqB,SAAShgB,KAA/B,0BAAqDogB,EAAQ1hB,OAAO,GAAGlF,cAIvF8lB,EAAUa,GAAG,QAASJ,GAEfT,IACR,CAACnX,EAAUiW,EAAaC,IAErB6C,EAAahgB,uBAAY,SAAA8c,GAGvBH,GAAWG,KACXH,GAAWG,GAAKmD,cAChBtD,GAAWG,GAAO,MAEtBmB,EAAS,CAAEtb,KAAM,eAAgBma,UAClC,IA6BH,OAXA3c,qBAAU,WACND,EAAMsd,YAAY9V,SAAQ,YAAuB,IAApBoV,EAAmB,EAAnBA,IAAKW,EAAc,EAAdA,QACzBd,GAAWG,IAAMwB,EAAQ,CAAExB,MAAKW,iBAI1C,CAACa,IAGJne,qBAAU,kBAYd,SAAwB+f,EAAWzkB,EAASwhB,EAAYhW,GAChDgW,IACIxhB,EAASykB,EAAU,CAAEpD,IAAKG,IACzBhW,EAAS,kHAAmH,CAAEhB,QAAS,QAIhJyC,OAAOwX,UAAY,SAAApD,GAAG,OAAIoD,EAAU,CAAEpD,SAGtC,IAAMqD,EAAiB,SAAA7M,GAAC,OAAI9a,QAAQC,IAAI,yCAA0C6a,EAAEhb,UAC9E8nB,EAAgB,uCAAG,4BAAAvpB,EAAA,yDAChB4E,EADgB,qDAEjBygB,KAFiB,0EAIOC,UAAUkE,UAAUC,WAJ3B,QAIXD,EAJW,QAKHnM,WAAW,SAAWyI,GAAW0D,IAAYH,EAAU,CAAEpD,IAAKuD,IAL3D,kDAMRF,EAAe,EAAD,IANN,0DAAH,qDAWtB,OAFAC,IACA1X,OAAOtD,iBAAiB,QAASgb,GAC1B,kBAAM1X,OAAOrD,oBAAoB,QAAS+a,IAlCjCG,CAAejC,EAAS7iB,EAASwhB,EAAYhW,KAAW,CAACqX,EAAS7iB,EAASwhB,EAAYhW,IAEhG,CACHuW,YAAatd,EAAMsd,YACnBG,SAAUzd,EAAMyd,SAChB6C,YA9BgB,SAACxC,EAAKyC,GACtBvgB,EAAMyd,SAASjW,SAAQ,YAA6B,IAA1BnH,EAAyB,EAAzBA,GAAIuf,EAAqB,EAArBA,MAAO/B,EAAc,EAAdA,QACjC,GAAIC,EAAIxc,SAASjB,GAAK,CAClB,IAAM6d,EAAYzB,GAAWmD,GAC7B,IAAK1B,EAAW,OAChB,IAAKL,GAAWxd,EAAGmgB,SAAS,MAAO,CAC/B,IAAIC,EAAS5C,EAAUxd,EAAG3F,OAAO,EAAG2F,EAAGqgB,YAAY,MAAQrgB,EACvDkgB,EAAWpL,QAAS+I,EAAUwB,eAAe,CAAErf,GAAIogB,EAAQvL,OAAQqL,EAAWrL,SAC7EgJ,EAAUyB,cAAc,CAAEtf,GAAIogB,EAAQrpB,MAAO,CAAEgB,QAASmoB,EAAWnoB,gBAIpF2lB,EAAS,CAAEtb,KAAM,mBAAoBqb,SAmBrCM,UAAS0B,cCpVF,SAASa,GAAehkB,GACrC,MAAgCyC,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAAwBzhB,mBAAS,MAAjC,mBAAOyD,EAAP,KAAaie,EAAb,KACA,EAAsB1hB,mBAAS,MAA/B,mBAAO7H,EAAP,KAAYwpB,EAAZ,KACMC,EAAUxb,iBAAO,IAEjByb,EAAanhB,sBAAW,sBAAC,kCAAAnJ,EAAA,sEACQ0G,EAAYV,GADpB,mBACrBY,EADqB,EACrBA,KAAMX,EADe,EACfA,KAAMY,EADS,EACTA,QAEhBD,GAAwB,MAAhBA,EAAKH,OAHY,0CAIpBR,GAJoB,cAM3BtE,QAAQC,IAAI,oBAAqB,CAAEgF,OAAMX,OAAMY,WACzC,IAAIvG,MAAMuG,GAAM,sBAAmBD,GAAQA,EAAKH,SAP3B,4CAS5B,CAACT,IA8BJ,OA5BAsD,qBAAU,WACR,GAAKtD,EAAL,CAIA,IAAIukB,EAAiB,KACfC,EAAa,SAAApZ,GAAC,OAAIA,EAAEmI,MAAM,KAAK,IACjCiR,EAAWH,EAAQjc,WAAaoc,EAAWxkB,KAC7CukB,EAAiBxnB,YAAW,kBAAMonB,EAAQ,QA3BvB,MA6BrBE,EAAQjc,QAAUpI,EAElB,IAAIykB,GAAW,EAUf,OATAP,GAAW,GACXE,EAAO,MACPE,IACGhpB,MAAK,SAAA4K,GAAI,OAAKue,GAAYJ,EAAQjc,UAAYpI,GAAOmkB,EAAQje,MAC7DvL,OAAM,SAAA8b,GAAC,OAAKgO,GAAYL,EAAO3N,EAAEhb,SAAWgb,MAC5Cnb,MAAK,WACJ6B,aAAaonB,IACZE,GAAYP,GAAW,MAErB,WACLO,GAAW,EACXtnB,aAAaonB,OAEd,CAACvkB,EAAKskB,IAEF,CAAEpe,OAAM+d,YAAWpjB,OAAQjG,G,aC7C9B8pB,GAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACpBC,EAAaD,GAAoC,WAArBA,EAAY9e,KAAoB,SAAW8e,GAAoC,WAArBA,EAAY9e,KAAoB,SAAW,OACvI,OAAO6e,EAAK,6BAAyBA,GAAzB,0BAAsDE,EAAtD,MAEVC,GAAS,SAAAC,GAAI,OAAIC,UAAgB,CAAED,SAAQE,aAwFlCC,GAtFQ,SAAC,GAA8B,IAA5BjqB,EAA2B,EAA3BA,SAAUugB,EAAiB,EAAjBA,WACxBpR,EAAa6B,IAAb7B,SACR,EAAgDoR,EAAW,CAAEoB,IAAK,YAAaC,aAAc,KAA7F,mBAAOsI,EAAP,KAAyBC,EAAzB,KAEMC,EAAcngB,mBAAQ,WACxB,IACI,IAAMxK,EAAYyqB,EAClB,IAAKG,MAAMC,QAAQ7qB,GAAY,MAAM,IAAIJ,MAAM,kCAC/C,MAAM,GAAN,mBACOW,EAASC,KAAI,SAAA0D,GAAO,MAAK,CACxBkD,WAAW,EACXG,KAAMyiB,GAAY9lB,GAClBzD,QAASyD,EAAQ8E,GACjB1B,KAAM8iB,GAAOlmB,EAAQ8E,SAL7B,YAOOhJ,EAAUQ,KAAI,SAAAsqB,GAAK,kCACfA,GADe,IAElBxjB,KAAM8iB,GAAOU,EAAMrqB,gBAG7B,MAAOsb,GAEL,OADA9a,QAAQlB,MAAM,+BAAgCgc,GACvC,MAEZ,CAACxb,EAAUkqB,IAEd,EAAkC1iB,oBAAS,kBAAM4iB,KAAjD,mBAAO3qB,EAAP,KAAkB+qB,EAAlB,KAEMC,EAAkBviB,uBAAY,SAAAzI,GAChC+qB,EAAa/qB,EAAUQ,KAAI,SAAAsqB,GAAK,kCACzBA,GADyB,IAE5BxjB,KAAM8iB,GAAOU,EAAMrqB,eAEvBiqB,EAAoB1qB,EAAUmH,QAAO,qBAAGC,gBACzC,CAAC2jB,EAAcL,IAEZtgB,EAAiB3B,uBAAY,SAAAhI,GAAO,MAAI,sBACvCT,EAAUQ,KAAI,gBAAGC,EAAH,EAAGA,QAAH,OAAiBwqB,kBAAOxqB,OADC,YAEvCF,EAASC,KAAI,gBAAGwI,EAAH,EAAGA,GAAH,OAAYiiB,kBAAOjiB,QACrCiB,SAASghB,kBAAOxqB,MAAW,CAACT,EAAWO,IAEnCqH,EAAaa,uBAAY,SAAClB,EAAM9G,GAClC,IAAK8G,IAAS9G,EAAS,MAAM,IAAIb,MAAM,4CACvC,IAAK4J,EAAe/I,GAAU,MAAM,IAAIb,MAAM,wCAC9C,GAAI6J,EAAuBhJ,GAAU,OAAOiP,EAAS,wDAA0D,CAAE3P,OAAO,IAExH,IAAMmrB,EAAY,sBACXlrB,GADW,CAEd,CACIuH,OACA9G,aAIRuqB,EAAgBE,GAEhBxb,EAAS,GAAD,OAAIjP,EAAJ,mCACT,CAACT,EAAW0P,EAAUsb,IAEnB/jB,EAAgBwB,uBAAY,SAAClB,EAAM9G,GACrC,IAAK8G,IAAS9G,EAAS,MAAM,IAAIb,MAAM,4CACvC,IAAK4J,EAAe/I,GAAU,MAAM,IAAIb,MAAM,wCAE9C,IAAMsrB,EAAelrB,EAChBmH,QAAO,SAAA7H,GAAC,QAAMA,EAAEiI,OAASA,GAAQjI,EAAEmB,UAAYA,MAEpDuqB,EAAgBE,GAEhBxb,EAAS,GAAD,OAAIjP,EAAJ,uCACT,CAACT,EAAW0P,EAAUsb,IASzB,OAPApiB,qBAAU,WAAQmiB,EAAaJ,KAAgB,CAACpqB,EAAUoqB,IAK1D/hB,qBAAU,kBAAM0T,GAAkBtc,KAAY,CAACA,IAExC,CACHA,YACA4H,aACAX,gBACAmD,mBC3FJ+gB,GAAgBvd,SAAS/E,MACzBuiB,GAAwB,KACxBC,GAAY,GAWVC,GAAsB,WACxBhH,cAAc8G,IACdxd,SAAS/E,MAAQsiB,IAgCNI,GA7Ba,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,iBAAkBC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cACzDC,EAAWC,wBACjB,EAAkCra,IAA1B7B,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,YAEZqc,EAAqBpjB,uBAAY,kBAAM4iB,GAAUlb,SAAQ,SAAAnH,GAAE,OAAIwG,EAAYxG,QAAM,CAACwG,IAClFsc,EAAgBthB,mBAAQ,kBAAMmhB,EAASI,SAASpP,WAAW,aAAY,CAACgP,EAASI,WAEvFnjB,qBAAU,WAkBN,OAjBI4iB,EAAiB/rB,QAAUqsB,GACvBL,EAAkBI,IAElBR,GAAUtmB,KAAK2K,EAAS,oCAAqC,CACzDK,SAAU,QACVC,QAAQ,EACRhC,MAAOwd,EAAiB/rB,OACxB+H,QAAS,kBAAMkkB,QAIrBva,OAAO6a,cAA4C,WAA5BA,aAAaC,WAAiDX,KAjCzE,WACtB,IAAI/mB,EAAQ,EACZ+f,cAAc8G,IACdA,GAAwB/G,aAAY,WAChCzW,SAAS/E,OAAStE,EAAQ,IAAM,EAAI,eAAO,gBAAQ,2BACnDA,MACD,KA2BsE2nB,KAEjEL,IACAP,MAGG,kBAAMhH,cAAc8G,OAC5B,CAACS,EAAoBL,EAAkBC,EAAkBC,EAAehc,EAAUF,EAAasc,KC7ChGK,I,OAAejd,wBAAc,OAyBpBkd,GAvBO,SAAC,GAAkB,IAAhBthB,EAAe,EAAfA,SACrB,EAA0B/C,mBAAS,MAAnC,mBAAOskB,EAAP,KAAcC,EAAd,KAEMC,EAAY9jB,uBAAY,SAAC6H,GAAD,IAAUsD,EAAV,uDAAiB,CAAE4Y,cAAc,GAAjC,OAA6CF,EAAS,CAAChc,UAASsD,WAAQ,IAChG6Y,EAAYhkB,uBAAY,kBAAM6jB,EAAS,QAAO,IAEpD,OACI,eAACH,GAAa/a,SAAd,CAAuBjI,MAAO,CAAEojB,YAAWE,aAA3C,UAEQJ,EACI,sBAAKrjB,GAAG,kBAAR,UACI,qBAAK3B,UAAU,WAAWG,QAAS6kB,EAAMzY,KAAK4Y,aAAe,KAAOC,IAClEJ,EAAM/b,WAGZ,KAENxF,MClBC4hB,GADG,kBAAMlb,qBAAW2a,KCC7BQ,GAAkB,uCAAG,WAAOplB,EAAMiG,GAAb,eAAAlO,EAAA,+EAEEslB,UAAUgI,YAAYC,MAAM,CAAEtlB,SAFhC,cAEbxB,EAFa,QAGZ+mB,SAAW,kBAAMtf,EAA0B,YAAjBzH,EAAO4C,QAHrB,kBAIK,YAAjB5C,EAAO4C,OAJK,uCAMnB1H,QAAQlB,MAAR,MANmB,mBAOZ,GAPY,yDAAH,wDA0CTgtB,GA/BQ,WACnB,MAAqDhlB,oBAAS,GAA9D,mBAAOilB,EAAP,KAA6BC,EAA7B,KACA,EAAkDllB,oBAAS,GAA3D,mBAAOmlB,EAAP,KAA2BC,EAA3B,KACA,EAAwDplB,oBAAS,GAAjE,mBAAOqlB,EAAP,KAA6BC,EAA7B,KACA,EAAsCC,GAAgB,CAAEpL,IAAK,2BAA7D,mBAAOqL,EAAP,KAAoBC,EAApB,KAEMC,EAAmB,uCAAG,8BAAAnuB,EAAA,0DAC3BqlB,KAD2B,gBAE9BwI,GAAoB,GAFU,sCAIDR,GAAmB,kBAAkB,SAAAhkB,GAAK,OAAIwkB,EAAoBxkB,MAJjE,OAIxB+kB,EAJwB,OAK9BP,EAAoBO,GALU,wBAQSf,GAAmB,iBAAiB,SAAAhkB,GAAK,OAAI0kB,EAAwB1kB,MAR9E,QAQlBglB,EARkB,OASxBN,EAAwBM,GAExBV,GAAqB,GAXG,4CAAH,qDAgBzB,OAFArkB,qBAAU,kBAAM6kB,MAAuB,IAEhC,CACHP,qBACAE,uBACAJ,uBACAO,cACAC,mBC1BR,IAAMI,GAAiB,SAAC5hB,GAAD,OAAqBA,GCd7B,SAASshB,GAAT,GAA2E,IAAhDpL,EAA+C,EAA/CA,IAAKC,EAA0C,EAA1CA,aAAc0L,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QAC5E,OD0Ba,YAMyC,IALtDC,EAKqD,EALrDA,QACA7L,EAIqD,EAJrDA,IAIqD,IAHrDC,oBAGqD,MAHtC,KAGsC,MAFrD0L,uBAEqD,aADrDC,eACqD,MAD3CF,GAC2C,EACrD,EAAoB7lB,oBAAS,WAE3B,IAAKgmB,EAAQC,QAAQ9L,GAAM,OAAO4L,EAAQ3L,GAE1C,GAAI0L,EAAiB,OAAOC,EAAQC,EAAQC,QAAQ9L,IAIpD,IAAI+L,EAEJ,IACEA,EAAavoB,KAAKqiB,MAAMgG,EAAQC,QAAQ9L,IACxC,MAAOnG,GACP9a,QAAQlB,MAAR,kDAAyDmiB,GAAOnG,GAEhEkS,EAAa9L,EAGf,OAAO2L,EAAQG,MAlBjB,mBAAOjiB,EAAP,KAAakiB,EAAb,KAwCA,MAAO,CAACliB,EAnBQvD,uBAAY,SAACU,GAC3B+kB,GAAI,SAACC,GACH,IAAMC,EAA6B,oBAAVjlB,EAAuBA,EAAMglB,GAAahlB,EAEnE,GAAI0kB,GAAwC,kBAAdO,EAC5B,MAAM,IAAIxuB,MAAJ,2EAA8EwuB,EAA9E,MAKR,OAFAL,EAAQM,QAAQnM,EAAK2L,EAAkBO,EAAY1oB,KAAKC,UAAUyoB,IAE3DA,OAER,CAACL,EAAS7L,EAAK2L,IAECplB,uBAAY,WAC7BslB,EAAQO,WAAWpM,GACnBgM,EAAI,QACH,CAACH,EAAS7L,KCvENpB,CAAW,CAAEiN,QAASQ,aAAcrM,MAAKC,eAAc0L,kBAAiBC,YCEjF,IAyBeU,GAzBD,SAAC,GAAgF,IAA9E1jB,EAA6E,EAA7EA,SAAU9B,EAAmE,EAAnEA,GAAIH,EAA+D,EAA/DA,MAAO4lB,EAAwD,EAAxDA,QAAwD,IAA/CC,uBAA+C,SAAvB5mB,EAAuB,EAAvBA,QAAS6mB,EAAc,EAAdA,QACpElC,EAAcC,KAAdD,UAOR,OACI,sBAAKzjB,GAAIA,EAAI3B,UAAS,gBAAWonB,EAAU,UAAY,IAAvD,UACI,sBAAKpnB,UAAU,UAAf,UACI,qBAAKA,UAAU,QAASI,MAAOknB,EAAU,CAAEC,SAAU,SAAY,GAAjE,SAAuE/lB,IACtE8lB,GAAW,qBAAKtnB,UAAU,WAAf,SAA4BsnB,IACvCD,EAAmB,qBAAKrnB,UAAU,QAAQG,QAVlC,WACjBilB,IACA3kB,GAAWA,KAQiB,SAChB,cAAC,IAAD,MACM,gCAEd,qBAAKT,UAAU,UAAf,SAA2ByD,IACzB2jB,EACE,qBAAKpnB,UAAU,UAAf,SAA2BonB,IAC7B,SCCCI,I,OAtBA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQ3M,EAA6B,EAA7BA,aAAcpZ,EAAe,EAAfA,SACpC,EAAwChB,mBAASoa,GAAgB,MAAjE,mBAAO4M,EAAP,KAAqBC,EAArB,KAOA,OACI,qBAAK3nB,UAAU,mBAAf,SAEQynB,EAAOtuB,KAAI,WAA4BiE,GAA5B,IAAEiG,EAAF,EAAEA,MAAOvB,EAAT,EAASA,MAAOI,EAAhB,EAAgBA,SAAhB,OACP,sBAAKlC,UAAS,0BAAqB8B,IAAU4lB,EAAe,SAAW,GAAzD,YAA+DxlB,EAAW,WAAa,IAAyB/B,QAAS,kBAAO+B,GAT7I,SAAAJ,GACb6lB,EAAgB7lB,GAChBJ,GAAYA,EAASI,GAOiJ8lB,CAAS9lB,IAAnK,UACI,qBAAK9B,UAAU,UACf,gCAASqD,MAFb,gBAAyHjG,WCkB9HyqB,I,OA/BE,SAAC,GAAmE,IAAjE5lB,EAAgE,EAAhEA,MAAO6Y,EAAyD,EAAzDA,aAAcgN,EAA2C,EAA3CA,SAAUpmB,EAAiC,EAAjCA,SAC/C,GADgF,EAAvBqmB,iBAC/BrnB,mBAASoa,IAAnC,mBAAOhZ,EAAP,KAAckmB,EAAd,KAEMC,EAAa7mB,uBAAY,SAAAU,GAC3BkmB,EAASlmB,GACTJ,EAASI,KACV,CAACJ,IAMJ,OAJAH,qBAAU,WACN0mB,EAAWnN,KACZ,CAACA,EAAcmN,IAGd,qBAAKjoB,UAAS,mBAAciC,EAAQ,QAAS,IAA7C,SAEQ6lB,EAAS3uB,KAAI,SAAA+uB,GAAO,OAChB,sBAAKloB,UAAS,kBAAakoB,EAAQpmB,QAAUA,EAAQ,SAAW,IAA0B3B,QAAS,kBAAM8nB,EAAWC,EAAQpmB,QAA5H,UAEQomB,EAAQjoB,KACJ,qBAAKD,UAAU,OAAf,SAAwBkoB,EAAQjoB,OAEhC,KAENioB,EAAQpmB,QAP6DomB,EAAQpmB,cCiGxFqmB,I,OA3GA,SAAC,GAAiG,IAA/F1kB,EAA8F,EAA9FA,SAAU2kB,EAAoF,EAApFA,OAAQC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,WAAYpmB,EAAqD,EAArDA,SAAUmB,EAA2C,EAA3CA,MAAOyX,EAAoC,EAApCA,aAAcjb,EAAsB,EAAtBA,MAAO6B,EAAe,EAAfA,SACvFoE,EAAMgB,mBACNyhB,EAAkBzhB,mBAClBC,EAAgBD,mBACtB,EAA0BpG,qBAA1B,mBAAOG,EAAP,KAAe2nB,EAAf,KACA,EAA4B9nB,mBAAS,IAArC,mBAAO+nB,EAAP,KAAeC,EAAf,KACA,EAAwChoB,mBAAS,CAC7C2C,MAAO,KACPvB,MAAO,KACP7B,KAAM,OAHV,mBAAO0oB,EAAP,KAAqBC,EAArB,KAMMC,EAAgBJ,EAAOrwB,OAASyH,EAAMC,QAAO,qBAAGuD,MAAkBvH,cAAc8G,SAAS6lB,EAAO3sB,kBAAkB+D,EAElHipB,EAAa1nB,uBAAY,SAAAuD,GAC3B6jB,GAAQ,GACRE,EAAU,IACVE,EAAgBjkB,GAChBjD,EAASiD,EAAK7C,SACf,CAACJ,IAoBJ,OAlBAH,qBAAU,WACN,IAAMoD,EAAO9E,EAAMqJ,MAAK,SAAAvE,GAAI,OAAIA,EAAK7C,QAAUgZ,MAAiBjb,EAAM,GAClE8E,GAASgkB,EAAa7mB,QAAU6C,EAAK7C,OAAQgnB,EAAWnkB,KAC7D,CAAC9E,EAAOib,EAAc6N,EAAcG,IAEvCvnB,qBAAU,WACN,IAAK1B,EAAMzH,OAAQ,OAAOwwB,EAAgB,MAC3C,CAAC/oB,IAEJ0B,qBAAU,WACFV,GAAUynB,IACVC,EAAgBliB,QAAQ0iB,QACxBL,EAAU,OAEf,CAAC7nB,EAAQynB,IAEZriB,EAAkBH,GAAK,kBAAM0iB,GAAQ,MAGhCJ,EAuDG,wBAAQpoB,UAAU,SAASkC,SAAUA,EAAUR,SAAU,SAAAsnB,GAAE,OAAItnB,EAASsnB,EAAGzlB,OAAOzB,QAAQgZ,aAAcA,EAAxG,SAEQjb,EAAM1G,KAAI,SAAAwL,GAAI,OACV,wBAAyB7C,MAAO6C,EAAK7C,MAArC,SACM6C,EAAKtB,OAASsB,EAAK7C,OADZ6C,EAAK7C,YAzD9B,sBAAK9B,UAAS,iBAAYqoB,EAAY,YAAa,GAArC,YAA2CnmB,EAAW,WAAa,GAAnE,YAAyEomB,EAAa,aAAe,IAAMxiB,IAAKA,EAA9H,UAEQzC,EACI,gCAASA,IAET,KAGJslB,EACI,sBAAK3oB,UAAU,mBAAf,UACI,sBAAKA,UAAU,eAAeG,QAAS,kBAAMqoB,GAAS3nB,IAAtD,UACM8nB,EAAa1oB,KAAO,qBAAKD,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASsoB,EAAa1oB,KAAtB,QAAoC,KACvG,qBAAKD,UAAU,QAAf,SAAyB2oB,EAAatlB,OAASslB,EAAa7mB,QAC5D,qBAAK9B,UAAU,cACf,qBAAKA,UAAS,iBAAYa,EAAS,OAAS,IAA5C,SACI,cAAC,IAAD,CAAeuD,KAAM,UAIzB,cAAC8C,EAAA,EAAD,CAAeC,eAAa,EAACC,GAAIvG,EAAQwG,QAAS,IAAKC,WAAW,OAAOC,QAASR,EAAlF,SACI,sBAAK/G,UAAU,cAAc8F,IAAKiB,EAAlC,UAEQuhB,EACI,cAAC,GAAD,CACItoB,UAAU,sBACVkC,SAAUA,EACVL,YAAY,SACZC,MAAO2mB,EACP3iB,IAAKyiB,EACLU,YAAaR,EAAOrwB,OAAS,cAAC,IAAD,IAAoB,KACjD2J,QAAS,SAAAD,GAAK,OAAI4mB,EAAU5mB,IAC5BonB,cAAe,kBAAMR,EAAU,OAGnC,KAGJG,EAAc1vB,KAAI,SAAAwL,GAAI,OAClB,sBAAK3E,UAAS,iBAAY2E,EAAK7C,QAAU6mB,EAAa7mB,MAAQ,SAAW,IAAuB3B,QAAS,kBAAM2oB,EAAWnkB,IAA1H,UACMA,EAAK1E,KAAO,qBAAKD,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASsE,EAAK1E,KAAd,QAA4B,KACvF,qBAAKD,UAAU,QAAf,SAAyB2E,EAAKtB,OAASsB,EAAK7C,UAFoC6C,EAAK7C,UAM/F2B,UAMlB,UC9FlB0lB,I,OAAYvjB,sBAAW,WAAsME,GAAS,IAA5MhE,EAA2M,EAA3MA,MAAO9B,EAAoM,EAApMA,UAAWwB,EAAyL,EAAzLA,MAAO4nB,EAAkL,EAAlLA,QAASxnB,EAAyK,EAAzKA,aAAcoE,EAA2J,EAA3JA,SAAUqjB,EAAiJ,EAAjJA,UAAWC,EAAsI,EAAtIA,UAAWznB,EAA2H,EAA3HA,YAAa0nB,EAA8G,EAA9GA,KAAMlmB,EAAwG,EAAxGA,MAAO4lB,EAAiG,EAAjGA,YAAaO,EAAoF,EAApFA,SAAUtnB,EAA0E,EAA1EA,SAAUunB,EAAgE,EAAhEA,KAAMxnB,EAA0D,EAA1DA,MAAOF,EAAmD,EAAnDA,QAASL,EAA0C,EAA1CA,SAAUwnB,EAAgC,EAAhCA,cAAe9oB,EAAiB,EAAjBA,MAC9MiI,EAAa6B,IAAb7B,SAEFlI,EAAO,uCAAG,sBAAAlI,EAAA,sEACNslB,UAAUkE,UAAUiI,UAAU5nB,GADxB,OAEZuG,EAAS,wBAFG,2CAAH,qDAKb,OACI,sBAAKrI,UAAS,qBAAgBypB,EAAO,OAAS,GAAhC,YAAsCxnB,EAAQ,QAAU,GAAxD,YAA8DjC,GAA5E,UAEQqD,EACI,gCAASA,IAET,KAER,sBAAKrD,UAAU,uBAAuBG,QAASspB,EAAOtpB,EAAU,KAAhE,UACI,uBACI2B,MAAOA,EACPN,MAAOA,EACP4nB,QAASA,EACTxnB,aAAcA,EACdoE,SAAUA,EACVqjB,UAAWA,EACXC,UAAWA,EACXvlB,KAAMylB,EAAW,WAAa,OAC9B3nB,YAAaA,EACbK,SAAUunB,GAAQvnB,EAClBH,QAAS,SAAAinB,GAAE,OAAIjnB,GAAWA,EAAQinB,EAAGzlB,OAAOzB,QAC5CJ,SAAU,SAAAsnB,GAAE,OAAItnB,GAAYA,EAASsnB,EAAGzlB,OAAOzB,QAC/CgE,IAAKA,EACL1F,MAAOA,IAGPqpB,EACI,qBAAKzpB,UAAU,SAAf,SACI,cAAC,IAAD,CAAeoE,KAAM,OAGzB,KAGJ6kB,EACI,qBAAKjpB,UAAU,SAASG,QAAS+oB,EAAjC,SACMD,IAGN,QAIRM,EACI,qBAAKvpB,UAAU,OAAf,SACMupB,IAGN,YAMLJ,MC1BAQ,I,OAxCK,SAAC,GAA2E,IAAzEznB,EAAwE,EAAxEA,SAAU0nB,EAA8D,EAA9DA,UAAWvmB,EAAmD,EAAnDA,MAAOvB,EAA4C,EAA5CA,MAAO+nB,EAAqC,EAArCA,OAAQX,EAA6B,EAA7BA,cAAennB,EAAc,EAAdA,QAY7E,OACI,sBAAK/B,UAAS,uBAAkBkC,EAAW,WAAa,IAAxD,UAEQmB,EACI,gCAASA,IAET,KAER,sBAAKrD,UAAU,QAAf,UACI,uBACI+D,KAAK,OACL7B,SAAUA,EACVJ,MAAOA,EACPC,QAxBK,SAAC,GAAgB,IAAdwB,EAAa,EAAbA,OACpB,GAAKxB,EAAL,CACA,IAAKwB,EAAOzB,MAAM1J,OAAQ,OAAO2J,EAAQ,IAEzC,IAAM+nB,EAAgBvmB,EAAOzB,MAAM0P,MAAM,KAAK,GAC9C,KAAIsY,GAAiBA,EAAc1xB,OAASwxB,GAEvB,yBAAyB1oB,KAAKqC,EAAOzB,QAC1CC,EAAQwB,EAAOzB,WAmBnB+nB,EACI,qBAAK7pB,UAAU,SAASG,QAAS+oB,EAAjC,SACMW,IAGN,aCUTE,I,OAxCOnkB,sBAAW,WAAyFE,GAAS,IAA/FzC,EAA8F,EAA9FA,MAAOxB,EAAuF,EAAvFA,YAAaD,EAA0E,EAA1EA,aAAcooB,EAA4D,EAA5DA,aAAc9nB,EAA8C,EAA9CA,SAAUJ,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASL,EAAoB,EAApBA,SAC1G,EAAwChB,qBAAxC,mBAAOupB,EAAP,KAAqBC,EAArB,KAEA,OACI,sBAAKlqB,UAAU,iBAAf,UAEQqD,EACI,gCAASA,IAET,KAER,sBAAKrD,UAAU,kBAAf,UACI,uBACI8B,MAAOA,EACPF,aAAcA,EACdmC,KAAOkmB,EAA4B,OAAb,WACtBpoB,YAAaA,EACbK,SAAUA,EACVH,QAAS,SAAAinB,GAAE,OAAIjnB,GAAWA,EAAQinB,EAAGzlB,OAAOzB,QAC5CJ,SAAU,SAAAsnB,GAAE,OAAItnB,GAAYA,EAASsnB,EAAGzlB,OAAOzB,QAC/CgE,IAAKA,IAGLkkB,EACKC,EAKG,qBAAKjqB,UAAU,SAASG,QAAS,kBAAM+pB,GAAgB,IAAvD,SACI,cAAC,IAAD,CAAgB9lB,KAAM,OAL1B,qBAAKpE,UAAU,SAASG,QAAS,kBAAM+pB,GAAgB,IAAvD,SACI,cAAC,IAAD,CAAuB9lB,KAAM,OAOrC,eC3BT+lB,I,OATA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,eAAgB9mB,EAAwB,EAAxBA,QAAS5B,EAAe,EAAfA,SACvC,OACI,wBAAO1B,UAAU,SAAjB,UACI,uBAAO+D,KAAK,WAAWqmB,eAAgBA,EAAgB9mB,QAASA,EAAS5B,SAAUA,IACnF,sBAAM1B,UAAU,gBCuBbqqB,I,OA1BC,SAAC,GAA8C,IAA5C5mB,EAA2C,EAA3CA,SAAUJ,EAAiC,EAAjCA,MAAOnB,EAA0B,EAA1BA,SAAUlC,EAAgB,EAAhBA,UAC1C,EAA0CU,mBAAS,CAAE2I,EAAG,EAAGE,EAAG,IAA9D,mBAAO+gB,EAAP,KAAsBC,EAAtB,KASA,OACI,sBACIvqB,UAAS,kBAAaA,GAAwB,IAC9CwqB,YARY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACxBA,EAAU5gB,OAAO6gB,WAHJ,MAG+BD,GAH/B,KAIjBH,EAAiB,CAAElhB,EAAGqhB,EAHX,GAG6BnhB,EAAGkhB,EAHhC,MAOX,UAIMhnB,EAEGvB,EAGG,KAFA,qBAAKlC,UAAU,gBAAgBI,MAAO,CAACwqB,IAAKN,EAAc/gB,EAAGshB,KAAMP,EAAcjhB,GAAjF,SAAuFhG,S,kBCJ5FynB,GAXY,WACvB,OACI,sBAAKnpB,GAAG,uBAAR,UACI,8EACA,cAAC,IAAD,CAASgL,GAAG,kBAAZ,SACI,cAAC,EAAD,CAAQ1K,OAAK,EAAChC,KAAM,cAAC,KAAD,IAApB,2BCyBD8qB,I,OA/BQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC/B,EAA8BvqB,mBAASsqB,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA4CzqB,mBAAS,IAArD,mBAAO0qB,EAAP,KAAuBC,EAAvB,KAEMC,EAAgC,SAAnBF,EAiBnB,OAfA7pB,qBAAU,WACN,IAAMgqB,EACFL,EAAU,GAAKlO,aAAY,kBAAMmO,EAAWD,EAAU,KAAI,KACxDM,EAAUnvB,KAAKC,MAAM4uB,EAAU,IACjCF,EAAUE,EAAoB,GAAVM,EAQxB,OAPIR,EAAU,KACVA,EAAO,WAAOA,IAGdM,GAAYL,GAAY,GAC5BI,EAAkB,GAAD,OAAIG,EAAJ,YAAeR,IAEzB,kBAAM/N,cAAcsO,MAC5B,CAACL,EAASI,EAAYL,IAGrB,sBACItpB,GAAG,kBACHvB,MAAOkrB,EAAa,CAAEG,MAAO,OAAU,GAF3C,UAII,cAAC,IAAD,IAJJ,IAI0BL,OC3BnB,SAASM,GAAT,GAA4E,IAAD,IAA9C7b,cAA8C,MAArC,QAAqC,EAA5B8b,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAClEC,EAAmB/kB,iBAAO,MAChC,EAA0BpG,mBAAS,CACjCkiB,MAAO,GAAIkJ,WAAY,GAAIC,kBAAmB,GAAIlc,WADpD,mBAAOvO,EAAP,KAAc0qB,EAAd,KAaMC,EAAW,SAAAC,GACf,IAAMC,EAAQ,2BAAQ7qB,GAAU4qB,GAChCF,EAASG,GACT,IACMC,EADqC,WAApBD,EAAStc,QAE9Bsc,EAASL,aAAeK,EAASJ,kBAG/BF,EAAiBxlB,SACjBwlB,EAAiBxlB,QAAQgmB,kBAAkBD,EAAU,uBAAyB,KAI9EE,EAA4B,WAAjBhrB,EAAMuO,OACjB0c,EAAOlwB,KAAKqc,KAAK3Z,EAAeM,iBAAmB,OACnDmtB,EAAkB,sFAAkFD,EAAlF,qEAClBE,EAAqBnrB,EAAMorB,aAC/B,cAAC,EAAD,CAAUrpB,MAAOmpB,EAAoBxmB,UAAU,IAC5C,6BACC2mB,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMnpB,EAAT,EAASA,SAAT,OAAyB,mBAAGmpB,KAAMA,EAAMrpB,OAAO,SAASspB,IAAI,aAAa1sB,QAAS,SAAAuU,GAAC,OAAIA,EAAEoY,mBAAhE,SAAoFrpB,KACpHspB,EAAmBT,EACtB,qCACC,uBACEvoB,KAAK,WACLiC,UAAQ,EACRqjB,UAbY,EAcZxnB,YAAY,WACZC,MAAOR,EAAMwqB,WACbpqB,SAAU,SAAAgT,GAAC,OAAIuX,EAAS,CAAEH,WAAYpX,EAAEnR,OAAOzB,WAEjD,uBACEgE,IAAK+lB,EACL7lB,UAAQ,EACRqjB,UArBY,EAsBZtlB,KAAK,WACLlC,YAAY,mBACZC,MAAOR,EAAMyqB,kBACbrqB,SAAU,SAAAgT,GAAC,OAAIuX,EAAS,CAAEF,kBAAmBrX,EAAEnR,OAAOzB,WACxD,cAAC,EAAD,CACEuB,MAAO,uDAAiB,cAACspB,EAAD,CAAMC,KAAK,8EAAX,iDAAjB,OACP5mB,UAAU,IAEZ,cAAC,EAAD,CACE3C,MAAO,kDAAY,cAACspB,EAAD,CAAMC,KAAK,gFAAX,0BAAZ,OACPtpB,SAAUhC,EAAMorB,aAChBhrB,SAAU,SAAAgT,GAAC,OAAIuX,EAAS,CAAES,cAAehY,EAAEnR,OAAOD,aAEnDmpB,KACK,6BAEV,OACE,uBAAMO,SA7DS,SAAAtY,GACfA,EAAEuY,iBACFtB,EAAa,CACX9b,OAAQvO,EAAMuO,OACdqd,QAAS,QACTtK,MAAOthB,EAAMshB,MACbkJ,WAAYxqB,EAAMwqB,WAClBY,aAAcprB,EAAMorB,gBAsDtB,UACE,uBAAO3oB,KAAK,QAAQiC,UAAQ,EAACnE,YAAY,QAAQC,MAAOR,EAAMshB,MAAOlhB,SAAU,SAAAgT,GAAC,OAAIuX,EAAS,CAAErJ,MAAOlO,EAAEnR,OAAOzB,WAG5GwqB,EAA2E,6BAA/D,uBAAOvoB,KAAK,WAAW3D,MAAO,CAAE+sB,QAAS,UAEvDJ,EACD,uBAAOhpB,KAAK,SAAS7B,SAAU0pB,EAAY9pB,MAAOwqB,EAC/CV,EAAa,gBAAkB,UAC7BA,EAAa,gBAAkB,cCnE7B,SAASwB,GAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC7C,EAAmD5sB,mBAAS,MAA5D,mBAAO6sB,EAAP,KAA6BC,EAA7B,KACA,EAAsB9sB,mBAAS,IAA/B,mBAAO7H,EAAP,KAAYwpB,EAAZ,KACA,EAAoC3hB,oBAAS,GAA7C,mBAAOkrB,EAAP,KAAmB6B,EAAnB,KACA,EAAqExH,GAAgB,CAAEpL,IAAK,kBAAmB2L,iBAAiB,IAAhI,mBAAOkH,EAAP,KAAwBC,EAAxB,KAA4CC,EAA5C,KAIMC,EAAY,uCAAG,aAA8BC,GAA9B,+CAAA71B,EAAA,6DAAS2qB,EAAT,EAASA,MAAOkJ,EAAhB,EAAgBA,WAAhB,SAGkBntB,EAAY,GAAD,OAAI0uB,EAAJ,8BAAoCU,mBAAmBnL,IAAU,CAAEzkB,QAAS,CACxH6vB,cAAeN,EAAe,iBAAaA,GAAoB,QAJhD,mBAGX7uB,EAHW,EAGXA,KAAMX,EAHK,EAGLA,OAAMY,EAHD,EAGCA,QAHD,wBAOjBujB,EAAOvjB,GAPU,8BAWC,MAAhBD,EAAKH,QAAmC,iBAAjBR,EAAK+vB,QAXb,qBAYbH,EAZa,wBAcfN,EAAmB,CAAE5K,QAAOkJ,eAdb,4CAiBa/tB,EAAM,GAAD,OAAIsvB,EAAJ,8BAAoCU,mBAAmBnL,GAAvD,0BAAuF,CAAExkB,OAAQ,SAjBnH,WAkBc,OADzB8vB,EAjBW,QAkBGxvB,OAlBH,wBAmBf2jB,EAAO,oDAAD,OAAqD6L,EAAgBxvB,SAnB5D,4CAsBcwvB,EAAgB3vB,OAtB9B,eAsBXmvB,EAtBW,OAsBsCS,WACvDR,EAAmBD,GACnBF,EAAmB,CAAE5K,QAAOkJ,eAxBX,8BA4BC,MAAhBjtB,EAAKH,QAAmC,mBAAjBR,EAAK+vB,QA5Bb,wBA6BjBT,EAAmB,MACnBnL,EAAO,0BA9BU,2BAkCC,MAAhBxjB,EAAKH,QAEC0vB,GADFC,EAAenwB,GACbkwB,IAAKpvB,EAA0DqvB,EAA1DrvB,KAAMC,EAAoDovB,EAApDpvB,oBAAqBC,EAA+BmvB,EAA/BnvB,iBAAkBovB,EAAaD,EAAbC,SAFnC,EAGsBD,EAAa9S,KAAlDgT,EAHe,EAGfA,eAAgBC,EAHD,EAGCA,iBAExBlB,EAAa,CACX3rB,GAAIysB,EACJxL,MAAOyL,EAAa9S,KAAKqH,MACzB4L,mBACAxvB,OAAMC,sBAAqBC,mBAAkBovB,WAC7CG,OAAQF,GACP,CAAEG,QAAQ,IAGbd,KAEAvL,EAAOnkB,EAAKxE,QAAL,yBAAiCwE,EAAKxE,SAAtC,oCAA+EmF,EAAKH,SAE7F8uB,EAAmB,MApDA,4CAAH,wDAuDZmB,EAAiB,uCAAG,+BAAA12B,EAAA,6DAAS2qB,EAAT,EAASA,MAAOkJ,EAAhB,EAAgBA,WACxCzJ,EAAO,IACPmL,EAAmB,MACnBC,GAAc,GAHU,kBAKhBI,EAAa,CAAEjL,QAAOkJ,eALN,uDAOpBzJ,EAAO,qBAAD,OAAsB,KAAE3oB,SAAF,OAPR,QASxB+zB,GAAc,GATU,yDAAH,sDAavBlsB,qBAAU,WACR,GAAIgsB,EAAsB,CACxB,IAAMhC,EAAQvwB,WAAU,sBAAC,sBAAA/C,EAAA,6DACrBw1B,GAAc,GADO,SAEfI,EAAaN,GAAsB,GAFpB,OAGrBE,GAAc,GAHO,2CAxEM,KA6E/B,OAAO,kBAAMryB,aAAamwB,QAO9B,IAAK8B,EACD,OAAQ,0BAASrtB,UAAU,qBAAqB2B,GAAG,oBAA3C,UACJ,qBAAKA,GAAG,SACR,oBAAI3B,UAAU,QAAd,4DACA,mBAAG4sB,KANS,iBAMZ,SAAyB,sDAIjC,IAAMgC,EAAQrB,EACX,sBAAK5rB,GAAG,aAAa3B,UAAU,YAA/B,UACC,+BAAI,cAAC,IAAD,CAASoE,KAAM,GAAIqnB,MAAM,UAA7B,iCACA,qDACqB8B,EAAqB3K,MAD1C,wCACqF,qDADrF,QAGC/pB,EAAO,mBAAGmH,UAAU,QAAb,SAAsBnH,IAAa,gCAE1C,sBAAK8I,GAAG,aAAR,UACD,cAAC,GAAD,CAAegqB,aAAcgD,EAAmB/C,WAAYA,IAC5D,qBAAK5rB,UAAU,YAAf,6FAECnH,EAAO,mBAAGmH,UAAU,QAAb,SAAsBnH,IAAa,gCAK/C,OACE,0BAASmH,UAAU,qBAAqB2B,GAAG,oBAA3C,UACA,qBAAKA,GAAG,SACPitB,K,kFChIDC,I,QAAgB,uCAAG,WAAO3uB,EAAM4uB,GAAb,mBAAA72B,EAAA,6DACjByG,GAAS,EADQ,kBAIO6e,UAAUgI,YAAYC,MAAM,CAChDtlB,OACA6uB,qBAAqB,IANR,mBAQH,aAJNztB,EAJS,EAITA,OAJS,0CAQe,GARf,UASH,WAAVA,EATa,qBAUTwtB,EAVS,kCAWHA,EAXG,iCAYFD,GAAiB3uB,IAZf,kCAaC,GAbD,0DAgBjBtG,QAAQlB,MAAM,0CAAd,MAhBiB,iCAmBdgG,GAnBc,0DAAH,yDAsBhBswB,GAA2B,eAACC,EAAD,+DAAoB3R,OAAsB2R,EAASJ,GAAiB,iBAAkBtR,UAAUkE,UAAUC,YAAcmN,GAAiB,oBAGpKK,GAAgB,uCAAG,WAAMhvB,GAAN,eAAAjI,EAAA,kEAEJ,mBAATiI,EAFa,gCAGPqd,UAAUkE,UAAUC,WAHb,iCAIN,GAJM,UAOJ,kBAATxhB,EAPa,iCAQQykB,aAAawK,oBARrB,cAQPzwB,EARO,yBASK,YAAXA,GAAmC,YAAXA,GATlB,kCAYV,GAZU,yCAcjB9E,QAAQlB,MAAR,qBAA4BwH,EAA5B,aAdiB,mBAeV,GAfU,0DAAH,sD,UCbhBkvB,GAAoB,SAAAlvB,GAAI,gCAAuBA,EAAvB,qDAuMfmvB,GArMU,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,mBAAoBzyB,EAA6D,EAA7DA,QAASywB,EAAoD,EAApDA,aAAcjG,EAAsC,EAAtCA,gBAAiBkI,EAAqB,EAArBA,eAC5EnK,EAAcC,KAAdD,UACR,EAAkFM,KAA1EK,EAAR,EAAQA,qBAAsBF,EAA9B,EAA8BA,mBAAoBK,EAAlD,EAAkDA,YAAaC,EAA/D,EAA+DA,eACvD9d,EAAa6B,IAAb7B,SACR,EAA8C3H,oBAAS,GAAvD,mBAAO8uB,EAAP,KAAyBC,EAAzB,KACA,EAAwC/uB,oBAAS,GAAjD,mBAAOgvB,EAAP,KAAsBC,EAAtB,KACA,EAA4DjvB,mBAAS6uB,GAArE,mBAAOK,EAAP,KAA+BC,EAA/B,KACA,EAA4CnvB,mBAAS,KAArD,mBAAOovB,EAAP,KAAuBC,EAAvB,KAEMxD,EAAOlwB,KAAKqc,KAAK3Z,EAAeM,iBAAmB,OACnD2wB,GAA0B1S,OAAgBuI,IAAwBE,EAClEkK,EAAwBpzB,EAAQqzB,oBAAsBV,EACtDW,EAAiBF,IAA2B/J,GAAe8J,EAC3DI,EAAqB,uCAAG,sBAAAn4B,EAAA,+EAECuG,EAAS8wB,EAAqB,8BAF/B,iBAGR7Y,QAHQ,sBAGO,IAAIle,MAAM,mCAHjB,OAKtB8P,EAAS,4BACTsnB,GAAe,GANO,kDAQtB/1B,QAAQlB,MAAR,MACA2P,EAAS,uCAAyC,KAAE3O,UAA3C,EAAyD,CAAEhB,OAAO,IAC3Ei3B,GAAe,GAVO,0DAAH,qDAcrBU,EAAyBjvB,sBAAW,sBAAC,gCAAAnJ,EAAA,+EAEZuG,EAAS8wB,GAFG,QAE7BgB,EAF6B,UAIvBC,EAAmBD,EAAS/U,KAA5BgV,eAERd,EADMe,IAAgBD,GAGlBC,GAAe3zB,EAAQqzB,mBACvB5C,EAAa,2BACNzwB,GADK,IAERqzB,mBAAmB,MAXI,gDAgBnCt2B,QAAQlB,MAAR,MACA2P,EAAS,sCAAuC,CAAE3P,OAAO,IAjBtB,yDAmBxC,CAAC42B,EAAoBzyB,EAASywB,EAAcjlB,IAEzCooB,EAA8B,uCAAG,sBAAAx4B,EAAA,sEACdi3B,GAAiB,iBADH,eAEtB7mB,EAAS+mB,GAAkB,iBAAkB,CAAE12B,OAAO,IAFhC,2CAAH,qDAK9Bg4B,EAA0B,uCAAG,sBAAAz4B,EAAA,sEACVi3B,GAAiB,kBADP,eAElB7mB,EAAS+mB,GAAkB,aAAc,CAAE12B,OAAO,IAFhC,2CAAH,qDAKhC6I,qBAAU,YACLiuB,GAAoBa,IACrB,IAAMM,EAA4B3T,aAAY,kBAAOwS,GAAoBa,MAA0B,KACnG,OAAO,kBAAMpT,cAAc0T,MAC5B,CAACnB,EAAkBa,IAEtB,IAAMjJ,EAAUwI,EAA0B,qCACtC,cAAC,EAAD,CAAQ5tB,OAAK,EAACC,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYiC,SAAU+tB,EAAuB9vB,QAASilB,EAAhF,oBACA,cAAC,EAAD,CAAQnjB,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYiC,SAAUiuB,EAAgBhwB,QAASilB,EAAnE,qBACI,qCACJ,cAAC,EAAD,CAAQpjB,OAAK,EAACC,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYiC,UAAU,EAAM/B,QAASilB,EAA/D,oBACA,cAAC,EAAD,CAAQnjB,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYiC,UAAU,EAAM/B,QAASilB,EAAzD,qBA2CJ,OALA7jB,qBAAU,WACN,IAAMqvB,EAAiB5T,aAAY,kBAAM+S,GAAkB,SAAAD,GAAc,OAAIA,EAAiB,EAAIA,EAAiB,IAAO,OAAI,KAC9H,OAAO,kBAAM10B,aAAaw1B,MAC3B,IAGC,eAAC,GAAD,CAAOjvB,GAAG,oBAAoBH,MAAM,oCAA0B4lB,QAASA,EAASC,gBAAiBA,EAAjG,UAEQxqB,EAAQ+lB,MACJ,sBAAK5iB,UAAU,aAAf,UACA,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,gCACA,sBAAKA,UAAU,cAAf,UACI,kJADJ,+DAKJ,sBAAKA,UAAU,SAAf,UAESwvB,EAGG,sBAAMxvB,UAAU,aAAhB,SAA6B,cAAC,IAAD,MAF7B,gDAAkB,uBAAlB,uBAKHwvB,GAAqBE,EAKlB,KAJA,cAAC,GAAD,CAASrsB,MAAK,+BAA0BysB,EAAiB,IAA3C,YAA2D5tB,SAA6B,IAAnB4tB,EAAnF,SACI,cAAC,EAAD,CAAQpsB,MAAI,EAAC1B,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAoBiC,SAA6B,IAAnB4tB,EAAsB3vB,QAASiwB,EAAtF,4BAQpB,KAEJ,sBAAKpwB,UAAU,aAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,sCACA,sBAAKA,UAAU,cAAf,wGAC+F,uBAD/F,yEAE0E,uBAF1E,gDAMJ,cAAC,GAAD,CAAQsD,QAASyiB,EAAsBrkB,SAAU,kBAAM+uB,UAE3D,sBAAKzwB,UAAS,qBAAgBsd,KAAc,WAAa,IAAzD,UACI,sBAAKtd,UAAU,UAAf,UACI,sBAAKA,UAAU,OAAf,kCAA6Csd,KAAc,sBAAMtd,UAAU,cAAhB,sCAAgE,QAC3H,qBAAKA,UAAU,cAAf,0GAIIsd,KACI,qBAAKtd,UAAU,cAAf,8FAES,QAGrB,cAAC,GAAD,CAAQsD,QAASuiB,EAAoBnkB,SAAU,kBAAMgvB,WAEvDnB,GAAkB,sBAAKvvB,UAAU,aAAf,UAChB,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,+BACA,sBAAKA,UAAU,cAAf,mEAC0D,uBAD1D,yBAE2BusB,EAF3B,0EAKJ,qBAAKvsB,UAAU,SAAf,SACK4vB,EACI,sBAAM5vB,UAAU,aAAhB,SAA6B,cAAC,IAAD,MAC7B,cAAC,EAAD,CAAQG,QA9FD,WACxB0vB,GAA0B,GAC1B,IAAIgB,EAAS,eAAQh0B,GACrBjD,QAAQC,IAAI,YAAYg3B,GACmB,qBAAhCA,EAAUX,0BAA0CW,EAAUX,kBACnC,qBAA3BW,EAAUnE,qBAAqCmE,EAAUnE,aACzB,qBAAhCmE,EAAUC,0BAA0CD,EAAUC,kBArBxD,SAAC,GAAkC,IAAhC3sB,EAA+B,EAA/BA,KAAM4sB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9BC,EAAO,IAAIC,KAAK,CAAC/sB,GAAO,CAAEJ,KAAMitB,IAEhC/4B,EAAIsO,SAAS4qB,cAAc,KACjCl5B,EAAEm5B,SAAWL,EACb94B,EAAE20B,KAAO9iB,OAAOunB,IAAIC,gBAAgBL,GACpC,IAAMM,EAAW,IAAIC,WAAW,QAAS,CACzCC,KAAM3nB,OACN4nB,SAAS,EACTC,YAAY,IAEZ15B,EAAE25B,cAAcL,GAChBt5B,EAAE45B,SAWFC,CAAa,CACT3tB,KAAM9F,KAAKC,UAAUuyB,GACrBE,SAAS,GAAD,OAAKF,EAAUlvB,GAAf,SACRqvB,SAAU,cAGd1D,EAAa,2BACNzwB,GADK,IAER6vB,cAAc,MA8EqCzsB,KAAM,cAAC,KAAD,IAA5C,yBAIZgwB,EACM,6BAEA,cAAC,EAAD,CACC5sB,MAAM,wCACNC,QAAS4iB,EACTxkB,SAAU,gBAAG6B,EAAH,EAAGA,OAAH,OAAgB4iB,EAAe5iB,EAAOD,gBCrKrDyuB,I,QAnCI,SAAC,GAAgC,IAA9BvwB,EAA6B,EAA7BA,MAAOwwB,EAAsB,EAAtBA,OAAQvxB,EAAc,EAAdA,QACzB2kB,EAAcC,KAAdD,UACR,EAAkC1kB,oBAAS,GAA3C,mBAAOuxB,EAAP,KAAmBC,EAAnB,KAEMC,EAAeH,EAAO74B,KAAI,SAAAof,GAAK,kCAAUA,GAAV,IAAiBzS,IAAK2C,2BAErD1G,EAAU,WACZ,IAAMqwB,EAAcD,EACfh5B,KAAI,gBAAG2M,EAAH,EAAGA,IAAKusB,EAAR,EAAQA,SAAR,OAAuBvsB,EAAIO,QAAQvE,SAAUuwB,GAAWA,EAASvsB,EAAIO,QAAQvE,WACjFwwB,OAAM,SAAAl2B,GAAC,OAAU,IAANA,KAChB81B,GAAaE,IASXhL,EAAU,qCACZ,cAAC,EAAD,CAAQplB,OAAK,EAACC,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYE,QAASilB,EAA/C,oBACA,cAAC,EAAD,CAAQnjB,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYiC,SAAU+vB,EAAY9xB,QARxC,WACd,IAAM4b,EAASoW,EAAah5B,KAAI,qBAAG2M,IAAcO,QAAQvE,SACzDrB,GAAWA,EAAQsb,GACnBqJ,KAKA,wBAGJ,OACI,cAAC,GAAD,CAAOzjB,GAAG,cAAcH,MAAOA,EAAO4lB,QAASA,EAA/C,SAEQ+K,EAAah5B,KAAI,gBAAGwI,EAAH,EAAGA,GAAI0B,EAAP,EAAOA,MAAOxB,EAAd,EAAcA,YAAaiE,EAA3B,EAA2BA,IAA3B,OACb,cAAC,GAAD,CAA6BzC,MAAOA,EAAOxB,YAAaA,EAAaE,QAASA,EAAS+D,IAAKA,GAA5EnE,GAAM0B,U,oBCwE3BkvB,GAnGkB,SAAC,GAM3B,IAIkBnuB,EATvBouB,EAKI,EALJA,gBACAC,EAII,EAJJA,uBAII,IAHJC,uBAGI,MAHc,CAAEnoB,YAAa,wBAG7B,MAFJooB,mBAEI,MAFU,GAEV,MADJtL,uBACI,SACIjC,EAAcC,KAAdD,UACR,EAAsC1kB,mBAAS,GAA/C,mBAAOkyB,EAAP,KAAoBC,EAApB,KAYIpa,EAAQ,GAVWrU,EAWN,EAEjBqU,EAAiB+Z,EAZJ/oB,QAAO,SAACC,EAAKopB,EAAK11B,GAC3B,IAAI21B,EAAM12B,KAAKC,MAAMc,EAAIgH,GAIzB,OAHWsF,EAAIqpB,KAASrpB,EAAIqpB,GAAO,KAC9Br1B,KAAKo1B,GAEHppB,IACN,IAQL,IAUMspB,EAAgB,SAAAriB,GACpB,OAAOA,EAAKzC,MAAM,EAAG,GAAK,MAAQyC,EAAKzC,MAAMyC,EAAKvY,OAAS,EAAGuY,EAAKvY,SAG/D66B,EAAkC,IAAhBL,EAClBM,EAAkBN,IAAgBna,EAAMrgB,OAAS,EAWvD,OACE,eAAC,GAAD,CAAOuJ,GAAG,sBAAsBH,MAAM,0BAA0B6lB,gBAAiBA,EAAjF,UACE,qBAAKrnB,UAAU,QAAf,SAAwB2yB,IACxB,sBAAK3yB,UAAU,mCAAf,UACE,oBAAI2B,GAAG,kBAAP,SACG6wB,EACG/Z,EAAMma,GAAaz5B,KAAI,SAACwX,EAAMpL,GAAP,OACrB,qBAEEvF,UAAauF,EAAQ,EAAsB,GAAjB,eAC1BpF,QAAS,kBAnBA,SAACwQ,EAAMpL,GAC9BktB,EAAuB,CACrBr5B,QAASuX,EACTpL,MAAOA,IAGT6f,IAcgB+N,CAAiBxiB,EAzClB,EAyCwBiiB,EAAyBrtB,IAJpD,UAOE,sBAAMvF,UAAU,YAAhB,SA5CC,EA6CE4yB,EAAyBrtB,EAAQ,IAEpC,+BACGytB,EAAcriB,KAEjB,mBACEic,KAAM8F,EAAgBnoB,YAAc,YAAcoG,EAClDpN,OAAO,SACPspB,IAAI,aACJ1sB,QAAS,SAAAuU,GAAC,OAAIA,EAAEoY,mBAJlB,SAME,cAAC,KAAD,CAAuB1oB,KAAM,SAlB1BuM,MAsBT,OAEN,sBAAK3Q,UAAU,QAAf,UACG4yB,EAAc,EADjB,IACqBna,EAAMrgB,UAE3B,sBAAK4H,UAAU,UAAf,UACE,cAAC,EAAD,CAAQkC,SAAU+wB,EAAiBhzB,KAAM,cAAC,IAAD,IAAwBgC,OAAK,EAACD,OAAK,EAAC+B,KAAK,SAAS5D,QAzDlF,WACK,IAAhByyB,GACJC,GAAe,SAAA/L,GAAS,OAAIA,EAAY,MAuDlC,2BAGA,cAAC,EAAD,CAAQ5kB,SAAUgxB,EAAiBvvB,UAAW,cAAC,IAAD,IAAyB1B,OAAK,EAACD,OAAK,EAAC+B,KAAK,SAAS5D,QAjExF,WACXyyB,IAAgBna,EAAMrgB,OAAS,GACnCy6B,GAAe,SAAA/L,GAAS,OAAIA,EAAY,MA+DlC,iC,oBC9FJsM,GAAqB,IAAInoB,aAAUrT,EAAQ,MACzCuH,GAAoBJ,EAApBI,gBAuBOk0B,GArBa,SAAC/C,EAAU1lB,EAAS6jB,EAAQ6E,GACpD,IAAMC,EAAW,IAAI3d,YACrB,EAA+B0d,EAAU7E,OAAjC+E,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,IACjBC,EAAkBC,qBAAUL,EAASM,OAAO,CAAC,iCAAkC,CAAC,CAACL,EAAUC,EAAKC,MAEtG,OAAO,IAAII,UAAO,CACdxD,WACA1lB,UACA6jB,SACAlb,KAAM,CAAC,CACH+c,EACA,OACA8C,GAAmB/b,mBAAmB,mBAAoB,CACtDlY,GACAw0B,MAGRI,aAAcT,KCgNPU,GA3NO,SAAC,GAA0E,IAAxEn3B,EAAuE,EAAvEA,QAAS61B,EAA8D,EAA9DA,gBAAiBrF,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,aAAc2G,EAAmB,EAAnBA,aACjE7O,EAAcC,KAAdD,UACA/c,EAAa6B,IAAb7B,SAER,EAAgC3H,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAAwBzhB,mBAAS,MAAjC,mBAAOqD,EAAP,KAAamwB,EAAb,KACA,EAAsCxzB,mBAAS,IAA/C,mBAAOyzB,EAAP,KAAoBC,EAApB,KACA,EAAsC1zB,mBAAS,IAA/C,mBAAO2zB,EAAP,KAAoBC,EAApB,KACA,EAAoD5zB,mBAAS,IAA7D,mBAAO6zB,EAAP,KAA2BC,EAA3B,KACA,EAAgC9zB,oBAAS,GAAzC,mBAAOwB,EAAP,KAAiBgwB,EAAjB,KAEA,EAAkExxB,oBAAS,GAA3E,mBAAO+zB,EAAP,KAAkCC,EAAlC,KACA,EAA4Dh0B,oBAAS,GAArE,mBAAOi0B,EAAP,KAA+BC,EAA/B,KAEMnN,EAAStkB,mBAAQ,iBAAM,CACzB,CACIE,MAAO,+GACPvB,MAAO,SACPI,UAAWrF,EAAQ2xB,kBAEvB,CACInrB,MAAO,6FACPvB,MAAO,YAEZ,CAACjF,EAAQ2xB,mBAENqG,GAAa1xB,mBAAQ,iBAAO,CAC9B,CACI,CACIE,MACI,0NAEI,cAAC,GAAD,CACIA,MAAM,iOADV,SAGI,cAAC,IAAD,SAGZyC,IAAK2C,wBAGb,CACI,CACIpF,MAAO,4FACkDqvB,EAAgBxyB,KADlE,YAEH,cAAC,GAAD,CACImD,MAAM,qFADV,SAEI,cAAC,IAAD,SAGRyC,IAAK2C,uBAET,CACIpF,MAAO,yEACPyC,IAAK2C,2BAGb,CAACiqB,EAAgBxyB,OAWf40B,GAAc,uCAAG,kCAAA78B,EAAA,6DACnBkqB,GAAW,GADQ,SAGb,IAAIvnB,SAAQ,SAAAC,GAAO,OAAIG,WAAWH,MAHrB,gCAMMk6B,UAAOC,kBAAkB32B,KAAKqiB,MAAM7jB,EAAQ2xB,kBAAmB2F,GANrE,cAMTc,EANS,YAOU52B,KAPV,UAO+B42B,EAAOC,QAAQb,EAAat1B,EAAeO,gBAP1E,2BAOTkvB,EAPS,KAOelwB,UAPf,0BAQG22B,EAAOE,YAAY92B,KAAKC,UAAU,CAAEkwB,sBARvC,eAQT4G,EARS,iBASIp3B,EAAU,GAAD,OAAIqvB,EAAJ,qBAA2BxwB,EAAQ8E,GAAnC,WAAgD,CAAE6sB,mBAAkB4G,QATjF,aASTv2B,EATS,QAWN4X,QAXM,iBAYX6W,EAAa,2BAAKzwB,GAAN,IAAe2xB,sBAC3BnmB,EAAS,yCACT8Z,GAAW,GACXiD,IAfW,8BAiBL,IAAI7sB,MAAJ,oCAAuCsG,EAAKnF,SAAW,kBAjBlD,0DAoBfE,QAAQlB,MAAR,MACA2P,EAAS,6BAA6B,KAAE3O,SAAF,MAAiB,CAAEhB,OAAO,IArBjD,QAwBnBypB,GAAW,GAxBQ,0DAAH,qDA2BdkT,GAAa,uCAAG,0CAAAp9B,EAAA,6DAClBkqB,GAAW,GADO,SAGZ,IAAIvnB,SAAQ,SAAAC,GAAO,OAAIG,WAAWH,MAHtB,uBAORy6B,EAAe3zB,cAAG9E,EAAQ+lB,MAAQ,IAAM/W,KAAKC,MAAQ,IAAMzP,KAAKk5B,SAAW,KAA8B,kBAAhBC,aAA4BA,YAAY1pB,QACjI2pB,EAAiBV,UAAOW,aAAa,CAAEJ,iBAErCn2B,EAAsDJ,EAAtDI,gBAAiBE,EAAqCN,EAArCM,iBAAkBC,EAAmBP,EAAnBO,eACrCmvB,EAAS,CACXtvB,kBACAq0B,SAAUn0B,EACVo0B,IAAKgC,EAAer8B,QACpBs6B,IAAK72B,EAAQ4xB,OAAOiF,IACpBiC,YAAa94B,EAAQ4xB,QAhBX,KAmBWpwB,KAnBX,UAmBgCo3B,EAAeP,QAAQb,EAAa/0B,GAnBpE,oBAmBRkvB,EAnBQ,KAmBgBlwB,UAnBhB,gBAqBRs3B,EAASvC,GAAoBx2B,EAAQ8E,GAAI+wB,EAAgB/wB,GAAI8sB,EAAOkH,YAAa,CAAElH,SAAQD,qBACjGpJ,IACA6O,EAAa2B,GACbtI,EAAa,2BACNzwB,GADK,IAER2xB,mBACAC,SACAoH,4BAA6Bh5B,EAAQ2xB,mBACtC,CAAEE,QAAQ,IA7BC,kDA+Bd90B,QAAQlB,MAAR,MACA2P,EAAS,0BAA4B,KAAE3O,SAAF,MAAiB,CAAEhB,OAAO,IAhCjD,QAmClBypB,GAAW,GAnCO,0DAAH,qDAsCb2T,GAAe10B,uBAAY,WAC7B,IAAM20B,EAAuB1B,IAAgBE,EACzCyB,GAAoB,EACpBC,GAAgB,EAChBC,GAAuB,EAEd,WAATnyB,IACAiyB,EAAoB7B,EAAY/7B,QAAUi8B,EAAYj8B,QAAUm8B,EAAmBn8B,OACnF69B,EAAgB9B,EAAY/7B,QAAU,GAAKi8B,EAAYj8B,QAAU,GAAKm8B,EAAmBn8B,QAAU,EACnG89B,EAAuBrB,GAAW,GAAGvC,OAAM,gBAAGxsB,EAAH,EAAGA,IAAH,OAAaA,EAAIO,SAAWP,EAAIO,QAAQ/C,YAG1E,UAATS,IACAiyB,EAAoB3B,EAAYj8B,QAAUm8B,EAAmBn8B,OAC7D69B,EAAgB5B,EAAYj8B,QAAU,GAAKm8B,EAAmBn8B,QAAU,EACxE89B,EAAuBrB,GAAW,GAAGvC,OAAM,gBAAGxsB,EAAH,EAAGA,IAAH,OAAaA,EAAIO,SAAWP,EAAIO,QAAQ/C,YAGvF4uB,GAAa+D,IAAkBF,IAAyBG,GAEpDF,GACApB,GAA2BqB,GAC3BvB,GAA8BqB,KAE9BnB,GAA0B,GAC1BF,GAA6B,MAElC,CAACG,GAAY9wB,EAAMowB,EAAaE,EAAaE,IAEhDhzB,qBAAU,kBAAMu0B,OAAgB,CAAC5T,EAAW4T,GAAc3B,EAAaE,EAAaE,IAEpF,IAAM4B,GAAe,qCACjB,cAAC,EAAD,CAAQl2B,KAAM,cAAC,IAAD,IAAmB+B,OAAK,EAAC7B,QAAS,kBAAMilB,KAAtD,oBACA,cAAC,EAAD,CAAQnlB,KAAM,cAAC,IAAD,IAAmBiC,SAAUA,EAAU/B,QAAS,iBAAe,WAAT4D,EAAoB+wB,KAAkBO,MAA1G,wBAGJ,OACI,eAAC,GAAD,CAAO1zB,GAAG,uBAAuBH,MAAM,iBAAiB4lB,QAAS+O,GAAjE,UAEQjU,EACI,qBAAKvgB,GAAG,kBAAR,SACI,cAAC,EAAD,MAGJ,KAER,cAAC,GAAD,CAAQ8lB,OAAQA,EAAQ/lB,SAxHV,SAAAI,GAClBoyB,EAAQpyB,GACRsyB,EAAe,IACfE,EAAe,IACfE,EAAsB,IACtBE,GAA6B,GAC7BE,GAA0B,MAoHT,WAAT7wB,EACI,iCACI,cAAC,GAAD,CAAeqyB,aAAa,mBAAmBv0B,YAAY,eAAeE,QAAS,SAAAD,GAAK,OAAIsyB,EAAetyB,MAC3G,cAAC,GAAD,CAAekoB,cAAY,EAACoM,aAAa,eAAev0B,YAAY,eAAeE,QAAS,SAAAD,GAAK,OAAIwyB,EAAexyB,MACpH,cAAC,GAAD,CAAes0B,aAAa,eAAev0B,YAAY,uBAAuBE,QAAS,SAAAD,GAAK,OAAI0yB,EAAsB1yB,MAElH+yB,GAAW,GAAG17B,KAAI,WAAiBiE,GAAjB,IAAGiG,EAAH,EAAGA,MAAOyC,EAAV,EAAUA,IAAV,OACd,cAAC,EAAD,CAAgCA,IAAKA,EAAKzC,MAAOA,EAAO3B,SAAU,kBAAMo0B,OAAxE,mBAA2B14B,UAG7B,KAGL,UAAT2G,EACI,iCACI,cAAC,GAAD,CAAeimB,cAAY,EAACoM,aAAa,eAAev0B,YAAY,eAAeE,QAAS,SAAAD,GAAK,OAAIwyB,EAAexyB,MACpH,cAAC,GAAD,CAAes0B,aAAa,eAAev0B,YAAY,uBAAuBE,QAAS,SAAAD,GAAK,OAAI0yB,EAAsB1yB,MAElH+yB,GAAW,GAAG17B,KAAI,WAAiBiE,GAAjB,IAAGiG,EAAH,EAAGA,MAAOyC,EAAV,EAAUA,IAAV,OACd,cAAC,EAAD,CAAgCA,IAAKA,EAAKzC,MAAOA,EAAO3B,SAAU,kBAAMo0B,OAAxE,mBAA2B14B,UAG7B,KAElB,sBAAKuE,GAAG,WAAR,UAEQ8yB,EACI,qBAAKz0B,UAAU,UAAf,kCAAsD,KAG1D20B,EACI,qBAAK30B,UAAU,UAAf,+DAAmF,Y,wCCnNrGq2B,GAAmB,CACrB,CACI10B,GAAI,cACJzB,KAAM,eACND,KAAM,eACNwrB,MAAO,UACP6K,WAAY,KACZC,KAAM,oEAEV,CACI50B,GAAI,WACJzB,KAAM,WACND,KAAM,eACNwrB,MAAO,UACP6K,WAAY,IACZC,KAAM,6FAGRC,GAAmB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAElBC,EAASvzB,mBAAQ,kBAAMkzB,GAAiBl9B,KAAI,SAAAwN,GAC9C,IAAMgwB,EAAaF,EAAQG,aAAeH,EAAQG,YAAYz9B,KAAI,qBAAG+G,QAAiB0C,SAAS+D,EAAMhF,IACrG,OAAO,2BACAgF,GADP,IAEIkwB,OAAQF,SAEZ,CAACF,IAEL,OAAQ,qBAAKz2B,UAAU,SAAf,SAEA02B,EAAOv9B,KAAI,gBAAGwI,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMD,EAAb,EAAaA,KAAMwrB,EAAnB,EAAmBA,MAAO6K,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,KAAMM,EAA5C,EAA4CA,OAA5C,OACP,mBAAGjK,KAAM2J,EAAMhzB,OAAO,SAASspB,IAAI,aAAnC,SACI,cAAC,GAAD,CAASxpB,MAAK,cAASwzB,EAAS,gBAAkB,cAApC,gBAAyD32B,EAAzD,aAAkEo2B,EAAlE,eAAd,SACI,sBAAKt2B,UAAS,gBAAW62B,EAAS,SAAW,IAAMz2B,MAAO,CAAEkF,gBAAiBmmB,EAAOqL,YAAarL,GAAjG,UACI,qBAAKzrB,UAAU,OAAf,SAAwBC,IACxB,sBAAKD,UAAU,aAAf,eAAgCs2B,WAJS30B,SAa/Do1B,GAA0B,6CAC1BC,GAA4B,IAAI/rB,aAAUiI,IAwJjC+jB,GAvJU,SAAC,GAA+C,IAA7CR,EAA4C,EAA5CA,QAAS55B,EAAmC,EAAnCA,QAAS+N,EAA0B,EAA1BA,QAASssB,EAAiB,EAAjBA,WAC3C9R,EAAcC,KAAdD,UAEFlO,EAAW/T,mBAAQ,kBAAMkS,GAAY,cAAa,IAClD8hB,EAAmBh0B,mBAAQ,kBAAM,IAAIi0B,YAASL,GAAyB7jB,GAA2BgE,KAAW,CAACA,IAC9GmgB,EAAwBC,GAA8BpuB,MAAK,SAAAG,GAAC,OAAIA,EAAEsH,OAAS9T,EAAQ8E,MACnF41B,EAAmBF,EAAwBA,EAAsBG,eAAiB,EAClFC,EAAeC,GAAexuB,MAAK,SAAAG,GAAC,OAAIA,EAAEsH,OAAS9T,EAAQ8E,MAEjE,EAAoDjB,mBAAS,CAAEi3B,SAAS,EAAMC,QAAS,EAAGC,gBAAiB,EAAGn/B,MAAO,OAArH,mBAAOo/B,EAAP,KAA2BC,EAA3B,KACAx2B,qBAAU,WACN,sBAAC,oCAAAtJ,EAAA,yDACS+/B,EAAQ,SAAA3uB,GAAC,OAAIlN,SAASkN,EAAEpM,YAAc,MAD/C,KAE4CrC,SACrC68B,EAHP,gCAG4BN,EAAiBU,gBAAgBJ,EAAa9mB,KAAM8mB,EAAaQ,IAAKR,EAAaS,MAAM3+B,KAAKy+B,GAH1H,8CAGmI,KAHnI,qBAIOX,EAJP,kCAIqCF,EAAiBS,QAAQP,EAAsB1mB,MAAMpX,KAAKy+B,GAJ/F,iDAIwG,KAJxG,yDAEoDvkB,IAFpD,2DAEUokB,EAFV,KAE2BD,EAF3B,uBAMU,CAAEC,kBAAiBD,YAN7B,2CAAD,GAQKr+B,MAAK,SAAAmF,GAAM,OAAIq5B,EAAsBr5B,MACrC9F,OAAM,SAAA8b,GACH9a,QAAQlB,MAAM,uBAAwBgc,GACtCqjB,EAAsB,CAAEr/B,MAAOgc,EAAEhb,SAAWgb,SAErD,CAACyiB,EAAkBM,EAAcJ,IAEpC,IAAMc,EAAeZ,EAAmBO,EAAmBF,QACrDQ,EAAgC,aAAfxtB,EAAQjJ,GAAoB,8BAC/Cm2B,EAAmBp/B,MAAnB,8BAAkDo/B,EAAmBp/B,OAAU,KAE7E2/B,EAAuC,IAAjBF,EAAqB,2BAA6B,KACxEG,EAAoBl3B,uBAAY,WAClC81B,EAAW,CACPv1B,GAAI,SAASkK,KAAKC,MAClBvQ,QAASqP,EAAQrP,QACjBwI,KAAM,sBACNlH,QAASA,EAAQ8E,GACjBrG,IAAK,CACDqR,GAAIoqB,GACJj1B,MAAO,MACPqC,KAAM6yB,GAA0B3f,mBAAmB,QAAS,CACxDggB,EAAsBkB,iBACtBlB,EAAsBmB,MACtB,EACA,oDAIb,CAACnB,EAAuBzsB,EAAQrP,QAASsB,EAAQ8E,GAAIu1B,IAClDuB,EAAer3B,uBAAY,WAC7B81B,EAAW,CACPv1B,GAAI,gBAAgBkK,KAAKC,MACzBvQ,QAASqP,EAAQrP,QACjBsB,QAASA,EAAQ8E,GACjBoC,KAAM,sBACNzI,IAAK,CACDqR,GAAIoqB,GACJj1B,MAAO,MACPqC,KAAM6yB,GAA0B3f,mBAAmB,cAAe,CAACogB,EAAa9mB,KAAM8mB,EAAaQ,IAAKR,EAAaS,YAG9H,CAACT,EAAc7sB,EAAQrP,QAASsB,EAAQ8E,GAAIu1B,IAEzCf,EAAe,mCACjB,cAAC,EAAD,CAAQn0B,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAmBE,QAAS,kBAAMilB,KAAtD,qBAEJ,OACI,eAAC,GAAD,CAAOzjB,GAAG,qBAAqBH,MAAM,4BAA4B4lB,QAAS+O,EAA1E,UACI,sBAAKn2B,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,iEACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAwB,sBAAMA,UAAU,iBAAhB,SAAmCy2B,EAAQ,4BAI3E,qBAAKz2B,UAAU,eAgBnB,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,6DACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAwB,sBAAMA,UAAU,iBAAhB,SAAmCy2B,EAAQ,wBAI3E,qBAAKz2B,UAAU,eAKnB,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,mFACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAwB,sBAAMA,UAAU,iBAAhB,SACpB83B,EAAmBH,QAAU,MAAQQ,WAIjD,qBAAKn4B,UAAU,UAAf,SACI,cAAC,GAAD,CAASqD,MACDg1B,GAAuBD,GAAkB,yDADjD,SAGI,cAAC,EAAD,CAAQn2B,OAAK,EAACD,OAAK,EAAC7B,QAASm4B,EAAmBp2B,YAAam2B,IAAuBD,GAApF,4BAKTN,EAAmBD,mBAAqBJ,GAC3C,sBAAKz3B,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uEACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAwB,sBAAMA,UAAU,iBAAhB,SACpB83B,EAAmBD,yBAI/B,qBAAK73B,UAAU,UAAf,SACI,cAAC,GAAD,CAASqD,MACD+0B,GAAc,6CAA0C/7B,KAAKqc,MAAM+e,EAAaQ,IAAMR,EAAaiB,OAAS,OAA9F,SADtB,SAGI,cAAC,EAAD,CAAQz2B,OAAK,EAACD,OAAK,EAAC7B,QAASs4B,EAAcv2B,WAAYk2B,EAAvD,0BAMZ,cAAC,GAAD,CAAkB3B,QAASA,IAC3B,sBAAK90B,GAAG,OAAR,kGACyF,mBAAGirB,KAAK,mEAAmErpB,OAAO,SAASspB,IAAI,aAA/F,8B,mBChM/F8L,GAAiB,IAAI1tB,aAAU2tB,IAgItBC,GA9HO,SAAC,GAAqC,IAAnCjuB,EAAkC,EAAlCA,QAAS/N,EAAyB,EAAzBA,QAASi8B,EAAgB,EAAhBA,UAC/BzwB,EAAa6B,IAAb7B,SACA+c,EAAcC,KAAdD,UAEAvM,EAAqDigB,EAArDjgB,YAAaqE,EAAwC4b,EAAxC5b,gBAAiBG,EAAuByb,EAAvBzb,mBAEtC,EAA8B3c,oBAAS,GAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KACA,EAAwCzhB,mBAAS,MAAjD,mBAAOq4B,EAAP,KAAqBC,EAArB,KACA,EAAkCt4B,oBAAS,GAA3C,mBAAOu4B,EAAP,KAAkBC,EAAlB,KAEMh3B,GAAY62B,KAAkBA,EAAa/mB,QAAU+mB,EAAajkB,UAElE/S,EAAO,uCAAG,WAAM3I,GAAN,+BAAAnB,EAAA,yDACZ+gC,EAAgB,MAEX72B,EAAe/I,GAHR,wDAIZ+oB,GAAW,GACX+W,GAAa,GALD,SAQFhiB,EAAW7B,GAAYzK,EAAQjJ,IAC/Bw3B,EAAgB,IAAI/B,YAASh+B,EAASu/B,GAAgBzhB,GATpD,UAW0Ctc,QAAQ6Y,IAAI,CAC1D0lB,EAAcC,UAAUv8B,GACxBs8B,EAAcj5B,OACdi5B,EAAcnnB,SACdmnB,EAAcrkB,aAfV,oCAWDskB,EAXC,KAWUl5B,EAXV,KAWgB8R,EAXhB,KAWwB8C,EAXxB,KAkBF8B,EAAU7B,uBAAYqkB,EAAWtkB,GACvCkkB,EAAgB,CACZn8B,UACAzD,UACAwR,QAASA,EAAQjJ,GACjBiV,UACAE,WAAYsiB,EAAUn8B,WACtBga,cAAc,0DAAD,OAA4DrM,EAAQjJ,GAApE,YAA0EvI,EAA1E,QACb8G,OACA8R,SACA8C,aA5BI,kDA+BRlb,QAAQlB,MAAR,MACA2P,EAAS,4BAA6B,CAAE3P,OAAO,IAC/CwgC,GAAa,GAjCL,QAoCZ/W,GAAW,GApCC,0DAAH,sDAiDPiF,EAAU,qCACZ,cAAC,EAAD,CAAQplB,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAmBE,QAAS,kBAAMilB,KAAtD,mBACA,cAAC,EAAD,CAAQnlB,KAAM,cAAC,IAAD,IAAiBiC,SAAUA,EAAU/B,QAZtC,WACb+c,EAAgB6b,GAChB3T,KAUA,oBAEEiU,EAA+B,wBAAfzuB,EAAQjJ,GAA+B,UAC1C,aAAfiJ,EAAQjJ,GACF,WACA,UAGV,OACI,eAAC,GAAD,CAAOA,GAAG,kBAAkBH,MAAM,YAAY4lB,QAASA,EAAvD,UACI,cAAC,GAAD,CACI/jB,MAAM,gBACNxB,YAAY,QACZE,QAAS,SAAAD,GAAK,OAAIC,EAAQD,MAG1Bm3B,EACI,sBAAKj5B,UAAU,mBAAf,sEAC8Dq5B,EAD9D,aACwFzuB,EAAQ1K,KADhG,OAIA,KAGJy3B,EACI,cAAC,EAAD,KAEKsB,GAAaF,EACV,sBAAK/4B,UAAU,gBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS04B,EAAa94B,KAAtB,QAC7C,sBAAKD,UAAU,OAAf,UACM+4B,EAAa74B,KADnB,IAC0B,qCAAS64B,EAAa/mB,OAAtB,aAG9B,sBAAKhS,UAAU,UAAf,sBACa,+BAAQ+4B,EAAaniB,UADlC,IACmD,4BAAKmiB,EAAa/mB,eAIzE,KAEhB,qBAAKhS,UAAU,oBAAf,SAEQ6Y,EAAY1f,KAAI,gBAAGC,EAAH,EAAGA,QAAS8G,EAAZ,EAAYA,KAAM8R,EAAlB,EAAkBA,OAAQiF,EAA1B,EAA0BA,cAA1B,OACZ,sBAAKjX,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAAS4W,EAAT,QAC9C,sBAAKjX,UAAU,OAAf,UAAwBE,EAAxB,IAA+B,qCAAS8R,EAAT,aAEnC,qBAAKhS,UAAU,UAAf,SACI,cAAC,EAAD,CAAQ0D,MAAI,EAAC1B,OAAK,EAAC7B,QAAS,kBA1DpC,SAAA/G,GAChBikB,EAAmBjkB,GACnBgsB,IAwD0DkU,CAAYlgC,IAA9C,SACI,cAAC,IAAD,UAPsBA,YC1D3CmgC,I,QA3De,SAAC,GAA+D,IAA7D3a,EAA4D,EAA5DA,YAAawC,EAA+C,EAA/CA,WAAYoY,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WAChErU,EAAcC,KAAdD,UACR,EAAwC1kB,oBAAS,GAAjD,mBAAOg5B,EAAP,KAAqBC,EAArB,KAeMvS,EAAU,qCACZ,cAAC,EAAD,CAAQplB,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAYE,QAdf,WACjBye,EAAYzlB,KAAI,gBAAG+kB,EAAH,EAAGA,IAAH,OAAakD,EAAWlD,MACxCkH,KAYA,oBACA,cAAC,EAAD,CAAQljB,UAAWw3B,EAAcv5B,QAVd,WACnBs5B,EAAW,GAAD,mBACHD,GADG,YAEH5a,EAAYzlB,KAAI,qBAAG0lB,QAAsBqB,SAASjiB,UAEzDmnB,KAKA,yBAGJ,OACI,eAAC,GAAD,CACIzjB,GAAG,oBACHH,MAAM,oBACN4lB,QAASA,EACTC,iBAAiB,EAJrB,UAMI,qBAAKrnB,UAAU,UAAf,oFAIA,qBAAKA,UAAU,aAAf,SAEQ4e,EAAYzlB,KAAI,WAAciE,GAAd,IAAGyhB,EAAH,EAAGA,QAAH,OACZ,oBAAG7e,UAAU,OAAyB4sB,KAAM/N,EAAQqB,SAASjiB,IAAKsF,OAAO,SAASspB,IAAI,aAAtF,UACI,qBAAK7sB,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASwe,EAAQqB,SAAS0Z,MAAM,GAAhC,MAA9C,SACI,cAAC,IAAD,MAEJ,qBAAK55B,UAAU,OAAf,SAAwB6e,EAAQqB,SAAShgB,SAJ7C,eAAiC9C,SAU7C,sBAAK4C,UAAU,UAAf,wFAC+E,mBAAG4sB,KAAK,sGAAsGrpB,OAAO,SAASspB,IAAI,aAAlI,0BAD/E,OAGA,qBAAK7sB,UAAU,cAEf,sBAAKA,UAAU,gBAAf,UACI,uBAAOA,UAAU,sBAAjB,4BACA,cAAC,EAAD,CAAUqD,MAAM,+CAA+CC,QAASo2B,EAAch4B,SAAU,gBAAG6B,EAAH,EAAGA,OAAH,OAAgBo2B,EAAgBp2B,EAAOD,oB,8BCzDjJu2B,GAAsB,sBAItBC,GAAc,CAClB,OACA,sBACA,mBACA,WACA,UAGIC,GAA+B,SAAArwB,GACnC,IAAMA,IAAOswB,GAAqBtwB,GAChC,MAAO,CACL+M,SAAS,EACT/c,QAAS,2DAIb,IAAMgQ,EAAI/H,KAAMQ,GAAeuH,EAAI/H,IACjC,MAAO,CACL8U,SAAS,EACT/c,QAAS,0CAIb,IAAMgQ,EAAI+kB,SAAUtsB,GAAeuH,EAAI+kB,OAAOr1B,SAAWsQ,EAAI+kB,OAAOtvB,iBAClE,MAAO,CACLsX,SAAS,EACT/c,QAAS,qCAIb,GAAIgQ,EAAI+kB,OAAOtvB,gBAAiB,CAC9B,IAAMuK,EAAI+kB,OAAO+E,WAAYyG,GAAgBvwB,EAAI+kB,OAAO+E,UACtD,MAAO,CACL/c,SAAS,EACT/c,QAAS,uDAIb,IAAMgQ,EAAI+kB,OAAOgF,MAAOtxB,GAAeuH,EAAI+kB,OAAOgF,KAChD,MAAO,CACLhd,SAAS,EACT/c,QAAS,kDAIb,IAAMgQ,EAAI+kB,OAAOiF,MAAOvxB,GAAeuH,EAAI+kB,OAAOiF,KAChD,MAAO,CACLjd,SAAS,EACT/c,QAAS,kDAKf,OAAMgQ,EAAI1K,MAAQk7B,GAAYxwB,EAAI1K,MAI5B0K,EAAIzK,qBAAuBkD,GAAeuH,EAAIzK,qBAO9CyK,EAAIxK,kBAAoBiD,GAAeuH,EAAIxK,kBAO1C,CAAEuX,SAAS,GANT,CACLA,SAAS,EACT/c,QAAS,4CATJ,CACL+c,SAAS,EACT/c,QAAS,+CANJ,CAAE+c,SAAS,EAAO/c,QAAS,4BAoBhCyI,GAAiB,SAAAwO,GACrB,IACE,OAAOzV,sBAAWyV,KAAUA,EAC5B,MAAO+D,GACP,OAAO,IAILulB,GAAkB,SAAAzG,GACtB,OAAOqG,GAAoB34B,KAAKsyB,IArFF,IAqFeA,EAASv2B,WAAW7E,QAE7D8hC,GAAc,SAAAl7B,GAAI,OAxFA,KAwFIm7B,yBAAcn7B,IACpCg7B,GAAuB,SAAAtwB,GAAG,OAAIowB,GAAYxH,OAAM,SAAAzX,GAAG,OAAItY,OAAOC,KAAKkH,GAAK9G,SAASiY,OACjFuf,GAAoB,SAAAC,GACxB,OAAIA,EAAKj2B,KAzFW,KA0FX,CACL2M,KAAM,sBACNrX,QAAQ,gCAAD,OAAkC,GAAuBgM,QAAQ,GAAjE,SAIJ,MCvEM,SAAS40B,GAAT,GAAmD,IAA7BjN,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC/C,EAA4C5sB,mBAAS,MAArD,mBAAO8xB,EAAP,KAAwB+H,EAAxB,KACA,EAAsB75B,mBAAS,IAA/B,mBAAO7H,EAAP,KAAYwpB,EAAZ,KACA,EAAkC3hB,mBAAS,IAA3C,mBAAO85B,EAAP,KAAkBC,EAAlB,KACA,EAAoC/5B,oBAAS,GAA7C,mBAAOkrB,EAAP,KAAmB6B,EAAnB,KACQplB,EAAa6B,IAAb7B,SACA6c,EAAcG,KAAdH,UAEFwV,EAAY,uCAAG,WAAOC,GAAP,2BAAA1iC,EAAA,6DAAW8L,IAAX,iCACnB0pB,EAAc1pB,GADK,kBAGX42B,IAHW,uDAKjB/gC,QAAQlB,MAAR,MACA+hC,EAAa,qBAAD,OAAsB,KAAE/gC,SAAF,OANjB,QAQnB+zB,GAAc,GARK,yDAAH,sDAWZmN,EAAO,uCAAG,WAAMD,GAAN,SAAA1iC,EAAA,6DACdwiC,EAAa,IADC,kBAGNE,IAHM,uDAKZ/gC,QAAQlB,MAAR,MACA+0B,GAAc,GACdgN,EAAa,qBAAD,OAAsB,KAAE/gC,SAAF,OAPtB,yDAAH,sDAWPmhC,EAAc,uCAAG,WAAOC,GAAP,iDAAA7iC,EAAA,6DACrBoqB,EAAO,IADc,SAIf,IAAIznB,SAAQ,SAAAC,GAAO,OAAIG,WAAWH,EAAS,MAJ5B,cAMfy6B,EAAe3zB,cAAGm5B,EAAIlY,MAAQ,IAAM/W,KAAKC,MAAQ,IAAMzP,KAAKk5B,SAAW,KAA8B,kBAAhBC,aAA4BA,YAAY1pB,QAC7H2pB,EAAiBV,UAAOW,aAAa,CAAEJ,iBAEvCyF,EAAkBhG,UAAOW,aAAa,CAAEJ,iBAAgB0F,SAASC,OAAOzpB,MAAM,KAAKtD,MAAM,EAAG,GAAGuD,KAAK,KAAO,IAAMqpB,EAAIlY,MATtG,SAWO5kB,EAAU,GAAD,OAAIqvB,EAAJ,eAA6B,CAAE0N,oBAX/C,WAWfG,EAXe,QAYF9hC,QAZE,uBAYa,IAAIb,MAAJ,iDAAoD2iC,EAAcxhC,SAAWwhC,IAZ1F,eAcbl8B,EAAmFD,EAAnFC,KAAME,EAA6EH,EAA7EG,iBAAkBD,EAA2DF,EAA3DE,oBAAqBE,EAAsCJ,EAAtCI,gBAAiBE,EAAqBN,EAArBM,iBAChE87B,EAAoB,CAAC97B,EAAkBo2B,EAAer8B,QAAS8hC,EAAc9hC,SAC7Eq1B,EAAS,CACbtvB,kBACAq0B,SAAU2H,EAAkB,GAC5B1H,IAAK0H,EAAkB,GACvBzH,IAAKyH,EAAkB,IAEnB5H,EAAW,IAAI3d,YACfwlB,EAAUxH,qBAAUL,EAASM,OAAO,CAAC,iCAAkC,CAACsH,KACxEE,EAAa,CAAC,CAACl8B,EAAiBi8B,IAChC9M,EAAWgN,kCAAuBp8B,EAAkBm8B,EAAY,CAAEE,SAAU,IAC5EC,EAAetgC,sBAAW,KAAO8V,4BAAiB/R,EAAqBD,EAAMsvB,GAAUrxB,SAAS,QA1BjF,KA2BIoB,KA3BJ,UA4Bbo3B,EAAeP,QAAQ4F,EAAIhP,WAAY/sB,EAAeO,gBA5BzC,2BA2BfkvB,EA3Be,KA2BSlwB,UA3BT,0BA+BIN,EAAU,GAAD,OAAIqvB,EAAJ,qBAA2BmO,GAAgB,CAC3E5Y,MAAOkY,EAAIlY,MACX4L,iBAAkBsM,EAAIpO,kBAAe+O,EAAYjN,EACjDuM,kBACA/7B,OAAMC,sBAAqBC,mBAC3Bm8B,aACA9M,eAAgBE,IArCG,WAuCM,wBARrBiN,EA/Be,QAuCNhiC,QAvCM,wBAwCnB2oB,EAAO,6CAxCY,8BA2ChBqZ,EAAWjlB,QA3CK,wBA4CnB7c,QAAQC,IAAI6hC,GACZrZ,EAAO,6BAAD,OAA8BqZ,EAAWhiC,SAAW,YA7CvC,2BAiDrB4zB,EAAa,CACX3rB,GAAI65B,EACJ5Y,MAAOkY,EAAIlY,MACX4L,mBACAxvB,OAAMC,sBAAqBC,mBAAkBovB,WAC7CG,SACAqC,oBAAqBgK,EAAIpO,aAEzBA,eAAgBoO,EAAIpO,aAEpBwD,mBAAmB,GAClB,CAAExB,QAAQ,EAAMiN,OAAO,IA5DL,4CAAH,sDAiEdC,EAAgBx6B,sBAAW,uCAAC,WAAOuP,GAAP,2BAAA1Y,EAAA,yDAC1BojC,EAAa,CAAC,CAACngC,sBAAWyV,GAAOkrB,sBAAW,OAAQ,MAClD78B,EAAgDD,EAAhDC,KAAME,EAA0CH,EAA1CG,iBAAkBD,EAAwBF,EAAxBE,oBAC1BqvB,EAAWgN,kCAAuBp8B,EAAkBm8B,EAAY,CAAEE,SAAU,IAC5EC,EAAetgC,sBAAW,KAAO8V,4BAAiB/R,EAAqBD,EAAMsvB,GAAUrxB,SAAS,SAElGowB,EAN4B,iCAOLrvB,EAAU,GAAD,OAAIqvB,EAAJ,qBAA2BmO,GAAgB,CAC3Ex8B,OAAMC,sBAAqBC,mBAC3Bm8B,eAT4B,WAOxBK,EAPwB,QAWdjlB,SAAailB,EAAWhiC,SAAWgiC,EAAWhiC,QAAQkJ,SAAS,kBAXjD,uBAW2E84B,EAX3E,iCAczB,CACL/5B,GAAI65B,EACJx8B,OAAMC,sBAAqBC,mBAAkBovB,WAC7CG,OAAQ,CAAEr1B,QAAS8B,sBAAWyV,MAjBA,4CAAD,sDAmB9B,CAAC0c,IAlH2D,SAoHhDyO,IApHgD,2EAoH/D,8BAAA7jC,EAAA,yDACiC,qBAApB6R,OAAOsH,SADpB,sBAEU,IAAI7Y,MAAM,0BAFpB,cAIQ6Y,EAAWtH,OAAOsH,SAJ1B,SAKyBA,EAAS9Y,QAAQ,CAAE8F,OAAQ,wBALpD,WAKQ29B,EALR,QAMgB3jC,OANhB,sBAM8B,IAAIG,MAAM,yBANxC,UAO0B,IAApBwjC,EAAS3jC,OAPf,0CAOoC4jC,EAAcD,EAAS,KAP3D,QASExB,EAAiB,CAAE5hC,UAAWojC,EAAUE,WAAY,SATtD,6CApH+D,sBAgI/D,IAAMC,EAAmB96B,sBAAW,uCAAC,WAAO+6B,EAAQC,GAAf,uBAAAnkC,EAAA,sEAIqC8F,EAAM,GAAD,OAAIsvB,EAAJ,qBAA2B8O,IACrG5iC,MAAK,SAAAiD,GAAC,OAAIA,EAAE+B,UALoB,mBAI3BS,EAJ2B,EAI3BA,KAAMC,EAJqB,EAIrBA,oBAAqBC,EAJA,EAIAA,iBAAkBovB,EAJlB,EAIkBA,SAE/CtvB,GAAQC,GAAuBC,GAAoBovB,EANtB,sBAMuC,IAAI/1B,MAAJ,2CAA8C4jC,IANrF,gCAO5B,CACLx6B,GAAIw6B,EACJn9B,OAAMC,sBAAqBC,mBAAkBovB,WAC7CG,OAAQ,CAAEr1B,QAASgjC,KAVc,4CAAD,wDAYjC,CAAC/O,IAEEgP,EAAiBj7B,sBAAW,uCAAC,WAAOk7B,GAAP,eAAArkC,EAAA,6DAC7BskC,EAAiB,GADY,SAG3B3hC,QAAQ6Y,IAAI6oB,EAAKnjC,IAAL,uCAChB,WAAMijC,GAAN,eAAAnkC,EAAA,sEACqB8F,EAAM,GAAD,OAAIsvB,EAAJ,kCAAwC+O,EAAxC,+BAD1B,cACQv9B,EADR,YAEsB0D,OAFtB,SAE2C1D,EAAKN,OAFhD,wBAE6Bi+B,QAF7B,gBAIc1zB,SAAQ,mCAAEnH,EAAF,iBAAa46B,EAAe56B,GAAMzG,sBAAWkhC,MAJnE,2CADgB,wDAHe,uBAYpBxhC,QAAQ6Y,IACnBlR,OAAOi6B,QAAQD,GAAgBpjC,KAAI,mCAAEwI,EAAF,KAAM8sB,EAAN,YAAkByN,EAAiBv6B,EAAI8sB,OAb3C,mFAAD,sDAe/B,CAACyN,EAAkB7O,IA7JyC,SA+JhDoP,IA/JgD,2EA+J/D,8BAAAxkC,EAAA,6DAOQif,EAAW,IAAIwlB,qBAAkB,CAAEC,uBAAwBC,OAPnE,SAQ0B1lB,EAAS2lB,iBAAiB,IARpD,OAQQlkC,EARR,OASE4hC,EAAiB,CACf5hC,YAAWsjC,WAAY,SAAUpZ,YAAa,CAC5C9e,KAAM,SACNwlB,KAAMlrB,KAAKqiB,MAAMriB,KAAKC,UAAU4Y,EAAS4lB,4BAZ/C,4CA/J+D,+BAgLhDC,IAhLgD,2EAgL/D,sBAAA9kC,EAAA,0DACMqlB,KADN,gCAEU0f,IAFV,6CAIUC,IAJV,4CAhL+D,+BAwLhDD,IAxLgD,2EAwL/D,gCAAA/kC,EAAA,6DACQif,EAAW,IAAIgmB,qBAAkB,CACrC9oB,UAAW,EACX+oB,iCAAkCC,2CAClC7iC,mBAAoBxC,OAJxB,SAS0Bmf,EAAS2lB,iBAAiB,IATpD,cASQlkC,EATR,gBAU4Bue,EAASmmB,8BAA8B9jC,MAAK,SAAAgwB,GAAI,MAAK,CAC7ExlB,KAAM,SACNwlB,KAAMlrB,KAAKqiB,MAAMriB,KAAKC,UAAUirB,QAZpC,OAUQ1G,EAVR,OAeE0X,EAAiB,CAAE5hC,YAAWsjC,WAAY,SAAUpZ,gBAftD,4CAxL+D,+BA0MhDoa,IA1MgD,2EA0M/D,gCAAAhlC,EAAA,6DACMS,EAAQ,KADd,kBAG2BF,eAH3B,QAGU8kC,EAHV,QAIkB5kC,MAQZA,EAAQ4kC,EAAS5kC,OAPXmqB,EAAc,CAAE9e,KAAM,SAAUw5B,kBAAmB,UACvB,IAA9BD,EAAS3kC,UAAUP,OACnB4jC,EAAcsB,EAAS3kC,UAAU,GAAIkqB,GAErC0X,EAAiB,CAAE5hC,UAAW2kC,EAAS3kC,UAAWsjC,WAAY,SAAUpZ,iBATlF,gDAeIjpB,QAAQC,IAAR,MAEEnB,EADE,KAAEe,YAAuB,mBAAT,KAAEkI,GACZ,kBACC,KAAElI,YAA+B,QAAjB,KAAEA,WACnB,yEAEA,KAAEC,QArBhB,QAyBMhB,GACF+hC,EAAa,iBAAD,OAAkB/hC,EAAMgB,SAAWhB,IA1BnD,0DA1M+D,sBAwO/D,IAAMsjC,EAAgB56B,sBAAW,uCAAC,WAAOuP,EAAMkS,GAAb,iBAAA5qB,EAAA,yDAC1BulC,EAAa,SAAC9zB,EAAK6C,GAAN,OAAe+gB,EAAa,2BAAK5jB,GAAN,IAAWmZ,gBAAetW,IAInE8gB,EAL2B,4BAKRmQ,EALQ,SAKS5B,EAAcjrB,GALvB,+BAK8B,CAAE+d,QAAQ,GALxC,+DAOZ2N,EAAe,CAAC1rB,IAPJ,YAO1B8sB,EAP0B,QAQrBrlC,OARqB,6BAS5BolC,EAT4B,UASX5B,EAAcjrB,GATH,yBASU,CAAE+d,QAAQ,EAAMiN,OAAO,IATjC,2CAW9BtzB,EAAS,SAAD,OAAUo1B,EAAMrlC,OAAhB,0CAAwDuY,GAAQ,CAAEtJ,QAAS,OACnFo2B,EAAM30B,SAAQ,SAACY,EAAKtM,GAAN,OAAYogC,EAAW9zB,EAAK,CAAEglB,OAAc,IAANtxB,OAZtB,4CAAD,wDAc9B,CAACiL,EAAUuzB,EAAeS,EAAgB/O,EAAcD,IAErDoF,EAAyBrxB,uBAAY,SAAA0xB,GACzC8H,GAAQ,kBAAMoB,EAAclJ,EAAI15B,QAASo5B,EAAgB3P,gBACzD0X,EAAiB,QAChB,CAACyB,EAAexJ,IAInBjxB,qBAAU,WACJixB,GACFtN,EACE,cAAC,GAAD,CACEsN,gBAAiBA,EAAgB75B,UACjC85B,uBAAwBA,EACxBE,YAAW,gCAA2BH,EAAgByJ,WAA3C,sKAEX5U,iBAAiB,OAItB,CAACoL,EAAwBvN,EAAWsN,IAEvC,IAAMkL,EAASt8B,uBAAY,SAACu8B,EAAeC,GACzC,IAAMC,EAAS,IAAIC,WAMnB,GAJIF,EAAcxlC,QAChBiQ,EAAS,GAAD,OAAIu1B,EAAc,GAAGvD,KAAK/8B,KAA1B,eAAqCsgC,EAAc,GAAGvD,KAAKj2B,KAAO,MAAMsB,QAAQ,GAAhF,gBAA0Fk4B,EAAc,GAAGG,OAAO,GAAGrkC,SAAW,CAAEhB,OAAO,IAG/IilC,EAAcvlC,OAAO,CACvB,IAAMiiC,EAAOsD,EAAc,GAE3BE,EAAOG,WAAW3D,EAAK,SACvBwD,EAAOI,OAAS,SAAAC,GACd,IAAM51B,EAAU41B,EAAY36B,OAAOiT,OAC7B2nB,EAAc9/B,KAAKqiB,MAAMpY,GACzB81B,EAAgBrE,GAA6BoE,GAE/CC,EAAc3nB,QAAS6W,EAAa6Q,EAAa,CAAEzP,QAAQ,IAC1DrmB,EAAS+1B,EAAc1kC,QAAS,CAAEhB,OAAO,QAGjD,CAAC2P,EAAUilB,IAEd,EAAgC+Q,aAAY,CAC1CX,SACAY,SAAS,EACTC,YAAY,EACZC,OAAQ,mBACRC,SAAU,EACVC,UAAWtE,KANLuE,EAAR,EAAQA,cAAel9B,GAAvB,EAAuBA,KAUjBm9B,GAAwB,qCAC5B,yBAAQz+B,QAAS,kBAAMu6B,EAAa+B,EAA6B,aAAjE,UACE,qBAAKz8B,UAAU,OAAOI,MAAO,CAAEC,gBAAiB,iCADlD,YAIA,yBAAQF,QAAS,kBAAMu6B,EAAaqC,EAA6B,aAAjE,UACE,qBAAK/8B,UAAU,OAAOI,MAAO,CAAEC,gBAAiB,iCADlD,YAIA,yBAAQF,QAAS,kBAAMy6B,EAAQkB,IAA/B,UACE,qBAAK97B,UAAU,OAAOI,MAAO,CAAEC,gBAAiB,mCADlD,wBAIA,yBAAQF,QAAS,kBAAMy6B,EAAQn5B,KAA/B,UACE,qBAAKzB,UAAU,OAAf,SAAsB,cAAC,KAAD,CAASoE,KAAM,OADvC,sBAIA,qCAAWu6B,SAGb,OAAKtR,EAaG,sBAAKrtB,UAAU,qBAAf,UACJ,qBAAK2B,GAAG,SACR,0BAASA,GAAG,aAAZ,UACE,sBAAKA,GAAG,aAAR,UACE,sDACA,cAAC,GAAD,CACEiqB,WAA2B,UAAfA,EACZD,aAAc,SAAAmP,GAAG,OAAIJ,GAAa,kBAAMG,EAAeC,KAAM,UAC7DjrB,OAAO,WAERhX,EAAO,mBAAGmH,UAAU,QAAb,SAAsBnH,IAAa,gCAG7C,sBAAK8I,GAAG,iBAAR,UACE,qBAAK3B,UAAU,iBACf,sCACA,qBAAKA,UAAU,oBAEjB,sBAAK2B,GAAG,cAAR,UACE,gDACgB,aAAfiqB,EAA6B,qCAC5B,cAAC,IAAD,CAAMjf,GAAG,eAAT,SACE,mCACE,qBAAK3M,UAAU,OAAOI,MAAO,CAAEC,gBAAiB,mCADlD,mBAKDu+B,GACApE,EAAa,mBAAGx6B,UAAU,QAAb,SAAsBw6B,IAAmB,gCACjD,qBAAKx6B,UAAU,gBAAf,SACN,cAAC,EAAD,eA1CA,sBAAKA,UAAU,qBAAf,UACN,qBAAK2B,GAAG,SACR,yBAASA,GAAG,aAAZ,SACE,sBAAKA,GAAG,cAAR,UACE,gDACCi9B,GACD,+GA7UVhC,KAAciC,SAAS,CACrBjc,MAAO,uBACPkc,OAAQ,2B,4BCaKC,GApCE,SAAC,GAAkE,IAAhEjG,EAA+D,EAA/DA,UAAWpG,EAAoD,EAApDA,gBAAiBnU,EAAmC,EAAnCA,WAAYwJ,EAAuB,EAAvBA,iBAClDiX,EAAiB,SAACp0B,GAAD,OAAaR,EAASlB,MAAK,qBAAGvH,KAAgBiJ,MAC/D2P,EAAgBue,EAAUve,cAAcza,QAAO,gBAAG8K,EAAH,EAAGA,QAASuP,EAAZ,EAAYA,MAAZ,OAAwBvP,IAAY8nB,EAAgB/wB,IAAMwY,EAAMC,KAAO,KAE5H,OACI,sBAAKzY,GAAG,WAAR,UACI,sBAAM3B,UAAU,kBAAhB,eADJ,IACiD+nB,EAAiB+Q,EAAUliB,QAAQuD,MAAME,WACtF,uBAAMra,UAAU,kBAAhB,cAAqC+nB,EAAiB+Q,EAAUliB,QAAQuD,MAAMrF,aAE9E,sBAAKnT,GAAG,iBAAR,UACM4Y,EAAcniB,OAAS,kDAA+B,KAEpDmiB,EAAcza,QAAO,gBAAG8K,EAAH,EAAGA,QAAH,OAAiBo0B,EAAep0B,MAAUzR,KAAI,WAAqBiE,GAArB,IAAGwN,EAAH,EAAGA,QAASuP,EAAZ,EAAYA,MAAZ,OAC/D,sBAAKna,UAAU,oBAAf,UACI,sBAAKA,UAAU,gBAAgBG,QAAS,kBAAMoe,EAAW3T,IAAzD,UACI,kCACI,sBAAM5K,UAAU,mBAAhB,eADJ,IACkD+nB,EAAiB5N,EAAME,WACrE,uBAAMra,UAAU,mBAAhB,cAAqC+nB,EAAiB5N,EAAMrF,gBAHpE,KAMI,sBAAK9U,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS2+B,EAAep0B,GAAS3K,KAAjC,QAC7C,qBAAKD,UAAU,OAAf,SACMg/B,EAAep0B,GAAS1K,aAIpCqa,EAAcniB,OAAS,IAAMgF,EAAI,wCAAqB,OAdpBwN,aCwDjDq0B,I,gBAlEc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAsB5B,OACI,sBAAKv9B,GAAG,wBAAR,UACI,sBAAK3B,UAAU,sBAAf,UACI,uFAGA,cAAC,IAAD,CAAS2M,GAAG,kBAAZ,SACI,cAAC,EAAD,CAAQ1K,OAAK,EAAChC,KAAM,cAAC,KAAD,IAApB,uBAEJ,sBAAKD,UAAU,YAAf,UACI,2EACA,cAAC,EAAD,CAAQ0D,MAAI,EAAC1B,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAiBE,QAAS++B,EAAnD,wCAGR,sBAAKl/B,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,oBACA,qBAAKA,UAAU,OAAf,SArCG,CACX,CACIC,KAAM,iHACN+R,OAAQ,MACR4E,QAAS,UACTI,WAAY,WAEhB,CACI/W,KAAM,iHACN+R,OAAQ,MACR4E,QAAS,MACTI,WAAY,WAEhB,CACI/W,KAAM,iHACN+R,OAAQ,OACR4E,QAAS,IACTI,WAAY,UAsBO7d,KAAI,gBAAG8G,EAAH,EAAGA,KAAM+R,EAAT,EAASA,OAAQ4E,EAAjB,EAAiBA,QAASI,EAA1B,EAA0BA,WAA1B,OACP,sBAAKhX,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKm/B,IAAKl/B,EAAMm/B,IAAI,iBAExB,qBAAKp/B,UAAU,OAAf,SACMgS,IAEN,qBAAKhS,UAAU,cACf,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACM4W,EADN,IACgB,sBAAM5W,UAAU,SAAhB,SAA2BgS,OAE3C,sBAAKhS,UAAU,SAAf,UACI,sBAAMA,UAAU,SAAhB,eADJ,IACwCgX,UAbpBhF,gBCiEzCqtB,GArGG,SAAC,GAAuD,IAArDvG,EAAoD,EAApDA,UAAWluB,EAAyC,EAAzCA,QAAS/N,EAAgC,EAAhCA,QAASkrB,EAAuB,EAAvBA,iBACtC7C,EAAcG,KAAdH,UAER,EAAkCxkB,mBAAS,IAA3C,mBAAO4+B,EAAP,KAAkBC,EAAlB,KAEQ5lB,EAA6Dmf,EAA7Dnf,iBAAkBE,EAA2Cif,EAA3Cjf,oBAAqBpX,EAAsBq2B,EAAtBr2B,OAAQoI,EAAciuB,EAAdjuB,UACjD20B,EAAe/8B,EAAOmC,MAAK,SAAC3M,EAAG4M,GACjC,IAAM46B,EAAa56B,EAAEmS,WAAa/e,EAAE+e,WACpC,OAAmB,IAAfyoB,EAAyBxnC,EAAE+Z,OAAO0tB,cAAc76B,EAAEmN,QAC/CytB,KAEL3iB,EAAiBjS,EAAU/K,QAAO,kBAAyB,WAAzB,EAAGuD,SACrCs8B,GAA0BhmB,IAAqBlX,EAAOrK,SAAayhB,IAAwBiD,EAAe1kB,OAE1GwnC,EAAY,SAACr6B,EAAOs6B,EAAK7tB,EAAQ4E,EAASI,EAAY5d,GAA1C,IAAmD0mC,EAAnD,+DACd,sBAAK9/B,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAEQs/B,EAAU18B,SAASi9B,GACf,cAAC,KAAD,CAASz7B,KAAM,KAEf,qBAAK+6B,IAAKU,EAAKE,UAAU,QAAQX,IAAI,aAAanf,QAAS,kBAAMsf,GAAa,SAAAS,GAAM,4BAAQA,GAAR,CAAgBH,YAGhH,qBAAK7/B,UAAU,OAAf,SACMgS,IAEN,qBAAKhS,UAAU,cACf,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,QAAhB,SAA0B+nB,EAAiBnR,KAC3C,sBAAM5W,UAAU,SAAhB,SAA2BgS,OAE/B,sBAAKhS,UAAU,SAAf,UACI,sBAAMA,UAAU,SAAhB,eADJ,IACwC+nB,EAAiB/Q,EAAWtR,QAAQ,UAI5Eo6B,EACI,qBAAK9/B,UAAU,UAAf,SACI,cAAC,IAAD,CAAS2M,GAAE,2BAAsBvT,GAAjC,SACI,cAAC,EAAD,CAAQ6I,OAAK,EAAChC,KAAM,cAAC,IAAD,IAApB,sBAIR,OA9BZ,gBAAqC7G,EAArC,YAAgDmM,KAkC9C06B,EAAoB,kBAAM/a,EAAU,cAAC,GAAD,CAAeta,QAASA,EAAS/N,QAASA,EAASi8B,UAAWA,MAExG,OACI,sBAAKn3B,GAAG,kBAAR,UAEQg+B,EACI,cAAC,GAAD,CAAsBT,gBAAiBe,IAEvC,KAER,qCAEQtmB,EACI,cAAC,EAAD,KAECgmB,GAAyBH,EAAapnC,OACnC,sBAAK4H,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,mBAEI,cAAC,EAAD,CAAQ0D,MAAI,EAAC1B,OAAK,EAAC/B,KAAM,cAAC,IAAD,IAAiBE,QAAS,kBAAM8/B,KAAzD,0BAEJ,qBAAKjgC,UAAU,OAAf,SAEQw/B,EAAarmC,KAAI,WAA0DiE,GAA1D,IAAGhE,EAAH,EAAGA,QAAS4Y,EAAZ,EAAYA,OAAQiF,EAApB,EAAoBA,cAAeL,EAAnC,EAAmCA,QAASI,EAA5C,EAA4CA,WAA5C,OACb4oB,EAAUxiC,EAAG6Z,EAAejF,EAAQ4E,EAASI,EAAY5d,GAAS,UARpD,mBAalC,KAGJygB,EACI,cAAC,EAAD,IAEIiD,EAAe3jB,KAAI,WAAoBiE,GAApB,IAAGiG,EAAH,EAAGA,MAAOmY,EAAV,EAAUA,OAAV,OACf,sBAAKxb,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SAAyBqD,IACzB,qBAAKrD,UAAU,OAAf,SAEQwb,EAAOriB,KAAI,WAAoEiE,GAApE,IAAG8iC,EAAH,EAAGA,SAAUluB,EAAb,EAAaA,OAAQiF,EAArB,EAAqBA,cAAeL,EAApC,EAAoCA,QAASI,EAA7C,EAA6CA,WAAY5d,EAAzD,EAAyDA,QAAzD,OACPwmC,EAAUxiC,EAAG6Z,EAAejF,EAAQ4E,EAASI,EAAY5d,EAAsB,cAAb8mC,UALlF,mBAA2C9iC,cC3B5D+iC,I,gBApEiB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,mBAuC9C,OACI,sBAAK1+B,GAAG,2BAAR,UACI,qBAAK3B,UAAU,mBAAf,SACKogC,GAAiBC,EAAqB,6CAAgD,+CAE3F,qBAAKrgC,UAAU,wBACf,qBAAK2B,GAAG,eAAR,SA5Ca,CACjB,CACI2+B,eAAgB,aAChBC,cAAe,iJACfrgC,KAAM,mBACNsgC,MAAO,4IACP3pB,MAAO,OAEX,CACIypB,eAAgB,iBAChBC,cAAe,+IACfrgC,KAAM,sBACNsgC,MAAO,4IACP3pB,MAAO,MAEX,CACIypB,eAAgB,qBAChBC,cAAe,kJACfrgC,KAAM,oBACNsgC,MAAO,2IACP3pB,MAAO,QAEX,CACIypB,eAAgB,qBAChBC,cAAe,+IACfrgC,KAAM,OACNsgC,MAAO,4IACP3pB,MAAO,SAEX,CACIypB,eAAgB,WAChBC,cAAe,kJACfrgC,KAAM,qBACNsgC,MAAO,yIACP3pB,MAAO,UAYc1d,KAAI,gBAAGmnC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,cAAergC,EAAlC,EAAkCA,KAAMsgC,EAAxC,EAAwCA,MAAO3pB,EAA/C,EAA+CA,MAA/C,OACb,sBAAK7W,UAAU,cAAf,UACI,qBAAKA,UAAU,UAAUI,MAAO,CAACC,gBAAgB,OAAD,OAASmgC,EAAT,QAChD,sBAAKxgC,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAkBI,MAAO,CAACC,gBAAgB,OAAD,OAASkgC,EAAT,QACtDD,KAEN,sBAAKtgC,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SAAwBE,IACxB,sBAAKF,UAAU,QAAf,UAAuB,sBAAMA,UAAU,mBAAhB,eAAvB,IAAqE6W,aAT/C3W,aCE3CugC,GA9CM,SAAC,GAAkC,IAAhC3H,EAA+B,EAA/BA,UAAWsH,EAAoB,EAApBA,cAU/B,OAAItH,EAAUjf,oBAA4B,cAAC,EAAD,KAErCif,EAAUne,aAAaviB,QAAUgoC,EAE9B,cAAC,GAAD,CACIA,cAAeA,EACfC,mBAAoBvH,EAAUne,aAAaviB,SAMnD,qBAAKuJ,GAAG,eAAR,SAEQm3B,EAAUne,aAAaxhB,KAAI,gBAAGyR,EAAH,EAAGA,QAASxR,EAAZ,EAAYA,QAASknC,EAArB,EAAqBA,eAAgBC,EAArC,EAAqCA,cAArC,SAAoD/kB,QAAwB,IAAIriB,KAAI,gBAvBzG+kB,EAuB4G/N,EAAH,EAAGA,QAASuwB,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,SAAU3pB,EAAjC,EAAiCA,WAAjC,OAC3G,qBAAKhX,UAAU,cAAf,SACI,eAAC,IAAD,CAAS2M,GAAE,sBAAiB/B,EAAjB,YAA4BxR,EAA5B,YAAuC+W,GAAlD,UACI,qBAAKnQ,UAAU,UAAUI,MAAO,CAACC,gBAAgB,OAAD,QA1BtD6d,EA0ByEyiB,GAzBvFziB,EAAMA,EAAI5I,WAAW,yBAA2B4I,EAAI0iB,QAAQ,8BAA+B,IAAM1iB,GAEzF5I,WAAW,WAAmB4I,EAAI0iB,QAAQ,6BAA8B,yBAC5E1iB,EAAI1M,MAAM,KAAK,GAAGsQ,SAAS,kBAA0B,wBAA0B5D,EAAI1M,MAAM,KAAKtD,MAAM,GAAGuD,KAAK,KAEzGyM,GAoB6D,QAChD,sBAAKle,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAkBI,MAAO,CAACC,gBAAgB,OAAD,OAASkgC,EAAT,QACxD,sBAAMvgC,UAAU,kBAAhB,SAAoCsgC,OAExC,sBAAKtgC,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SAAwB0gC,IACxB,sBAAK1gC,UAAU,QAAf,UAAuB,sBAAMA,UAAU,mBAAhB,eAAvB,IAAoEgX,EAAWtR,QAAQ,gBAVrEyK,YCpBhD0wB,GAAgB,CAClB,CACI/+B,MAAO,UAEX,CACIA,MAAO,cAITg/B,GAAc,CAChB,CACIh/B,MAAO,UAEX,CACIA,MAAO,iBAIA,SAASi/B,GAAT,GAA8F,IAAzEjI,EAAwE,EAAxEA,UAAWpG,EAA6D,EAA7DA,gBAAiBsO,EAA4C,EAA5CA,gBAAiBziB,EAA2B,EAA3BA,WAAY0iB,EAAe,EAAfA,YACnFl5B,EAAUC,uBACRk5B,EAAUC,sBAAVD,MAER,EAA8CxgC,mBAAS,IAAvD,mBAAO0gC,EAAP,KAAwBC,EAAxB,KACA,EAAoD3gC,mBAAS,IAA7D,mBAAO4gC,EAAP,KAA2BC,EAA3B,KACA,EAAkC7gC,mBAAS,IAA3C,mBAAO8gC,EAAP,KAAkBC,EAAlB,KACA,EAAsB/gC,mBAASwgC,GAASJ,GAAY,GAAGh/B,OAAvD,mBAAO4/B,EAAP,KAAYC,EAAZ,KAkCA,OAhCApgC,qBAAU,WACN,IAAKmgC,GAAOA,IAAQZ,GAAY,GAAGh/B,MAAO,OAAOiG,EAAQ64B,QAAR,qBACjD74B,EAAQ64B,QAAR,4BAAqCc,MACtC,CAACA,EAAK35B,IAET65B,2BAAgB,WACZ,IAAMhpB,EAAakgB,EAAUr2B,OACxBtJ,KAAI,gBAAGkK,EAAH,EAAGA,MAAO2O,EAAV,EAAUA,OAAQgF,EAAlB,EAAkBA,WAAlB,MAAoC,CACrC3T,MAAOA,GAAS2O,EAChBlQ,MAAO0Q,QAASwE,EAAa8hB,EAAUliB,QAAQuD,MAAMC,KAAQ,KAAK1U,QAAQ,QAE7E5F,QAAO,qBAAGgC,MAAoB,KAE7B+/B,EAAiB/I,EAAUjuB,UAAU1R,KAAI,qBAAGqiB,OAEzCriB,KAAI,qBAAG6d,cACPvN,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,MACtCF,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAEjCm4B,EAAgBhJ,EAAUjuB,UAC3B1R,KAAI,gBAAGkK,EAAH,EAAGA,MAAOmY,EAAV,EAAUA,OAAV,MAAwB,CACzBnY,QACAvB,MAAO0Q,QAASgJ,EAAOriB,KAAI,qBAAG6d,cAA6BvN,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAAKk4B,EAAkB,KAAKn8B,QAAQ,QAEpI5F,QAAO,qBAAGgC,MAAoB,KAEnCu/B,EAAmBzoB,GACnB2oB,EAAsBO,KACvB,CAAChJ,EAAUliB,QAASkiB,EAAUr2B,OAAQq2B,EAAUjuB,YAEnDtJ,qBAAU,kBAAMu3B,EAAUxc,iCAAgC,CAACwc,IAGvD,0BAASn3B,GAAG,YAAZ,UACI,sBAAKA,GAAG,WAAR,UACI,sBAAKA,GAAG,UAAU3B,UAAU,QAA5B,UACI,qBAAKA,UAAU,QAAf,qBACA,qBAAKA,UAAU,UAAf,SAEQ84B,EAAUnf,iBACN,cAAC,EAAD,IAEA,cAAC,GAAD,CACImf,UAAWA,EACXpG,gBAAiBA,EACjBnU,WAAYA,EACZwJ,iBAAkBkZ,EAAYlZ,wBAKlD,sBAAKpmB,GAAG,QAAQ3B,UAAU,QAA1B,UACI,sBAAKA,UAAU,QAAf,uBAEI,cAAC,GAAD,CAAUiC,OAAK,EAAC6Y,aAAc+lB,GAAc,GAAG/+B,MAAOgmB,SAAU+Y,GAAen/B,SAAU+/B,OAE7F,qBAAKzhC,UAAU,UAAf,SAEQwhC,IAAcX,GAAc,GAAG/+B,MAC3Bg3B,EAAUnf,iBACN,cAAC,EAAD,IAEAsnB,EAAYc,mBAAmB,cAAC,EAAD,CAAO59B,KAAMi9B,EAAiBh9B,KAAM,OAEvE00B,EAAUjf,oBACN,cAAC,EAAD,IAEAonB,EAAYc,mBAAmB,cAAC,EAAD,CAAO59B,KAAMm9B,EAAoBl9B,KAAM,eAK9F,sBAAKzC,GAAG,QAAQ3B,UAAU,QAA1B,UACI,sBAAKA,UAAU,QAAf,mBAEI,cAAC,GAAD,CAAUiC,OAAK,EAAC6Y,aAAc4mB,EAAK5Z,SAAUgZ,GAAap/B,SAAUigC,OAExE,qBAAK3hC,UAAU,UAAf,SAEQ0hC,IAAQZ,GAAY,GAAGh/B,MACnB,cAAC,GAAD,CACIg3B,UAAWA,EACXluB,QAAS8nB,EACT71B,QAASmkC,EACTjZ,iBAAkBkZ,EAAYlZ,mBAGlC,cAAC,GAAD,CAAc+Q,UAAWA,EAAWsH,cAAea,EAAYb,kBAG3E,sBAAKpgC,UAAU,SAAf,UACI,sBAAK2B,GAAG,uBAAR,UACI,cAAC,IAAD,IACA,qGACqE,mBAAGirB,KAAI,UAAK8F,EAAgBnoB,YAArB,oBAA4Cy2B,GAAmBz9B,OAAO,SAASspB,IAAI,aAA1F,kCAIrEiM,EAAUjf,sBAAwBif,EAAUjuB,UAAUzS,OAClD,KAEA,qBAAK4H,UAAU,UAAf,wC,oBCrDbgiC,GA5EE,SAAC,GAAmF,IAAjF9oC,EAAgF,EAAhFA,SAAU+oC,EAAsE,EAAtEA,gBAAiBC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,gBAAiBpa,EAAuB,EAAvBA,iBACjE1f,EAAa6B,IAAb7B,SACR,EAA0C3H,oBAAS,GAAnD,mBAAO0hC,EAAP,KAAsBC,EAAtB,KACA,EAA4B3hC,oBAAS,GAArC,mBAAO4hC,EAAP,KAAeC,EAAf,KAEMC,EAAmB,SAAAppC,GAAO,OAAIA,EAAQ8U,MAAM,EAAG,GAAK,MAAQ9U,EAAQ8U,OAAO,IAC3Eu0B,EAAW,SAAA9gC,GAAE,OAAIA,IAAOsgC,EAAkB,SAAW,IACrDlf,EAAS,SAAAC,GAAI,OAAIC,UAAgB,CAAED,SAAQE,aAE3CJ,EAAa,SAAAD,GACf,OAAIA,GAAoC,WAArBA,EAAY9e,KAA0B,SAChD8e,GAAoC,WAArBA,EAAY9e,KAA0B,SAClD,QAEV2+B,EAAW,uCAAG,WAAMtpC,GAAN,SAAAnB,EAAA,sEACVslB,UAAUkE,UAAUiI,UAAUtwB,GADpB,OAEhBiP,EAAS,wBAFO,2CAAH,sDAUjB,OACI,eAAC,EAAD,CAAU1G,GAAG,WAAW1B,KAAM8iB,EAAOkf,GAAkBzgC,MAAOumB,EAAiBya,EAAiBP,IAAmBxgC,KAAM6gC,EAAQz7B,OAAQ,kBAAM07B,GAAU,IAAzJ,UACE,qBAAKviC,UAAU,OAAf,SAEI9G,EAASC,KAAI,gBApBO6pB,EAoBJrhB,EAAH,EAAGA,GAAIihB,EAAP,EAAOA,MAAO6L,EAAd,EAAcA,OAAQ5L,EAAtB,EAAsBA,YAAtB,OACXuf,IAAkBzgC,EACd,sBAAK3B,UAAS,kBAAayiC,EAAS9gC,IAApC,UACI,sBAAK3B,UAAU,QAAQG,QAAS,kBAZ5B,SAACwB,GACrBugC,EAAYvgC,GACZ4gC,GAAU,GAU4CI,CAAgBhhC,IAAtD,UACI,qBAAK3B,UAAU,OAAOI,OAxBhB4iB,EAwB6CrhB,EAxBpC,CAAEtB,gBAAgB,OAAD,OAAS0iB,EAAOC,GAAhB,SAyBhC,sBAAKhjB,UAAU,UAAf,UACI,qBAAKA,UAAU,UAAf,SAA2B2B,IAC3B,gCAASihB,EAAK,kCAA8BA,EAA9B,eAA4CE,EAAWD,GAAvD,aAAwE2f,EAAiB/T,EAAOr1B,SAAhG,aAGtB,sBAAK4G,UAAU,UAAf,UACI,qBAAKA,UAAU,SAASG,QAAS,kBAAMuiC,EAAY/gC,IAAnD,SACI,cAAC,IAAD,MAEJ,qBAAK3B,UAAU,SAASG,QAAS,kBAAMkiC,EAAiB1gC,IAAxD,SACI,cAAC,IAAD,WAboCA,GAkBhD,sBAAKA,GAAG,yBAAyB3B,UAAS,kBAAayiC,EAAS9gC,IAAhE,UACI,qBAAK3B,UAAU,UAAf,kEAGA,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAgBG,QAAS,WACpCkiC,GAAiB,GACjBF,EAAgBxgC,IAFpB,SAII,cAAC,IAAD,MAEJ,qBAAK3B,UAAU,SAASG,QAAS,kBAAMkiC,GAAiB,IAAxD,SACI,cAAC,IAAD,WAZgE1gC,QAmBtF,qBAAKA,GAAG,cAAR,SACE,cAAC,IAAD,CAASgL,GAAG,eAAZ,SACE,cAAC,EAAD,CAAQ1M,KAAM,cAAC,IAAD,IAAkBgC,OAAK,EAArC,iC,oBCMC2gC,GA1ED,SAAC,GAA0C,IAAxChkB,EAAuC,EAAvCA,YAAac,EAA0B,EAA1BA,QAAS0B,EAAiB,EAAjBA,WACnC,EAAkD1gB,oBAAS,GAA3D,mBAAOmlB,EAAP,KAA2BC,EAA3B,KAEM+c,EAAe,uCAAG,4BAAA5qC,EAAA,sEACC+2B,KADD,cACdtwB,EADc,OAEpBonB,EAAoBpnB,GAFA,kBAGbA,GAHa,2CAAH,qDAMfokC,EAAgB1hC,sBAAW,sBAAC,8BAAAnJ,EAAA,0DAC1B4tB,EAD0B,gCAEJtI,UAAUkE,UAAUC,WAFhB,QAEpBpZ,EAFoB,QAGdgN,WAAW,QAAQoK,EAAQ,CAAExB,IAAK5V,IAHpB,uBAKpB4V,EAAM+Q,OAAO,6BACVvP,EAAQ,CAAExB,QANO,2CAQ/B,CAACwB,EAASmG,IAEPkd,EAAa,SAAC,GAAD,IAAG3iB,EAAH,EAAGA,OAAH,MAAgB,sCAAsClf,KAAKkf,IAE9E,OACI,eAAC,EAAD,CAAUze,GAAG,QAAQH,MAAM,QAAQmF,MAAOiY,EAAYxmB,OAAQyO,OAAQ,kBAAMg8B,KAA5E,UACI,sBAAKlhC,GAAG,eAAR,UACI,sBAAK3B,UAAU,UAAf,UACI,cAAC,EAAD,CAAQiC,OAAK,EAAChC,KAAM,cAAC,KAAD,IAAmBiC,SAAU2jB,EAAoB1lB,QAAS2iC,EAA9E,0BAGA,mBAAGlW,KAAK,0DAA0DrpB,OAAO,SAASspB,IAAI,aAAtF,SACI,cAAC,KAAD,CAAczoB,KAAM,UAG3ByhB,EACG,2HAIA,QAEPjH,EAAYzlB,KAAI,gBAAG0lB,EAAH,EAAGA,QAASX,EAAZ,EAAYA,IAAKY,EAAjB,EAAiBA,UAAjB,OACb,sBAAK9e,UAAU,kBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,eAAeI,MAAO,CAACC,gBAAgB,OAAD,OAASwe,EAAQqB,SAAS0Z,MAAM95B,QAAO,SAAAuJ,GAAC,OAAKA,EAAEyY,SAAS,kBAAgB,GAAxE,QACrD,cAAC,IAAD,OAEJ,mBAAG8K,KAAM/N,EAAQqB,SAASjiB,IAAKsF,OAAO,SAASspB,IAAI,aAAnD,SACI,sBAAK7sB,UAAU,UAAf,UAEQ+iC,EAAWlkB,GACP,cAAC,GAAD,CAAS7e,UAAU,kBAAkBqD,MAAM,wJAA3C,SACI,cAAC,IAAD,MAGJ,KAGJyb,EACI,cAAC,GAAD,CAAS9e,UAAU,gBAAgBqD,MAAM,mIAAzC,SACI,cAAC,IAAD,MAGJ,KAER,qBAAKrD,UAAU,OAAf,SAAuB6e,EAAQqB,SAAShgB,YAGhD,qBAAKF,UAAU,cACf,wBAAQG,QAAS,kBAAMihB,EAAWlD,IAAlC,0BA3BkCW,EAAQhE,YCb/CmoB,I,QA/BD,WACV,MAAsC/c,GAAgB,CAAEpL,IAAK,cAAeC,cAAc,IAA1F,mBAAOmoB,EAAP,KAAoBC,EAApB,KAMA,OACI,eAAC,EAAD,CAAUvhC,GAAG,gBAAgB3B,UAAS,UAAKijC,EAAc,SAAW,IAAMzhC,MAAO,cAAC,IAAD,IAAyBqF,OAL/F,WACXq8B,GAAe,IAIf,UACI,oBAAGljC,UAAU,OAAO4sB,KAAK,0EAA0ErpB,OAAO,SAASspB,IAAI,aAAvH,UACI,cAAC,IAAD,IADJ,kBAGA,oBAAG7sB,UAAU,OAAO4sB,KAAK,gDAAgDrpB,OAAO,SAASspB,IAAI,aAA7F,UACI,cAAC,IAAD,IADJ,sBAGA,oBAAG7sB,UAAU,OAAO4sB,KAAK,6BAA6BrpB,OAAO,SAASspB,IAAI,aAA1E,UACI,cAAC,IAAD,IADJ,cAGA,oBAAG7sB,UAAU,OAAO4sB,KAAK,mCAAmCrpB,OAAO,SAASspB,IAAI,aAAhF,UACI,cAAC,IAAD,IADJ,cAGA,oBAAG7sB,UAAU,OAAO4sB,KAAK,mCAAmCrpB,OAAO,SAASspB,IAAI,aAAhF,UACI,cAAC,IAAD,IADJ,eAGA,oBAAG7sB,UAAU,OAAO4sB,KAAK,8EAA8ErpB,OAAO,SAASspB,IAAI,aAA3H,UACI,cAAC,IAAD,IADJ,eCOGsW,GAjCC,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,YAAavmC,EAAqD,EAArDA,QAAS+N,EAA4C,EAA5CA,QAASmd,EAAmC,EAAnCA,iBAAkBmP,EAAiB,EAAjBA,WACxDhS,EAAcG,KAAdH,UAER,EAA8BxkB,mBAAS,IAAvC,mBAAO+1B,EAAP,KAAgB4M,EAAhB,KACA,EAAwC3iC,mBAAS,GAAjD,mBAAO4iC,EAAP,KAAqBC,EAArB,KACQrhB,EAA4BkhB,EAA5BlhB,UAAW/d,EAAiBi/B,EAAjBj/B,KAAMrF,EAAWskC,EAAXtkC,OAEnB0kC,EAAuB,kBAAMte,EAAU,cAAC,GAAD,CAAkBuR,QAASA,EAAS7rB,QAASA,EAAS/N,QAASA,EAASq6B,WAAYA,MAgBjI,OAdA31B,qBAAU,WACN,IAAIzC,GAAWqF,GAASA,EAAKsS,QAA7B,CAEA,IAAQggB,EAAyBtyB,EAAzBsyB,QAASG,EAAgBzyB,EAAhByyB,YACjB,GAAKH,EAAQr+B,OAAb,CAEA,IAAMqrC,EAAiBlhC,OAAOmhC,YAAYjN,EAAQt9B,KAAI,kBAAsB,CAAtB,EAAGi1B,IAAH,EAAQqI,QAA4B55B,EAAQ8E,KAAO,OACnG2hC,EAAe/gC,OAAOwZ,OAAO0nB,GAAgBh6B,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GACrF85B,EAAe7M,YAAcA,EAE7B2M,EAAgBD,GAChBD,EAAWI,OACZ,CAACt/B,EAAMrF,EAAQjC,IAGbqlB,IAAcpjB,GAAWqF,EAKtB,eAAC,EAAD,CAAQlC,OAAK,EAAC6B,QAAM,EAAC5B,SAAUggB,EAAW/hB,QAASqjC,EAAnD,UAA2Ezb,EAAiBub,EAAa59B,QAAQ,IAAjH,aAJA,cAAC,GAAD,CAASrC,MAAM,uEAAf,SACI,cAAC,EAAD,CAAQpB,OAAK,EAAC6B,QAAM,EAAC5B,UAAQ,EAAC/B,QAASqjC,EAAvC,4BCwCDG,GA3DA,SAAC,GAcT,IAbL/kB,EAaI,EAbJA,YACAc,EAYI,EAZJA,QACA0B,EAWI,EAXJA,WACA8gB,EAUI,EAVJA,YACAC,EASI,EATJA,gBACAyB,EAQI,EARJA,YACA1qC,EAOI,EAPJA,SACA0R,EAMI,EANJA,QACA2T,EAKI,EALJA,WACAD,EAII,EAJJA,YACA8kB,EAGI,EAHJA,YAGI,IAFJnC,YAAeb,EAEX,EAFWA,cAAeyD,EAE1B,EAF0BA,kBAAmB9b,EAE7C,EAF6CA,iBACjDmP,EACI,EADJA,WAEA,EAAkCx2B,oBAAS,GAA3C,mBAAOsG,EAAP,KAAmBC,EAAnB,KAEM68B,EAAgBxlB,EAAYnlB,KAAI,gBAAGwI,EAAH,EAAGA,GAAH,MAAyB,CAC7D0B,MADoC,EAAOnD,KAE3C4B,MAAOH,EACP1B,KAHoC,EAAaA,SAM7CpD,EAAU3D,EAASgQ,MAAK,qBAAGvH,KAAgBiiC,KAC3CG,EAAc9gB,UAAgB,CAAED,KAAMnmB,EAAUA,EAAQ8E,GAAK,OAAQuhB,YAE3E,OACE,sBAAKvhB,GAAG,SAAR,UACE,sBAAKA,GAAG,cAAcxB,QAAS,kBAAM8G,GAAaD,IAAlD,UACE,qBAAKhH,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS0jC,EAAT,QAC7C,cAAC,IAAD,IACA,qBAAK/jC,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASuK,EAAQ3K,KAAjB,QAC7C,qBAAK0B,GAAG,cAAR,SACIqF,EAAa,cAAC,IAAD,IAAoB,cAAC,IAAD,SAIvC,eAAC,IAAD,CAAS2F,GAAI,oBAAb,UACE,qBAAKhL,GAAG,SACR,qBAAKA,GAAG,YAEV,sBAAK3B,UAAS,oBAAegH,EAAa,OAAS,IAAnD,UACE,cAAC,GAAD,CACEo8B,YAAaA,EACbvmC,QAASA,EACT+N,QAASA,EACTmd,iBAAkBA,EAClBmP,WAAYA,IAEbkJ,EAAgB,cAAC,IAAD,CAAiB4D,OAAO,UAAU5/B,KAAM,GAAIjE,QAAS0jC,IAAwB,cAAC,IAAD,CAAgBG,OAAO,UAAU5/B,KAAM,GAAIjE,QAAS0jC,IAClJ,cAAC,GAAD,CAAOjlB,YAAaA,EAAac,QAASA,EAAS0B,WAAYA,IAC/D,cAAC,GAAD,CAAUloB,SAAUA,EAAU+oC,gBAAiB2B,EAAa1B,YAAaA,EAAaC,gBAAiBA,EAAiBpa,iBAAkBA,IAC1I,cAAC,GAAD,CAAQjN,aAAclQ,EAAQjJ,GAAI9B,MAAOikC,EAAepiC,SAAU,SAAAI,GAAK,OAAIyc,EAAWzc,MACtF,cAAC,GAAD,W,oBCuCOmiC,GA1FC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOpL,EAAkC,EAAlCA,UAAW/Q,EAAuB,EAAvBA,iBAC7Boc,EAAar9B,mBACnB,EAA8CpG,mBAAS,GAAvD,mBAAO0jC,EAAP,KAAwBC,EAAxB,KACQC,EAAgBljC,uBAAY,WAC9B,IAAMmjC,EAAmB,CACrB,EAAG,MACH,EAAG,QACH,EAAG,QACH,EAAG,QACH,GAAI,OAGFC,EAAa1L,EAAUliB,QAAQuD,MAAME,UAAUjiB,OAC/CqsC,EAAUliC,OAAOC,KAAK+hC,GAAkB96B,QAAO,SAACi7B,EAAMr+B,GAAP,OAAmBhK,KAAKsoC,IAAIt+B,EAAUm+B,GAAcnoC,KAAKsoC,IAAID,EAAOF,GAAcn+B,EAAUq+B,KACjJL,EAAmBE,EAAiBE,MACrC,CAAC3L,EAAUliB,QAAQuD,QAIxB,OAFE5Y,qBAAU,kBAAM+iC,MAAiB,CAACA,IAGlC,sBAAK3iC,GAAG,UAAUmE,IAAKq+B,EAAvB,UACE,sBAAKnkC,UAAU,UAAf,UACE,4CACC84B,EAAUnf,iBACT,cAAC,EAAD,IAEA,sBACE3Z,UAAU,sBACVI,MAAO,CAAEwkC,SAAUR,GAFrB,UAIE,sBAAMpkC,UAAU,uBAAhB,eACC+nB,EAAiB+Q,EAAUliB,QAAQuD,MAAME,WAC1C,uBAAMra,UAAU,YAAhB,cACI+nB,EAAiB+Q,EAAUliB,QAAQuD,MAAMrF,mBAKnD,gCACE,cAAC,IAAD,CAASnI,GAAIu3B,EAAMjmC,IAAM,aAAc4mC,gBAAgB,WAAvD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,IAAD,IADJ,iBAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,WAAY4mC,gBAAgB,WAArD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,KAAD,IADJ,eAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,YAAa4mC,gBAAgB,WAAtD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,KAAD,IADJ,gBAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,QAAS4mC,gBAAgB,WAAlD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,IAAD,IADJ,YAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,eAAgB4mC,gBAAgB,WAAzD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,KAAD,IADJ,mBAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,QAAS4mC,gBAAgB,WAAlD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,IAAD,IADJ,YAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,gBAAiB4mC,gBAAgB,WAA1D,SACE,sBAAK7kC,UAAU,OAAf,UACM,cAAC,IAAD,IADN,oBAIF,cAAC,IAAD,CAAS2M,GAAIu3B,EAAMjmC,IAAM,YAAa4mC,gBAAgB,WAAtD,SACE,sBAAK7kC,UAAU,OAAf,UACI,cAAC,IAAD,IADJ,gBAIF,qBAAKA,UAAU,cACf,mBAAG4sB,KAlFW,0EAkFUrpB,OAAO,SAASspB,IAAI,aAA5C,SACE,sBAAK7sB,UAAU,OAAO2B,GAAG,cAAzB,UACE,cAAC,IAAD,IADF,0B,+BC/FK,I,QAAA,IAA0B,kCCA1B,OAA0B,oCCA1B,OAA0B,oC,oDCkG1BmjC,GA3FM,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAerS,EAAsB,EAAtBA,gBAoFnC,MAAO,CACHsS,gBApFoB,WAQL,IAAIC,KAAe,CAC9BC,YAAa,SACbC,YAAa,yCACbC,QAAS,OACTC,UAXe,CACfj0B,SAAU,gBACVC,QAAS,wBACTi0B,UAAW,SACX,sBAAuB,qBAOD5S,GACtB6S,YAAaR,EACbS,WpEtBqB/6B,6CoEwBlBg7B,QAqEPC,YAlEgB,WAChB,IAMMrU,EAAMpzB,KAAIyiB,MpEjCWjW,2CoEiCgB,GAC3C4mB,EAAI5I,OAAS,KACb4I,EAAI7L,MAAJ,2BACO6L,EAAI7L,OADX,IAEI7U,KAAMo0B,EACNY,eAXoB,CACpBv0B,SAAU,OACVC,QAAS,SACT,sBAAuB,UAQSqhB,KCvCjB,SAAC,GAA0B,IAAxBz0B,EAAuB,EAAvBA,IAAKuD,EAAkB,EAAlBA,MAAOokC,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAEtCC,OACiBrK,IAAtB3xB,OAAOi8B,WAA2Bj8B,OAAOi8B,WAAaj8B,OAAOk8B,QACxDC,OACgBxK,IAArB3xB,OAAOo8B,UAA0Bp8B,OAAOo8B,UAAYp8B,OAAOq8B,QAEtD1hC,EAAQqF,OAAO6gB,WAClB7gB,OAAO6gB,WACPpkB,SAAS6/B,gBAAgB98B,YACzB/C,SAAS6/B,gBAAgB98B,YACzBQ,OAAOu8B,OAAO5hC,MACXD,EAASsF,OAAOw8B,YACnBx8B,OAAOw8B,YACP//B,SAAS6/B,gBAAgBG,aACzBhgC,SAAS6/B,gBAAgBG,aACzBz8B,OAAOu8B,OAAO7hC,OAEXgiC,EAAa/hC,EAAQqF,OAAOu8B,OAAOI,WACnC5b,GAAQpmB,EAAQmhC,GAAK,EAAIY,EAAaV,EACtClb,GAAOpmB,EAASqhC,GAAK,EAAIW,EAAaP,EACtCS,EAAY58B,OAAOrI,KACxBxD,EACAuD,EAFiB,iEAKTokC,EAAIY,EALK,0BAMRX,EAAIW,EANI,uBAOX5b,EAPW,wBAQVC,EARU,YAYd/gB,OAAOif,OAAO2d,EAAU3d,QDSrB4d,CAAY,CACR1oC,IAAKA,KAAI2oC,OAAOvV,GAChB7vB,MAAO,kBACPokC,EAAG,IACHC,EAAG,OAgDPgB,YA5CgB,WAChB,IAaMC,EAAU,IAAIC,KAAW,CAC3B9uB,OpE/DmBxN,uCoEgEnBu8B,YpE/Dev8B,aoEgEfL,SAhBkB,CAClB,UAAa,aACb,sBAAuB,OAcCsoB,IAAoBA,EAC5CuU,sBAZmB,CACnB,SAAY,OACZ,QAAW,OACX,SAAY,MACZ,UAAa,OACb,sBAAuB,OAOevU,GACtCwU,0BAA0B,EAC1BnC,gBACAoC,WAAY,SACZvkB,MAAO,GACPwkB,YAAa,GACbC,QAASv9B,OAAOwa,SAASgjB,OACzBC,aAAc,oBACdC,YAAa,SAGjBV,EAAQW,OAERX,EAAQzmB,GAAGymB,EAAQY,YAAY,SAAAvjC,GAC3BvK,QAAQC,IAAIsK,MAGhB2iC,EAAQzmB,GAAGymB,EAAQa,OAAOC,0BAA0B,SAAAC,GAChDjuC,QAAQC,IAAIguC,GACZf,EAAQ7tC,cE/EL,SAAS6uC,GAAT,GAAuD,IAAlC/C,EAAiC,EAAjCA,cAAe/F,EAAkB,EAAlBA,eAC/C,EAAsD8F,GAAa,CAAEC,gBAAerS,gBAAiBsM,EAAer9B,KAA5GqjC,EAAR,EAAQA,gBAAiBU,EAAzB,EAAyBA,YAAamB,EAAtC,EAAsCA,YAEhCtxB,EAAY,CACd,CACIwyB,KAAMC,GACN9nC,KAAM,OACN6D,KAAM,8CACNkkC,KAAM,aACNC,OAAQ,cACRC,WAAY,gBACZ/9B,SAAU,CAAC,WAAY,UAAW,YAAa,uBAC/CjK,QAAS,kBAAM6kC,MAEnB,CACI+C,KAAMK,GACNloC,KAAM,UACN6D,KAAM,gBACNkkC,KAAM,mBACNC,OAAQ,gBACRC,WAAY,MACZ/9B,SAAU,CAAC,WAAY,UAAW,uBAClCjK,QAAS,kBAAMulC,MAEnB,CACIqC,KAAMM,GACNnoC,KAAM,UACN6D,KAAM,iFACNkkC,KAAM,YACNC,OAAQ,uBACRC,WAAY,8BACZ/9B,SAAU,CAAC,WAAY,UAAW,YAAa,WAAY,uBAC3DjK,QAAS,kBAAM0mC,OAIjByB,EAAmB,SAACl+B,GACtB,OAAOA,EAASxH,SAASo8B,EAAer9B,IAAM,KAAO,YAGzD,OACI,sBAAKA,GAAG,YAAR,UAEQ4T,EAAUpc,KAAI,gBAAG4uC,EAAH,EAAGA,KAAM7nC,EAAT,EAASA,KAAM6D,EAAf,EAAeA,KAAMkkC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,WAAY/9B,EAA/C,EAA+CA,SAAUjK,EAAzD,EAAyDA,QAAzD,OACV,sBAAKH,UAAS,mBAAcsoC,EAAiBl+B,IAAwBjK,QAASA,EAA9E,UACI,qBAAKH,UAAU,OAAf,SACI,qBAAKm/B,IAAK4I,EAAM3I,IAAKl/B,MAEzB,sBAAKF,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SACM+D,IAEN,sBAAK/D,UAAU,OAAf,mBACYioC,KAEZ,sBAAKjoC,UAAU,SAAf,qBACckoC,KAEd,sBAAKloC,UAAU,aAAf,yBACkBmoC,UAfqCjoC,MAsB7C,aAAtB8+B,EAAer9B,GACX,sBAAKA,GAAG,kBAAR,UACI,sCADJ,4CACyD,4BAAIq9B,EAAe9+B,OAD5E,kDAIA,QCrEL,SAASqoC,GAAT,GAAoD,IAAjC3E,EAAgC,EAAhCA,YAAalR,EAAmB,EAAnBA,gBACrCsM,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgB+wB,KACxD,EAAkChyB,mBAAS,IAA3C,mBAAO8nC,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBtnC,uBAAY,WAC/BunC,KAAOzlB,UAAU0gB,EAAa,CAC1BgF,QAAS,EACTC,OAAQ,IACT,SAACnwC,EAAOuF,GACP,GAAIvF,EAAO,OAAOkB,QAAQlB,MAAMA,GAChC+vC,EAAaxqC,QAElB,CAAC2lC,IAIJ,OAFAriC,qBAAU,kBAAMmnC,MAAkB,CAACA,IAG/B,0BAAS/mC,GAAG,UAAZ,UACI,sBAAK3B,UAAU,QAAf,UACI,sBAAKA,UAAU,UAAf,UACK,sBAAKA,UAAU,QAAf,UACG,cAAC,IAAD,CAAwBoE,KAAM,KADjC,oBAID,qBAAKpE,UAAU,WAAf,+BAIJ,sBAAKA,UAAU,cAAf,UACI,cAAC,GAAD,CAAWA,UAAU,iBAAiBqD,MAAK,eAAU27B,EAAe10B,kBAAzB,oDAA8FxI,MAAO8hC,EAAana,MAAI,IACjK,qBAAK9nB,GAAG,UAAUy9B,IAAI,UAAUD,IAAKqJ,OAEzC,sBAAK7mC,GAAG,WAAR,0DAEI,qBAAK3B,UAAU,OAAf,SAEQoK,EAASjR,KAAI,gBAAGwI,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACT,sBAAKF,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASJ,EAAT,QAC7C,qBAAKD,UAAU,OAAf,SAAwBE,MAFEyB,cASlD,sBAAK3B,UAAU,QAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAkBoE,KAAM,KAD5B,mBAIA,qBAAKpE,UAAU,WAAf,4CAIJ,qBAAKA,UAAU,cAAf,yFAGA,cAAC,GAAD,CAAW+kC,cAAenB,EAAa5E,eAAgBA,U,eC7DxD,SAAS8J,GAAT,GAOX,IAAD,IANCC,mBAMD,MANe,GAMf,MALCvnC,aAKD,MALS,gBAKT,EAJCoJ,EAID,EAJCA,QACAg5B,EAGD,EAHCA,YACAoF,EAED,EAFCA,cACAC,EACD,EADCA,iBAGQ1tC,GAAYqP,GAAW,IAAvBrP,QACA0C,GAAQ8qC,GAAe,IAAvB9qC,IACR,EAA8ByC,oBAAS,GAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KACA,EAAwBzhB,mBAAS,IAAjC,mBAAO/D,EAAP,KAAausC,EAAb,KACMC,EAAYriC,iBAAO,MAyBzB,OAtBAvF,qBAAU,WAEN2nC,EADgBjrC,EAAM1C,EAAUqoC,KAEjC,CAACroC,EAASqoC,EAAa3lC,IAE1BsD,qBAAU,WACN4gB,GAAW,KACZ,CAACxlB,IAEJ4E,qBAAU,WAON,OANAynC,EAAc,CACVpF,cACAuF,YACAC,IAAKL,IAGF,WACHE,OAGL,CAACF,EAAan+B,EAASg5B,EAAauF,EAAWH,EAAeC,IAG7D,sBAAKtnC,GAAG,0BAAR,UAEQg2B,GACA,qBAAK33B,UAAU,qBAAf,SACI,cAAC,EAAD,UACI,cAAC,EAAD,QAMR/B,GACA,wBACI0D,GAAIhF,EAEJmJ,IAAKqjC,EACL3nC,MAAOA,EACP29B,IAAKlhC,EACLorC,OAAQ,kBAAMlnB,GAAW,IACzB/hB,MAAOu3B,EAAU,CAAExK,QAAS,QAAW,IALlCxwB,MC1DzB,IAAM2sC,GAAc,CAChBppC,KAAM,cACNjC,IzEC4BwM,kDyEA5Bs9B,KAAM,yCACNwB,KAAM,eAGK,SAASC,GAAT,GAA+E,IAA1D5+B,EAAyD,EAAzDA,QAASg5B,EAAgD,EAAhDA,YAAaoF,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBACrE,OACI,cAACH,GAAD,CACIl+B,QAASA,EACTg5B,YAAaA,EACboF,cAAeA,EACfC,iBAAkBA,EAClBF,YAAaO,GACb9nC,MAAO,gBCbJ,SAASioC,GAAK5jC,GACzB,OACI,yBAASlE,GAAG,OAAZ,SACI,cAAC,GAAD,eAAmBkE,M,YCLzB6jC,GAAkB,SAAAtwC,GACpB,OAAMA,GAAWA,EAAQhB,OAOnBgB,GAAW+I,EAAe/I,GAOzB,CAAEqd,SAAS,GANP,CACHA,SAAS,EACT/c,QAAS,oBATN,CACH+c,SAAS,EACT/c,QAAS,KA4BfiwC,GAA8B,SAACvwC,EAASwqC,EAAagG,EAAkB7mC,GACzE,IAAM8mC,EAAcH,GAAgBtwC,GACpC,OAAKywC,EAAYpzB,QAEbrd,GAAWwqC,GAAgBxqC,IAAYwqC,EAChC,CACHntB,SAAS,EACT/c,QAAS,8EAIbN,GAAWgJ,EAAuBhJ,GAC3B,CACHqd,SAAS,EACT/c,QAAS,iFAIbN,GAAa2J,EAAe3J,IAAawwC,EAOtC,CAAEnzB,SAAS,GANP,CACHA,SAAS,EACT/c,QAAQ,yGAnBiBmwC,GCAtBC,I,QA5BG,SAAC,GAA+D,IAA7DnxC,EAA4D,EAA5DA,UAAW4H,EAAiD,EAAjDA,WAAYX,EAAqC,EAArCA,cAAeD,EAAsB,EAAtBA,gBAC/CulB,EAAcG,KAAdH,UAEF6kB,EAAc,CAChB,CAAE1mC,MAAO,OAAQxB,YAAa,cAC9B,CAAEwB,MAAO,UAAWxB,YAAa,KAAMwwB,SAAU,SAAAvwB,GAAK,OAAIK,EAAeL,MAGvEkoC,EAAa,cAAC,GAAD,CAAYxoC,MAAM,kBAAkBwwB,OAAQ+X,EAAatpC,QAAS,mCAAEP,EAAF,KAAQ9G,EAAR,YAAqBmH,EAAWL,EAAM9G,MAG3H,OACI,sBAAKuI,GAAG,YAAY3B,UAAU,QAA9B,UACI,qBAAKA,UAAU,QAAf,0BACA,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,CACIN,YAAY,EACZ/G,UAAWA,EACXiH,cAAeA,EACfD,gBAAiBA,MAGzB,qBAAKK,UAAU,cACf,cAAC,EAAD,CAAQC,KAAM,cAAC,IAAD,IAAiBE,QAdhB,kBAAM+kB,EAAU8kB,IAc/B,8BChBN/6B,GAAQ,IAAIhE,aAAUrT,EAAQ,KAC9BqyC,GAAyB,CAAC,UAAW,QAAS,SAAU,UAAW,OAsM1DC,yBApME,SAAC,GAAmF,IAAD,EAAhFniC,EAAgF,EAAhFA,QAAS+wB,EAAuE,EAAvEA,UAAW8K,EAA4D,EAA5DA,YAAalR,EAA+C,EAA/CA,gBAAiBwE,EAA8B,EAA9BA,WAAYiT,EAAkB,EAAlBA,YACtExxC,EAAyDwxC,EAAzDxxC,UAAW4H,EAA8C4pC,EAA9C5pC,WAAYX,EAAkCuqC,EAAlCvqC,cAAemD,EAAmBonC,EAAnBpnC,eAEtCqnC,EAAyBjJ,sBAAzBiJ,qBACA/hC,EAAa6B,IAAb7B,SAEFgiC,EAAeloC,EAAeioC,GAAwBA,GAAuB,UAAAtR,EAAUr2B,OAAOyG,MAAK,qBAAG8I,SAAwBo4B,YAAjD,eAAwEhxC,UAAW,KAEtK,EAA0BsH,mBAAS2pC,GAAnC,mBAAOr6B,EAAP,KAAcs6B,EAAd,KACA,EAA4B5pC,mBAAS,GAArC,mBAAO0O,EAAP,KAAem7B,EAAf,KACA,EAAoD7pC,mBAAS,IAA7D,mBAAO8pC,EAAP,KAA2BC,EAA3B,KACA,EAA8B/pC,mBAAS,IAAvC,mBAAOtH,EAAP,KAAgBuH,EAAhB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOwB,EAAP,KAAiBgwB,EAAjB,KACA,EAAgDxxB,oBAAS,GAAzD,mBAAOkpC,EAAP,KAAyBc,EAAzB,KACA,GAAoDhqC,oBAAS,GAA7D,qBAAOiqC,GAAP,MAA2BC,GAA3B,MACA,GAAoClqC,mBAAS,IAA7C,qBAAOF,GAAP,MAAmBqqC,GAAnB,MACA,GAAkDnqC,mBAAS,CACvD+V,QAAS,CACLrH,QAAQ,EACRhW,SAAS,GAEb0xC,SAAU,CACN17B,OAAQ,GACRhW,QAAS,MAPjB,qBAAO2xC,GAAP,MAA0BC,GAA1B,MAWMC,GAAcnS,EAAUr2B,OAAOtJ,KAAI,gBAAGkK,EAAH,EAAGA,MAAO2O,EAAV,EAAUA,OAAQ5Y,EAAlB,EAAkBA,QAASymC,EAA3B,EAA2BA,IAAK5oB,EAAhC,EAAgCA,cAAhC,MAAqD,CAC1F5T,MAAOA,GAAS2O,EAChBlQ,MAAO1I,EACP6G,KAAM4/B,GAAO5oB,MAGXi0B,GAAgBpS,EAAUr2B,OAAOyG,MAAK,qBAAG9P,UAA0B4W,KAEnEm7B,GAAYhoC,mBAAQ,WACtB,IAAK+nC,GAAe,OAAO,EAC3B,IAAQp0B,EAAyBo0B,GAAzBp0B,WAAYhC,EAAao2B,GAAbp2B,SACpB,OAAOY,UAAOC,MAAMZ,YAAY+B,EAAYhC,KAC7C,CAACo2B,KAEEE,GAAuBjoC,mBAAQ,kBACR,IAAzBqP,OAAO63B,IAAuBjgC,EAASjR,KAAI,qBAAGwI,MAAa7B,QAAO,SAAA6B,GAAE,MAAW,aAAPA,KAAmBiB,SAAS8vB,EAAgB/wB,MACtH,CAAC0oC,EAAc3X,IAIX2Y,GAAiB,SAAAvpC,GACnB,GAAIA,EAAO,CACP,IAAQgT,EAAao2B,GAAbp2B,SACFw2B,EAAkB51B,UAAOC,MAAM41B,WAAWzpC,EAAOgT,GAAU02B,cACjEf,EAAsBa,GAG1Bf,EAAUzoC,IAgCdP,qBAAU,WACNgpC,EAAU,GACVE,EAAsB,IACtBG,IAAsB,KACvB,CAAC56B,EAAO0iB,EAAgB/wB,KAE3BJ,qBAAU,WACD2pC,IACLnjC,EAAQ64B,QAAQ,CAAElc,SAAS,oBAAD,OAAwC,IAAlBlS,OAAOxC,GAAeA,EAAQk7B,GAAcl5B,YAC7F,CAAChC,EAAOjI,EAASmjC,KAEpB3pC,qBAAU,WACN,IAAMkqC,EAA0B9B,GAA4BvwC,EAASwqC,EAAagG,EAAkB7mC,GAC9F2oC,EFvDqB,SAACt8B,EAAQ87B,GACxC,IAAM97B,IAAUA,EAAOhX,OACnB,MAAO,CACHqe,SAAS,EACT/c,QAAS,IAIjB,KAAM0V,GAAWA,EAAS,GACtB,MAAO,CACHqH,SAAS,EACT/c,QAAS,sCAIjB,IACI,GAAI0V,GAAU87B,GAAiBA,EAAcp2B,SAAU,CACnD,IAAM62B,EAAev8B,EAAOlB,MAAM,EAAGkB,EAAOw8B,QAAQ,KAAOV,EAAcp2B,SAAW,GAC9Ew2B,EAAkBC,sBAAWI,EAAcT,EAAcp2B,UAC/D,GAAIw2B,GAAmBJ,EAAcp0B,YAAcw0B,EAAgBO,GAAGX,EAAcp0B,YAChF,MAAO,CACHL,SAAS,EACT/c,QAAQ,mDAAD,cAAqDwxC,QAArD,IAAqDA,OAArD,EAAqDA,EAAet0B,QAApE,mBAA+Es0B,QAA/E,IAA+EA,OAA/E,EAA+EA,EAAel5B,OAA9F,OAIrB,MAAM0C,GACJ9a,QAAQlB,MAAMgc,GAGlB,MAAO,CAAE+B,SAAS,GEyBoBq1B,CAA2B18B,EAAQ87B,IAErEF,GAAqB,CACjBv0B,QAAS,CACLrH,OAAQs8B,EAA0Bj1B,QAClCrd,QAASqyC,EAAwBh1B,SAErCq0B,SAAU,CACN17B,OAAQs8B,EAA0BhyC,QAAWgyC,EAA0BhyC,QAAU,GACjFN,QAASqyC,EAAwB/xC,QAAU+xC,EAAwB/xC,QAAU,MAIrFw4B,GAAauZ,EAAwBh1B,UAAYi1B,EAA0Bj1B,SAAY20B,KAAyBT,MACjH,CAACvxC,EAASgW,EAAQw0B,EAAasH,GAAetB,EAAkBwB,GAAsBT,GAAoB5nC,EAAgBsF,IAE7H,IAAM0jC,GAAc,sBAAK/rC,UAAU,eAAf,+BAAgD,iCAAQmrC,GAAR,WAAsBD,SAAtB,IAAsBA,QAAtB,EAAsBA,GAAel5B,aAEzG,OACI,sBAAKrQ,GAAG,WAAR,UACG,sBAAK3B,UAAU,QAAf,UACI,qBAAKA,UAAU,QAAf,kBAIK84B,EAAUnf,iBACN,cAAC,EAAD,IAEAsxB,GAAY7yC,OACR,sBAAK4H,UAAU,OAAf,UACI,cAAC,GAAD,CAAQsoB,YAAU,EAACxN,aAAc9K,EAAOnQ,MAAOorC,GAAavpC,SAAU,SAACI,GAAD,OAAWwoC,EAASxoC,MAC1F,cAAC,GAAD,CACIuB,MAAO0oC,GACPjqC,MAAOsN,EACPwa,UAAS,OAAEshB,SAAF,IAAEA,QAAF,EAAEA,GAAep2B,SAC1B/S,QAASspC,GACTxhB,OAAO,MACPX,cAAe,kBA3FpBmiB,GAAeF,OA6FZJ,GAAkBD,SAAS17B,QACxB,sBAAKpP,UAAU,mBAAf,UAAkC,cAAC,IAAD,CAAOoE,KAAM,KAA/C,OAA2D2mC,GAAkBD,SAAS17B,UAC3F,sBAAKzN,GAAG,kBAAR,UACI,cAAC,GAAD,CACIE,YAAY,YACZ0nB,KAAK,yFACLznB,MAAO1I,EACP2I,QAASpB,IAEb,cAAC,EAAD,CACIhI,UAAWA,EAAUmH,QAAO,SAAAuJ,GAAC,OAAIA,EAAEjQ,UAAYwqC,KAC/CrjC,WAAYA,EACZX,cAAeA,EACfY,WAAYA,GACZC,QAAS,kBAAMoqC,GAAc,OAC7BlrC,gBAAiB,SAAAvG,GAAO,OAAIuH,EAAWvH,SAG7C2xC,GAAkBD,SAAS1xC,SACxB,sBAAK4G,UAAU,mBAAf,UAAkC,cAAC,IAAD,CAAOoE,KAAM,KAA/C,OAA2D2mC,GAAkBD,SAAS1xC,WAC3F,qBAAK4G,UAAU,cACf,cAAC,EAAD,CACI5G,QAASA,EACT0J,gBAAiB,kBAAM+nC,GAAczxC,IACrCsI,SAAU,SAACI,GAAD,OAAW4oC,EAAoB5oC,IACzCiB,eAAgBA,IAGhBqoC,GACI,cAAC,EAAD,CACIzpC,GAAG,0BACH0B,MAAO,uBAAM1B,GAAG,gCAAT,6CAC+BsoC,GAAuBx4B,KAAK,OAD3D,aAC6E,uBAD7E,4CAEgCy5B,SAFhC,IAEgCA,QAFhC,EAEgCA,GAAel5B,OAF/C,+BAGH,mBAAG4a,KAAK,qGAAqGrpB,OAAO,SAASspB,IAAI,aAAjI,SAA8I,cAAC,IAAD,CAAQzoB,KAAM,UAEhKd,QAASqnC,GACTjpC,SAAU,gBAAG6B,EAAH,EAAGA,OAAH,OAAgBqnC,GAAsBrnC,EAAOD,YAG3D,KAER,cAAC,EAAD,CAAQrD,KAAM,cAAC,IAAD,IAAkBiC,SAAUA,EAAU/B,QA3HjE,WACX,IACI,IAAM7E,EAAM,CACRqR,GAAIu+B,GAAc9xC,QAClB0I,MAAO,IACPqC,KAAM8K,GAAMoI,mBAAmB,WAAY,CAACje,EAASoxC,KAGnB,IAAlCh4B,OAAO04B,GAAc9xC,WACrBkC,EAAIqR,GAAKvT,EACTkC,EAAIwG,MAAQ0oC,EACZlvC,EAAI6I,KAAO,MAGf+yB,EAAW,CACPv1B,GAAG,YAAD,OAAckK,KAAKC,OACrB/H,KAAM,sBACNxI,QAASm3B,EAAgBn3B,QACzBsB,QAAS+mC,EACTtoC,QAGJivC,EAAU,GACZ,MAAM71B,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,UAAD,OAAWqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,MAkG1B,qBAGJ,cAAC,GAAD,OAGjB,cAAC,GAAD,CACKC,UAAWA,EACX4H,WAAYA,EACZX,cAAeA,EACfD,gBAAiB,SAAAvG,GAAO,OAAIuH,EAAWvH,YCzMxC4yC,I,QARY,CACvB,2DACA,6DACA,oVACA,2FACA,iECCWC,GANkB,CAC7B76B,SAAU,6CACVC,QAAS,6CACTi0B,UAAW,8CCHA,OAA0B,iCCOnCxd,I,QAAW,CAAC,CAAEhmB,MAAO,WAAa,CAAEA,MAAO,cAoGlCoqC,GAlGF,SAAC,GAAqF,IAAnFvU,EAAkF,EAAlFA,QAASwU,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,YAAansC,EAA+C,EAA/CA,KAAMosC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC7E,EAA8B7rC,mBAASonB,GAAS,GAAGhmB,OAAnD,mBAAOomB,EAAP,KAAgBD,EAAhB,KACA,EAA4BvnB,mBAAS,IAArC,mBAAO+B,EAAP,KAAegY,EAAf,KACA,EAA0B/Z,qBAA1B,mBAAOoM,EAAP,KAAc0/B,EAAd,KACA,EAA4B9rC,mBAAS,GAArC,mBAAO0O,EAAP,KAAem7B,EAAf,KACA,EAAgC7pC,oBAAS,GAAzC,mBAAOwB,EAAP,KAAiBgwB,EAAjB,KAEMua,EAAehqC,EAAOyG,MAAK,qBAAGpH,QAAsBgL,KAGpD4/B,EAActrC,uBAAY,SAAA0L,GAAK,OAAIs/B,EAAYljC,MAAM,gBAAG9P,EAAH,EAAGA,QAAS2K,EAAZ,EAAYA,KAAZ,OAAuB3K,IAAY0T,EAAM1T,UAA2B,YAAf0T,EAAM/I,KAA8B,aAATA,EAA+B,YAATA,QAAuB,CAACqoC,IACnLO,EAAmBxpC,mBAAQ,kBAAM,YAAIipC,GAAaxnC,MAAK,SAAC3M,EAAG4M,GAAJ,eAAY,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAG+R,UAAH,UAAa81B,EAAY7nC,UAAzB,aAAa,EAAgB+R,WAAa,OAAD3e,QAAC,IAADA,OAAA,EAAAA,EAAG2e,UAAH,UAAa81B,EAAYz0C,UAAzB,aAAa,EAAgB2e,eAAW,CAACw1B,EAAaM,IAEjKE,EAAe,WACjB,IAAKH,EAAc,OAAO,EAC1B,IAAQ31B,EAAyB21B,EAAzB31B,WAAYhC,EAAa23B,EAAb33B,SACpB,OAAOY,UAAOC,MAAMZ,YAAY+B,EAAYhC,IAKhDvT,qBAAU,WACF2mB,IAAYJ,GAAS,GAAGhmB,OAAO2Y,EAAUkyB,EAAiB7sC,QAAO,kBAAuB,YAAvB,EAAGiE,SACpEmkB,IAAYJ,GAAS,GAAGhmB,OAAO2Y,EAAUkyB,EAAiB7sC,QAAO,kBAAuB,aAAvB,EAAGiE,WACzE,CAACmkB,EAASykB,IAEbprC,qBAAU,kBAAMgpC,EAAU,KAAI,CAACz9B,EAAOob,IAEtC3mB,qBAAU,WACN+qC,EAAcx/B,GACdolB,GAAaplB,IAAUrK,EAAOrK,UAC/B,CAAC0U,EAAOw/B,EAAe7pC,EAAOrK,SAEjC,IAAM2zC,EAAc,sBAAK/rC,UAAU,eAAf,+BAAgD,+BAASkC,EAAyD,IAA1D,UAAe0qC,IAAf,mBAAiCH,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAcz6B,aAE3H,OACI,sBAAKhS,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKm/B,IAAKl/B,EAAMm/B,IAAI,WAGpBzH,EACI,cAAC,EAAD,IAEAwU,EACI,qBAAKnsC,UAAU,cAAf,yCAIA,sBAAKA,UAAU,UAAf,UACI,cAAC,GAAD,CACIsoB,YAAU,EACVpmB,SAAUA,EACVmB,MAAM,eACNyX,aAAchO,EACdjN,MAAO4C,EACPf,SAAU,SAACI,GAAD,OAAW0qC,EAAS1qC,MAG7BI,EASG,sBAAKlC,UAAU,sBAAf,UACI,wBACA,wBACA,2BAXJ,oBAAIA,UAAU,UAAd,SAEQqsC,EAAQlzC,KAAI,mCAAE4K,EAAF,KAAQjC,EAAR,YACR,+BAAe,4BAAIiC,IAAnB,IAA8BjC,IAArBiC,QAW7B,cAAC,GAAD,CAAU9B,OAAK,EAAC6Y,aAAcoN,EAASJ,SAAUA,GAAUpmB,SAAU,SAACI,GAAD,OAAWmmB,EAAWnmB,MAC3F,cAAC,GAAD,CACII,WAAU,OAACuqC,QAAD,IAACA,OAAD,EAACA,EAAc71B,SACzBi2B,IAAI,IACJC,IAAG,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAc71B,QACnB9U,MAAOsN,EACP/L,MAAO0oC,EACPhqC,QAAS,SAACD,GAAD,OAAWyoC,EAAUzoC,IAC9B+nB,OAAO,MACPX,cAhEP,kBAAMqhB,EAAUqC,QAkEb,qBAAK5sC,UAAU,cACf,cAAC,EAAD,CACIkC,SAAUA,GAAYkN,GAAU,GAAKA,GAAM,OAAGq9B,QAAH,IAAGA,OAAH,EAAGA,EAAc71B,SAC5D3W,KAAMioB,IAAYJ,GAAS,GAAGhmB,MAAQ,cAAC,IAAD,IAAuB,cAAC,IAAD,IAC7D3B,QAAS,kBAAMosC,EAAWrkB,EAASpb,EAAOsC,IAH9C,SAIU8Y,WClGlCzlB,GAAS,CACT2O,SAAU,CACN,CACIhY,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,OAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,SAGhBX,QAAS,CACL,CACIjY,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,QAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,OAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,SAGhBszB,UAAW,CACP,CACIlsC,QAAS,6CACT4Y,OAAQ,UAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,UAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,UAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,UAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,SAEZ,CACI5Y,QAAS,6CACT4Y,OAAQ,WAGhB,sBAAuB,IC3ErB2mB,GAAiB,IAAI1tB,aAAU2tB,IAE/BmU,GAAY,uCAAG,WAAOC,EAAO54B,EAAW64B,EAAW7zC,EAASixC,EAAc6C,EAAe7kC,GAA1E,iCAAApQ,EAAA,6DAAoFuyC,EAApF,+BAAyGh7B,aAAUC,WAAnH,SAEP09B,EAAWH,EAAMlxC,cAAc8kC,QAAQ,OAAQ,KAC/C1pB,EAAW7B,GAAYjB,GACvB+kB,EAAgB,IAAI/B,YAASiT,EAAc1R,GAAgBzhB,GAJpD,SAKWiiB,EAAciU,UAAUH,EAAW7zC,GAL9C,cAOCi0C,GAAG7C,IACb0C,EAAc,GAAD,OAAIC,EAAJ,oBAAwBthC,KAAKC,OAAS,CAC/Ca,GAAI09B,EACJvoC,MAAO,MACPqC,KAAMw0B,GAAethB,mBAAmB,UAAW,CAACje,EAASoxC,MAXxD,kDAeb5wC,QAAQlB,MAAR,MACA2P,EAAS,GAAD,OAAI2kC,EAAJ,2BAA4B,KAAEtzC,SAAF,MAAkB,CAAEhB,OAAO,IAhBlD,0DAAH,kEAoBHq0C,MCbTO,GAAkB,IAAIriC,aAAU+gC,IAChCuB,GAAG,SAAG,GAAI,IACZC,GAAqB,KA2IVC,GAzIE,SAAC,GAA2D,IAAzDr5B,EAAwD,EAAxDA,UAAW3R,EAA6C,EAA7CA,OAAQoI,EAAqC,EAArCA,UAAWhO,EAA0B,EAA1BA,QAASq6B,EAAiB,EAAjBA,WAC/C7uB,EAAa6B,IAAb7B,SAEFmR,EAAiB1S,mBACvB,EAAgCpG,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAAsCzhB,oBAAS,GAA/C,mBAAOyrC,EAAP,KAAoBuB,EAApB,KACA,EAAsChtC,mBAAS,IAA/C,mBAAO0rC,EAAP,KAAoBuB,EAApB,KACA,EAA8BjtC,mBAAS,IAAvC,mBAAO2rC,EAAP,KAAgBuB,EAAhB,KAEMtB,EAAgBlrC,sBAAW,uCAAC,WAAOU,GAAP,eAAA7J,EAAA,uDACxB6U,EAAQs/B,EAAYljC,MAAK,qBAAG9P,UAA0B0I,OAExD8rC,EAAW,CACP,CAAC,+BAAD,UAAoC9gC,EAAM+gC,IAA1C,MACA,CAAC,OAAQ,WACT,CAAC,OAAQ,mBANa,2CAAD,sDAS9B,CAACzB,IAEEpN,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgByS,KAClD05B,EAAgB3qC,mBAAQ,kBF4CJ,SAAAyH,GAC1B,IAAM/K,GAAS4C,GAAOmI,IAAY,IAAIzR,KAAI,SAAA2T,GAAK,kCACxCA,GADwC,IAE3C+yB,IAAI,GAAD,OAtFS,yDAsFT,YAAsBj1B,EAAtB,YAAiCkC,EAAM1T,QAAvC,QACHwd,QAAS,EACTE,WAAY,UACT,GAEP,MAAM,GAAN,mBACOjX,EAAM1G,KAAI,SAAA2T,GAAK,kCAAUA,GAAV,IAAiB/I,KAAM,gBAD7C,YAEOlE,EAAM1G,KAAI,SAAA2T,GAAK,kCAAUA,GAAV,IAAiB/I,KAAM,WAAYiO,OAAO,IAAD,OAAMlF,EAAMkF,eEtDvC+7B,CAAsB/O,EAAer9B,MAAK,CAACq9B,EAAer9B,KACxFqsC,EAAW,SAACjqC,EAAM3K,GAAP,OAAmBgzC,EAAYtsC,QAAO,SAAAgN,GAAK,OAAIA,EAAM/I,OAASA,KAAMmF,MAAK,SAAA4D,GAAK,OAAIA,EAAM1T,UAAYA,MAC/G8zC,EAAgB,SAACvrC,EAAIrG,GAAL,IAAU2yC,EAAV,uDAAqB,EAArB,OAA2B/W,EAAW,CAAEv1B,KAAIoC,KAAM,sBAAuBxI,QAASyjC,EAAezjC,QAASsB,UAASvB,MAAK2yC,cAExI1B,EAAU,uCAAG,WAAOxoC,EAAMsmC,EAAcj7B,GAA3B,qBAAAnX,EAAA,yDACF,YAAT8L,EADW,uBAEL+I,EAAQkhC,EAAS,UAAW3D,GAC5BG,EAAqB90B,UAAOC,MAAM41B,WAAWn8B,EAAOnS,WAAY6P,EAAMgI,UAAU02B,cAH3E,SAILuB,GAAa,YAAa/N,EAAer9B,GAAI9E,EAAS2wC,GAAoBnD,EAAc6C,EAAe7kC,GAJlG,OAMX,IACI6kC,EAAc,qBAAD,OAAsBrhC,KAAKC,OAAS,CAC7Ca,GAAI6gC,GACJ1rC,MAAO,MACPqC,KAAMmpC,GAAgBj2B,mBAAmB,UAAW,CAACgzB,EAAcG,EAAoB3tC,EAAS,KACjG,KACL,MAAM6X,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,uBAAD,OAAwBqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,IAdpD,0BAiBG,aAATqL,EAjBM,wBAkBL+I,EAAQkhC,EAAS,WAAY3D,GAC7BG,EAAqB90B,UAAOC,MAAM41B,WAAWn8B,EAAOnS,WAAY6P,EAAMgI,UAAU02B,cAnB3E,UAoBLuB,GAAa,YAAa/N,EAAer9B,GAAI9E,EAAS2wC,GAAoBnD,EAAc6C,EAAe7kC,GApBlG,QAsBX,IACI6kC,EAAc,sBAAD,OAAuBrhC,KAAKC,OAAS,CAC9Ca,GAAI6gC,GACJ1rC,MAAO,MACPqC,KAAMmpC,GAAgBj2B,mBAAmB,WAAY,CAACgzB,EAAcG,EAAoB3tC,KACzF,KACL,MAAM6X,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,wBAAD,OAAyBqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,IA9BrD,4CAAH,0DAmCVw1C,EAAW9sC,sBAAW,sBAAC,oDAAAnJ,EAAA,yDACnBk2C,EAAkBlC,GAAyBjN,EAAer9B,IADvC,uBAGrBwgB,GAAW,GACXurB,GAAe,GAJM,0CASfx2B,EAAW7B,GAAY2pB,EAAer9B,IACtCysC,EAA8B,IAAI14B,UAAO0hB,SAAS+W,EAAiBb,GAAiBp2B,GAVrE,UAWMk3B,EAA4BC,iBAXlC,eAWrBb,GAXqB,OAafc,EAAsB,IAAI54B,UAAO0hB,SAASoW,GAAoBF,GAAiBp2B,GAbhE,UAcEo3B,EAAoBC,kBAdtB,eAcfC,EAde,OAefC,EAAoBD,EAASr1C,KAAI,SAAAu1C,GAAO,OAAIA,EAAQ5yC,iBAEpD6yC,IAAkB,UAAA9jC,EAAU3B,MAAK,kBAAyB,YAAzB,EAAG7F,gBAAlB,eAAoDmY,SAAU,IACjFriB,KAAI,gBAAG6Y,EAAH,EAAGA,OAAQvP,EAAX,EAAWA,OAAX,OAAwBA,GAAUA,EAAOtJ,KAAI,SAAA2T,GAAK,kCAChDA,GADgD,IAEnDkF,SACAjO,KAAM,mBAETqK,KAAK,GACLtO,QAAO,SAAAgN,GAAK,OAAIA,KAEf8hC,EAAgBnsC,EAAO3C,QAAO,gBAAG1G,EAAH,EAAGA,QAAH,OAAiBq1C,EAAkB7rC,SAASxJ,MAAUD,KAAI,SAAA2T,GAAK,kCAC5FA,GAD4F,IAE/F/I,KAAM,eACNjE,QAAO,SAAAgN,GAAK,OAAIA,KA7BC,UA+BIlS,QAAQ6Y,IAAR,sBAClBq6B,EAAchuC,QAAO,gBAAGiE,EAAH,EAAGA,KAAM3K,EAAT,EAASA,QAAT,MAAgC,YAAT2K,IAAuB6qC,EAAcz1C,KAAI,qBAAGC,WAAuBwJ,SAASxJ,OADtG,YAElB00C,EAAchuC,QAAO,gBAAGiE,EAAH,EAAGA,KAAM3K,EAAT,EAASA,QAAT,MAAgC,aAAT2K,IAAwB4qC,EAAex1C,KAAI,qBAAGC,WAAuBwJ,SAASxJ,OAFxG,YAGlBu1C,GAHkB,YAIlBC,KAnCc,eA+BfC,EA/Be,OAsCfC,EAtCe,YAsCY,IAAI/1B,IAAI81B,EAAU11C,KAAI,qBAAGC,aAtCrC,KAuCHmJ,OAvCG,UAuCsB3H,QAAQ6Y,IAAIq7B,EAAqB31C,IAArB,uCAAyB,WAAMC,GAAN,mBAAAnB,EAAA,sEACzDq2C,EAAoBS,eAAe31C,GADsB,cACtE+K,EADsE,OAEpE6qC,EAAkB7qC,EAAlB6qC,cACFnB,GAAQmB,EAAgBzB,GAAO,KAAK7nC,QAAQ,GAH0B,kBAIrE,CAACtM,EAASy0C,IAJ2D,2CAAzB,wDAvClC,uBAuCfoB,EAvCe,KAuCIvL,YAvCJ,gBA8Cf0I,EAAcyC,EAAU11C,KAAI,SAAA2T,GAAK,kCAChCA,GADgC,IAEnC+gC,IAAKoB,EAAUniC,EAAM1T,SACrB6G,KAAM6M,EAAM+yB,KAAO/yB,EAAMmK,cACzB5T,MAAM,GAAD,OAAKyJ,EAAMkF,OAAX,aAAsBi9B,EAAUniC,EAAM1T,SAAtC,UACL0I,MAAOgL,EAAM1T,aAIbogB,EAAenT,UAAY24B,EAAer9B,GAvDzB,mDAyDrBgsC,EAAevB,GACfjqB,GAAW,GACXurB,GAAe,GA3DM,kDA6DrB9zC,QAAQlB,MAAR,MACA2P,EAAS,yBAAD,OAA0B,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IA9DxC,0DAgE1B,CAAC2P,EAAUwC,EAAWpI,EAAQqrC,EAAe9O,IAQhD,OANAz9B,qBAAU,kBAAM2sC,MAAY,CAACA,IAC7B3sC,qBAAU,WACNiY,EAAenT,QAAU+N,EACzB+N,GAAW,KACZ,CAAC/N,IAGA,cAAC,GAAD,CAAMujB,QAASzV,EAAWiqB,YAAaA,EAAalsC,KAAMivC,GAAW7C,QAASA,EAASD,YAAaA,EAAaE,cAAeA,EAAeC,WAAYA,KChJpJ4C,GAPO,CAClB,0CACA,uDACA,0DACA,mD,UCJW,OAA0B,kCCKnCC,GAAoB,CAAEh+B,SAAU,CAClC,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,8CACDi+B,OAAQ,CACP,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,+CAGEC,GAAsB,CACxB,6CAA8C,CAC1CC,YAAa,OACbC,YAAa,kDAkGNC,GA9FE,SAAC,GAA0D,IAAxDhtC,EAAuD,EAAvDA,OAAQu8B,EAA+C,EAA/CA,eAAgB9nB,EAA+B,EAA/BA,SAAUsC,EAAqB,EAArBA,eAClD,EAAsC9Y,mBAAS,IAA/C,mBAAO0rC,EAAP,KAAoBuB,EAApB,KACA,EAA8BjtC,mBAAS,IAAvC,mBAAO2rC,EAAP,KAAgBuB,EAAhB,KAEM8B,EAAwBtuC,uBAAY,SAAAipC,GAAY,OAAI5nC,EAAOyG,MAAK,qBAAG9P,QAAsB0C,gBAAkBuuC,EAAavuC,kBAAkB,KAAI,CAAC2G,IAE/IktC,EAAavuC,sBAAW,sBAAC,oCAAAnJ,EAAA,6DACrB23C,EAAQ,IAAIC,SAAM7Q,EAAezjC,QAAS,CAAE2b,aADvB,SAGJ04B,EAAME,OAAOC,IAAIX,GAAkBpQ,EAAer9B,KAH9C,UAGrBquC,EAHqB,OAIrBF,EAASE,EAAS72C,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,QAAS62C,EAAwC,EAAxCA,SAAUj+B,EAA8B,EAA9BA,OAAQlF,EAAsB,EAAtBA,MAAOgI,EAAe,EAAfA,SAC7D,6BACOm7B,GACAX,GAAoBl2C,IAAY,IAF/B82C,EAAR,EAAQA,IAAKX,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,YAM1B,MAAO,CACHW,aAAc/2C,EACd82C,KAJiC,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKE,UAAe1qC,QAAQ,IAAM,EAKpDzF,KAAMuvC,EACN1tC,MAAO1I,EACP0T,MAAO,CACH1T,QAAS0T,EACTkF,OAAQu9B,EACRz6B,YAEJu7B,OAAQ,CACJj3C,UACA4Y,SACA8C,gBAKN85B,EAAgBkB,EAAO32C,KAAI,SAAAm3C,GAC7B,IAAQJ,EAAeI,EAAfJ,IAAKpjC,EAAUwjC,EAAVxjC,MACL1T,EAA8B0T,EAA9B1T,QAAS4Y,EAAqBlF,EAArBkF,OAAQ8C,EAAahI,EAAbgI,SACzB,EAAgC46B,EAAsBt2C,GAA9Cwd,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WACjB,OAAO,2BACAw5B,GADP,IAEIvsC,KAAM,UACNV,MAAM,GAAD,OAAK2O,EAAL,aAAgBk+B,EAAhB,UACLl+B,SACA8C,WACAu1B,aAAcv9B,EAAM1T,QACpBwd,QAASA,GAAW,EACpBE,WAAYA,GAAc,SAI5B63B,EAAiBmB,EAAO32C,KAAI,SAAAm3C,GAC9B,IAAQJ,EAAgBI,EAAhBJ,IAAKG,EAAWC,EAAXD,OACLj3C,EAA8Bi3C,EAA9Bj3C,QAAS4Y,EAAqBq+B,EAArBr+B,OAAQ8C,EAAau7B,EAAbv7B,SACzB,EAAgC46B,EAAsBt2C,GAA9Cwd,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WACjB,OAAO,2BACAw5B,GADP,IAEIvsC,KAAM,WACNV,MAAM,GAAD,OAAK2O,EAAL,aAAgBk+B,EAAhB,UACLl+B,SACA8C,WACAu1B,aAAcgG,EAAOj3C,QACrBwd,QAASA,GAAW,EACpBE,WAAYA,GAAc,SAK9B0C,EAAenT,UAAY24B,EAAer9B,GA9DnB,iDAgE3BgsC,EAAe,GAAD,mBACPiB,GADO,YAEPD,KAlEoB,4CAoE5B,CAACe,EAAuBx4B,EAAU8nB,EAAgBxlB,IAE/C8yB,EAAgBlrC,uBAAY,SAAAhI,GAC9B,IAAMm3C,EAAgBnE,EAAYljC,MAAK,SAAAd,GAAC,OAAIA,EAAEiiC,eAAiBjxC,KAC3Dm3C,GAAe3C,EAAW,CAC1B,CAAC,gCAAD,UAAqC2C,EAAcL,IAAnD,MACA,CAAC,OAAQ,WACT,CAAC,OAAQ,qBAEd,CAAC9D,IAEJ,MAAO,CACHnsC,KAAMuwC,GACNb,aACAvD,cACAC,UACAC,kBC/JO,OAA0B,sCCQnCmE,GAAsB,uCACtBC,GAAS,CACX,CAAC,SAAU,6CAAX,UAA4DD,GAA5D,wBACA,CAAC,QAAS,6CAAV,UAA2DA,GAA3D,mBACA,CAAC,SAAU,6CAAX,UAA4DA,GAA5D,iBACA,CAAC,SAAU,6CAAX,UAA4DA,GAA5D,iBACA,CAAC,WAAY,6CAAb,UAA8DA,GAA9D,oBAgHWE,GA3GM,SAAC,GAAqD,IAAnDluC,EAAkD,EAAlDA,OAAQyU,EAA0C,EAA1CA,SAAU9C,EAAgC,EAAhCA,UAAWoF,EAAqB,EAArBA,eACzCnR,EAAa6B,IAAb7B,SAER,EAA4B3H,mBAAS,IAArC,mBAAOovC,EAAP,KAAec,EAAf,KACA,EAAsClwC,mBAAS,IAA/C,mBAAO0rC,EAAP,KAAoBuB,EAApB,KACA,EAA8BjtC,mBAAS,IAAvC,mBAAO2rC,EAAP,KAAgBuB,EAAhB,KAEMiD,EAAgBzvC,uBAAY,SAAC2C,EAAM+rC,GACrC,OAAOA,EAAO32C,KAAI,YAAiD,IAA9Cg3C,EAA6C,EAA7CA,aAAcrjC,EAA+B,EAA/BA,MAAOgkC,EAAwB,EAAxBA,OAAQ7wC,EAAgB,EAAhBA,KAAMiwC,EAAU,EAAVA,IACpD,EAA+C,YAATnsC,EAAqB+I,EAAQgkC,EAA3D13C,EAAR,EAAQA,QAAS4Y,EAAjB,EAAiBA,OAAQ8C,EAAzB,EAAyBA,SACnBi8B,EAAiBtuC,EAAOyG,MAAK,SAAAd,GAAC,OAAIA,EAAEhP,QAAQ0C,gBAAkB1C,EAAQ0C,iBAC5E,MAAO,CACHiI,OACAosC,eACA9F,aAAcjxC,EACd4Y,SACA8C,WACA7U,OACAiwC,MACA7sC,MAAM,GAAD,OAAK2O,EAAL,aAAgBk+B,EAAhB,UACLpuC,MAAOquC,EACPv5B,QAASm6B,EAAiBA,EAAen6B,QAAU,EACnDE,WAAYi6B,EAAiBA,EAAej6B,WAAa,UAGlE,CAACrU,IAEEuuC,EAAgB5vC,sBAAW,uCAAC,WAAM6vC,GAAN,uBAAAh5C,EAAA,+EAEH8F,MAAM,GAAD,OA/Bd,mCA+Bc,4DAAyEkzC,EAAzE,4CAFF,cAEpBxyC,EAFoB,gBAGKA,EAASF,OAHd,mBAGlB4F,EAHkB,EAGlBA,KAAMzF,EAHY,EAGZA,OACTyF,GAAmB,YAAXzF,GAAyByF,EAAKqS,OAAOpe,OAJxB,0CAIuC,GAJvC,kCAKS,KAA3B,UAAA+L,EAAKqS,OAAO,UAAZ,eAAgB1U,MAAM,KAAU4D,QAAQ,IALtB,kCAO1B9L,QAAQlB,MAAR,MACA2P,EAAS,mBAAD,OAAoB4oC,EAApB,cAAwC,CAAEv4C,OAAO,IAR/B,0DAAD,sDAU9B,CAAC2P,IAEEsnC,EAAavuC,sBAAW,sBAAC,4BAAAnJ,EAAA,sEACL2C,QAAQ6Y,IAAIi9B,GAAOv3C,IAAP,uCAAW,mDAAAlB,EAAA,gFAAQg5C,EAAR,KAAgB73C,EAAhB,KAAyB6G,EAAzB,cAE/BixC,EAAyB,IAAI9Z,YAASh+B,EAAS+3C,GAAmBj6B,GAFnC,SAGVg6B,EAAuBpkC,QAHb,cAG/Bu9B,EAH+B,OAK/BlR,EAAgB,IAAI/B,YAASiT,EAAczR,GAAU1hB,GALtB,KAMJtc,QANI,UAO3Bu+B,EAAcnnB,SAPa,qCAQ3BmnB,EAAcrkB,WARa,2DAMIrB,IANJ,2DAM9BzB,EAN8B,KAMtB8C,EANsB,eAWnBk8B,EAAcC,GAXK,eAW/Bf,EAX+B,yBAa9B,CACHC,aAAc/2C,EACd0T,MAAO,CACH1T,QAASixC,EACTv1B,WACA9C,UAEJ8+B,OAAQ,CACJ13C,UACA0b,WACA9C,OAAO,KAAD,OAAOA,IAEjB/R,OACAiwC,QA1BiC,yCA6BrCt2C,QAAQlB,MAAR,MACA2P,EAAS,2BAA6B,KAAE3O,UAA/B,EAA6C,CAAEhB,OAAO,IA9B1B,kBA+B9B,MA/B8B,0DAAX,wDADP,UACrBo3C,EADqB,OAkCtBhwC,QAAO,SAAA1D,GAAC,OAAIA,KAEbgY,IAAcoF,EAAenT,QApCN,iDAqC3BuqC,EAAUd,GArCiB,2CAsC5B,CAAC17B,EAAWoF,EAAgBw3B,EAAe95B,EAAU7O,IAElDikC,EAAgBlrC,uBAAY,SAAAhI,GAC9B,IAAMm3C,EAAgBnE,EAAYljC,MAAK,SAAAd,GAAC,OAAIA,EAAEiiC,eAAiBjxC,KAC3Dm3C,GAAe3C,EAAW,CAC1B,CAAC,gCAAD,UAAqC2C,EAAcL,IAAnD,MACA,CAAC,OAAQ,WACT,CAAC,OAAQ,qBAEd,CAAC9D,IAYJ,OAVA7qC,qBAAU,WACN,IAAM6vC,EAAoBP,EAAc,UAAWf,GAC7CuB,EAAqBR,EAAc,WAAYf,GAErDnC,EAAe,GAAD,mBACPyD,GADO,YAEPC,OAER,CAACvB,EAAQe,IAEL,CACH5wC,KAAMqxC,GACN3B,aACAvD,cACAC,UACAC,kB,UC5GFiF,GAAkB,6CAClBC,GAAoB,IAAIvmC,aAAUwmC,IAClCC,GAAkB,IAAIzmC,aAAU2tB,IAChC+Y,GAAiB,IAAI1mC,aAAU2mC,IA+ItBC,GA7IY,SAAC,GAAkD,IAAhDz9B,EAA+C,EAA/CA,UAAW64B,EAAoC,EAApCA,UAAWxqC,EAAyB,EAAzBA,OAAQy0B,EAAiB,EAAjBA,WAChD7uB,EAAa6B,IAAb7B,SAEFmR,EAAiB1S,mBACvB,EAA8BpG,mBAAS,IAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KAEMgqB,IAA8B,aAAd/3B,GAA0C,YAAdA,GAAyC,WAAdA,GACvElU,EAAqB,aAAdkU,EAA2B,QAAU,YAC5C4qB,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgByS,KAClD84B,EAAgB,SAACvrC,EAAIrG,GAAL,IAAU2yC,EAAV,uDAAqB,EAArB,OAA2B/W,EAAW,CAAEv1B,KAAIoC,KAAM,sBAAuBxI,QAASyjC,EAAezjC,QAASsB,QAASowC,EAAW3xC,MAAK2yC,cACnJ/2B,EAAW/T,mBAAQ,kBAAMkS,GAAY2pB,EAAer9B,MAAK,CAACq9B,EAAer9B,KAEzEiuC,EAAQH,GAAS,CACnBhtC,SACAyU,WACA8nB,iBACAxlB,mBAGEs4B,EAAYnB,GAAa,CAC3BluC,SACAyU,WACA9C,YACAoF,mBAGJ,EAMIrW,mBAAQ,iBAAoB,YAAdiR,EAA0B09B,EAAYlC,IAAO,CAACx7B,EAAWw7B,EAAOkC,IAL9E7xC,EADJ,EACIA,KACA0vC,EAFJ,EAEIA,WACAvD,EAHJ,EAGIA,YACAC,EAJJ,EAIIA,QACAC,EALJ,EAKIA,cAGEC,EAAU,uCAAG,WAAOxoC,EAAMjC,EAAOsN,GAApB,mCAAAnX,EAAA,yDACT0M,EAAOynC,EAAYljC,MAAK,SAAAd,GAAC,OAAIA,EAAErE,OAASA,EAAKjI,eAAiBsM,EAAEtG,QAAUA,KADjE,oDAIPuoC,EAAyC1lC,EAAzC0lC,aAAc8F,EAA2BxrC,EAA3BwrC,aAAcr7B,EAAanQ,EAAbmQ,SAC9B62B,EAAev8B,EAAOlB,MAAM,EAAGkB,EAAOw8B,QAAQ,KAAOp5B,OAAOsC,GAAY,GACxEw2B,EAAkBC,sBAAWI,EAAc72B,GAG7Ci9B,EAAa,CACbplC,GAAI09B,EACJvoC,MAAO,MACPqC,KAAMutC,GAAgBr6B,mBAAmB,WAAY,CAACk6B,GAAiBjG,EAAgBE,iBAG9D,IAAzBh5B,OAAO63B,KACP0H,EAAa,CACTplC,GAAI4kC,GACJzvC,MAAOwpC,EAAgBE,cACvBrnC,KAAM,OAId+oC,EAAc,+BAAD,OAAgCrhC,KAAKC,OAASimC,GAE9C,YAAThuC,EAzBW,kCA4BHiuC,EAAe,GAEb96B,EAAW7B,GAAYjB,GACvB+kB,EAAgB,IAAI/B,YAASiT,EAAcqH,GAAiBx6B,GA/B3D,UAgCiBiiB,EAAciU,UAAUmE,GAAiBpB,GAhC1D,eAkCO9C,GAAG79B,aAAUC,aACvBuiC,EAAat0C,KAAK,CACdiP,GAAI09B,EACJvoC,MAAO,MACPqC,KAAMutC,GAAgBr6B,mBAAmB,UAAW,CAAC84B,EAAc3gC,aAAUC,eAIrFuiC,EAAat0C,KAAK,CACdiP,GAAIwjC,EACJruC,MAAO,MACPqC,KAAMwtC,GAAet6B,mBAAmB,UAAW,CAACi0B,EAAgBE,cAAeyB,MAGvFC,EAAc,8BAAD,OAA+BrhC,KAAKC,OAAS,CACtDa,GAAI4kC,GACJzvC,MAAO,MACPqC,KAAMqtC,GAAkBn6B,mBAAmB,YAAa,CAAC26B,MAnDtD,mDAsDPp4C,QAAQlB,MAAR,MACA2P,EAAS,GAAD,OAAInI,EAAJ,2BAA2B,KAAExG,SAAF,MAAkB,CAAEhB,OAAO,IAvDvD,gCAyDR,GAAa,aAATqL,EACP,IACUiuC,EAAe,CAAC,CAClBrlC,GAAIwjC,EACJruC,MAAO,MACPqC,KAAMwtC,GAAet6B,mBAAmB,WAAY,CAACi0B,EAAgBE,cAAeyB,MAGxFC,EAAc,+BAAD,OAAgCrhC,KAAKC,OAAS,CACvDa,GAAI4kC,GACJzvC,MAAO,MACPqC,KAAMqtC,GAAkBn6B,mBAAmB,YAAa,CAAC26B,MAE/D,MAAMt9B,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,GAAD,OAAInI,EAAJ,4BAA4BwU,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,IAxExD,2DAAH,0DA8FhB,OAjBA6I,qBAAU,WAAM,4CAKZ,sBAAAtJ,EAAA,sEACU03C,IADV,OAEIxtB,GAAW,GAFf,4CALY,sBACRgqB,EACVhqB,GAAW,GAFO,mCASZ8vB,KACD,CAAC9F,EAAawD,IAEjBpuC,qBAAU,WACNiY,EAAenT,QAAU+N,EACpB+3B,GAAahqB,GAAW,KAC9B,CAAC/N,EAAW+3B,IAGX,cAAC,GAAD,CACIxU,QAASA,EACT13B,KAAMA,EACNksC,YAAaA,EACbC,YAAaA,EACbC,QAASA,EACTC,cAAeA,EACfC,WAAYA,KCjIT2F,GArBF,SAAC,GAA6D,IAA3DpZ,EAA0D,EAA1DA,UAAWpG,EAA+C,EAA/CA,gBAAiBkR,EAA8B,EAA9BA,YAAa1M,EAAiB,EAAjBA,WACrD,OACI,qBAAKv1B,GAAG,OAAR,SAEQm3B,EAAUnf,iBACN,cAAC,EAAD,IAEA,sBAAK3Z,UAAU,QAAf,UACI,cAAC,GAAD,CAAUoU,UAAWse,EAAgB/wB,GAAIc,OAAQq2B,EAAUr2B,OAAQoI,UAAWiuB,EAAUjuB,UAAWhO,QAAS+mC,EAAa1M,WAAYA,IACrI,cAAC,GAAD,CACI9iB,UAAWse,EAAgB/wB,GAC3BsrC,UAAWrJ,EACXnhC,OAAQq2B,EAAUr2B,OAClBy0B,WAAYA,U,oBC+NzBib,I,QAjOO,SAAAtsC,GACpB,MAA0CnF,mBAAS,CACjDtH,QAAS,GACTmM,MAAO,IAFT,mBAAO3I,EAAP,KAAsBw1C,EAAtB,KAIA,EAAkC1xC,mBAAS,IAA3C,mBAAO85B,EAAP,KAAkBC,EAAlB,KACA,EAAgC/5B,oBAAS,GAAzC,mBAAOwB,EAAP,KAAiBgwB,EAAjB,KACA,EAAsCxxB,oBAAS,GAA/C,mBAAO2xC,EAAP,KAAoBC,EAApB,KACA,EAA4C5xC,mBAAS,MAArD,mBAAO8xB,EAAP,KAAwB+H,EAAxB,KACA,EAA0C75B,mBAAS,IAAnD,mBAAO6xC,EAAP,KAAsBC,EAAtB,KACQttB,EAAcG,KAAdH,UACR,EAAkDxkB,mBAAS,CACzD+V,SAAS,EACT/c,QAAS,KAFX,mBAAOqxC,EAAP,KAA0BC,EAA1B,KAX6B,SAiBdjO,IAjBc,2EAiB7B,sBAAA9kC,EAAA,0DACMqlB,KADN,gCAEU0f,IAFV,6CAIUC,IAJV,4CAjB6B,+BAyBdD,IAzBc,2EAyB7B,8BAAA/kC,EAAA,6DACQif,EAAW,IAAIgmB,qBAAkB,CACrC9oB,UAAW,EACX+oB,iCAAkCC,2CAClC7iC,mBAAoBxC,OAJxB,SAS4Bmf,EAAS2lB,iBAAiB,KATtD,OASUlkC,EATV,OAUI4hC,EAAiB,CAAE5hC,YAAWsjC,WAAY,WAC1CqW,GAAe,GAXnB,4CAzB6B,+BAuCdrV,IAvCc,2EAuC7B,8BAAAhlC,EAAA,6DACMS,EAAQ,KADd,kBAG2BF,eAH3B,WAGU8kC,EAHV,QAIkB5kC,MAJlB,oBAKwC,IAA9B4kC,EAAS3kC,UAAUP,OAL7B,0CAMeq6B,EAAuB,CAC5Br5B,QAASkkC,EAAS3kC,UAAU,GAC5B4M,MAAO,KARjB,QAWQg1B,EAAiB,CAAEnhC,QAASkkC,EAAS3kC,UAAWsjC,WAAY,WAC5DqW,GAAe,GAZvB,gCAeM55C,EAAQ4kC,EAAS5kC,MAfvB,0DAkBIkB,QAAQC,IAAR,MAEEnB,EADE,KAAEe,YAAuB,mBAAT,KAAEkI,GACZ,kBACC,KAAElI,YAA+B,QAAjB,KAAEA,WACnB,yEAEA,KAAEC,QAxBhB,QA4BMhB,GACF+hC,EAAa,iBAAD,OAAkB/hC,EAAMgB,SAAWhB,IA7BnD,2DAvC6B,+BAwEd+jC,IAxEc,2EAwE7B,8BAAAxkC,EAAA,6DAOQif,EAAW,IAAIwlB,qBAAkB,CACrCC,uBAAwBC,OAR5B,SAU0B1lB,EAAS2lB,iBAAiB,KAVpD,OAUQlkC,EAVR,OAWE4hC,EAAiB,CAAE5hC,YAAWsjC,WAAY,WAC1CqW,GAAe,GAZjB,4CAxE6B,+BAuFdxW,IAvFc,2EAuF7B,8BAAA7jC,EAAA,yDAEiC,qBAApB6R,OAAOsH,SAFpB,sBAIU,IAAI7Y,MAAM,0BAJpB,cAMQ6Y,EAAWtH,OAAOsH,SAN1B,SAOyBA,EAAS9Y,QAAQ,CAAE8F,OAAQ,wBAPpD,WAOQ29B,EAPR,QAQgB3jC,OARhB,sBAQ8B,IAAIG,MAAM,yBARxC,UAS0B,IAApBwjC,EAAS3jC,OATf,0CAUWq6B,EAAuB,CAC5Br5B,QAAS2iC,EAAS,GAClBx2B,MAAO,KAZb,QAeEg1B,EAAiB,CAAE5hC,UAAWojC,EAAUE,WAAY,SACpDqW,GAAe,GAhBjB,6CAvF6B,sBA0G7B,IAIM1X,EAAO,uCAAG,WAAMD,GAAN,SAAA1iC,EAAA,6DACdwiC,EAAa,IADC,kBAGNE,IAHM,uDAKZ/gC,QAAQlB,MAAR,MACA+hC,EAAa,qBAAD,OAAsB,KAAE/gC,SAAF,OANtB,yDAAH,sDAUP+4B,EAAyBrxB,uBAAY,SAAAU,GACzCswC,EAAiBtwC,GAdjBwwC,GAAe,SAAAxrB,GAAS,OAAKA,KAgBzB0L,GAAiBggB,EAAiB,GAAD,OAAIhgB,EAAgByJ,WAApB,sBAA4Cn6B,EAAMyD,MAAQ,MAC9F,CAACitB,IAEJjxB,qBAAU,WACJ8wC,GAAe7f,GACjBtN,EACE,cAAC,GAAD,CACEsN,gBAAiBA,EAAgB75B,UACjC+5B,gBAAiB7sB,EAAM6sB,gBACvBD,uBAAwBA,EACxBE,YAAW,0CAAqCH,EAAgByJ,WAArD,wDAGhB,CAACoW,EAAa5f,EAAwB5sB,EAAM6sB,gBAAiBxN,EAAWsN,IAE3E,IAAMoM,EACJ,sBAAK5+B,UAAU,sBAAf,UACE,eAAC,EAAD,CACEG,QAAS,kBAAMy6B,EAAQ6B,IADzB,UAGE,qBACEz8B,UAAU,OACVI,MAAO,CAAEC,gBAAiB,iCAL9B,YASA,eAAC,EAAD,CACEF,QAAS,kBAAMy6B,EAAQmC,IADzB,UAGE,qBACE/8B,UAAU,OACVI,MAAO,CAAEC,gBAAiB,iCAL9B,YASA,eAAC,EAAD,CACEF,QAAS,kBAAMy6B,EAAQkB,IADzB,UAGE,qBACE97B,UAAU,OACVI,MAAO,CAAEC,gBAAiB,mCAL9B,2BA6BJ,OAZAkB,qBAAU,WACR,IAAMkxC,EjB3K2B,SAACr5C,EAASwqC,GAC3C,IAAMiG,EAAcH,GAAgBtwC,GACpC,OAAKywC,EAAYpzB,QAEbrd,GAAWwqC,GAAgBxqC,IAAYwqC,EAChC,CACHntB,SAAS,EACT/c,QAAS,8EAIV,CAAE+c,SAAS,GATeozB,EiByKV6I,CAA6B91C,EAAcxD,QAASyM,EAAM+9B,aAEjF1R,GAAaugB,EAAeh8B,SAE5Bu0B,EAAqB,CACnBv0B,QAASg8B,EAAeh8B,QACxB/c,QAAS+4C,EAAe/4C,QAAU+4C,EAAe/4C,QAAU,OAG5D,CAACmM,EAAM+9B,YAAahnC,EAAcxD,UAGnC,sBAAK4G,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,cAAC,GAAD,CACE6B,YAAY,uBACZ7B,UAAU,iBACV8B,MAAOlF,EAAcxD,QACrBmwB,KAAMgpB,EACNxwC,QA1BU,SAAAD,GACdywC,EAAcn6C,QAAQo6C,EAAiB,IAC3CJ,EAAiB,2BAAKx1C,GAAN,IAAqBxD,QAAS0I,QA0BxC,cAAC,EAAD,CACE1B,MAAO,CAAEoE,OAAQ,QACjBhD,MAAM,iBACNoF,cAAY,EAHd,SAKGg4B,OAGL,qBAAK5+B,UAAU,eAAf,SACE,cAAC,EAAD,CACEkC,SAAUA,EACVjC,KAAM,cAAC,IAAD,IACNE,QAAS,kBAAM0F,EAAM8sC,gBAAgB/1C,IACrCqF,OAAK,EAJP,sBAUF8oC,EAAkBrxC,SACjB,sBAAKsG,UAAU,mBAAf,UAAkC,cAAC,IAAD,CAAOoE,KAAM,KAA/C,OAA2D2mC,EAAkBrxC,WAE/E8gC,EAAY,oBAAIx6B,UAAU,QAAd,SAAuBw6B,IAAkB,kC,oBChD7CoY,GA9KO,SAAC,GAAgD,IAA9CvlB,EAA6C,EAA7CA,WAAYuW,EAAiC,EAAjCA,YAAaiP,EAAoB,EAApBA,cACtCztB,EAAcC,KAAdD,UACA/c,EAAa6B,IAAb7B,SAEFyqC,EAAS3vC,mBAAQ,kBAAM4vC,iBAAcC,eAAe,MAAK,IAE/D,EAAgCtyC,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAAgCzhB,mBAAS,MAAzC,mBAAOuyC,EAAP,KAAiBC,EAAjB,KACA,EAAsCxyC,mBAAS,IAA/C,mBAAOyyC,EAAP,KAAoBC,EAApB,KACA,EAAoC1yC,oBAAS,GAA7C,mBAAO2yC,EAAP,KAAmBC,EAAnB,KACA,EAAgD5yC,mBAAS,IAAzD,mBAAO6yC,EAAP,KAAyBC,EAAzB,KACA,EAAoC9yC,oBAAS,GAA7C,mBAAO4qB,EAAP,KAAmBmoB,EAAnB,KACA,EAAkC/yC,qBAAlC,mBAAOgzC,EAAP,KAAkBC,EAAlB,KAEApyC,qBAAU,WACRoyC,EAAaj+B,UAAOC,MAAMG,QAAQJ,UAAOC,MAAMi+B,YAAYv1C,KAAKC,UAAU,CAAEu1C,IAAKf,EAAQgB,WAAW,IAAIjoC,MAAOkoC,iBAC9G,CAACjB,IAEJ,IAAMkB,EAAa5yC,uBAAY,WAC3B,IAAM6yC,EAAUlB,iBAAcmB,OAC1BtQ,EAAYhhB,MACZ,gBACAkwB,GAQJnK,KAAOzlB,UAAU+wB,EALK,CAClBrL,QAAS,EACTC,OAAQ,IAG6B,SAACnwC,EAAOuF,GACzCvF,GACAkB,QAAQC,IAAInB,GACZ2P,EAAS3P,EAAMgB,QAAS,CAAEhB,OAAO,KAEjCw6C,EAAYj1C,QAGrB,CAACoK,EAAUyqC,EAAQlP,EAAYhhB,QAElCrhB,oBAAUyyC,EAAY,CAACA,IAEvB,IAMMG,EAAS,uCAAG,gCAAAl8C,EAAA,yDACTo1B,EADS,uBAEVhlB,EAAS,iEAAkE,CAAE3P,OAAO,IAF1E,0CAM8BsF,EAAS,UAE9CqvB,EAF8C,uBAErBuW,EAAYjiC,GAFS,kBAEW,CACxDyyC,OAAQV,IATF,gBAMNj9B,EANM,EAMNA,QAMiB,WANR49B,EANH,EAMGA,mBAMiBhsC,EAAS,+FAAgG,CAAE3P,OAAO,IAChJ+d,GAAgC,UAArB49B,GAA8BhsC,EAAS,wEAbxC,4CAAH,qDAiBTisC,EAAS,uCAAG,oCAAAr8C,EAAA,yDACE86C,iBAAcwB,OAAO,CAAEznC,MAAOqmC,EAAaL,WAD7C,uBAIVzqC,EAAS,sHAAuH,CAAE3P,OAAO,IACzIypB,GAAW,GALD,sCAULoxB,EAAiBn7C,OAVZ,uBAWNiQ,EAAS,iDAXH,2CAe0CrK,EAAS,UAEtDqvB,EAFsD,uBAE7BuW,EAAYjiC,GAFiB,kBAEG,CACxDyyC,OAAQV,EACR3iC,KAAMwiC,IAnBJ,oBAeF98B,EAfE,EAeFA,QAAS+9B,EAfP,EAeOA,gBAAiB96C,EAfxB,EAewBA,QAO7B+c,EAtBK,uBAuBA,IAAIle,MAAMmB,GAAW,iBAvBrB,yBA0BSsE,EAAU,GAAD,OACrBqvB,EADqB,qBACEuW,EAAYjiC,GADd,WAC2B,CAC/CkyC,IAAKH,EACLte,IAAKof,IA7BH,aA0BJ31C,EA1BI,QAgCD4X,QAhCC,iBAiCNpO,EAAS,4DACTwqC,IACA4B,IACAtyB,GAAW,GACXiD,IArCM,8BAuCA,IAAI7sB,MAAJ,UAAasG,EAAKnF,SAAW,kBAvC7B,0DA0CVE,QAAQlB,MAAR,MACA2P,EAAS,QAAU,KAAE3O,UAAZ,EAA0B,CAAEhB,OAAO,IAC5CypB,GAAW,GA5CD,0DAAH,qDAgDTsyB,EAAY,WACdjB,EAAoB,IACpBJ,EAAe,KAOnB,OACI,cAAC,GAAD,CACI5xC,MAAM,4BACN8lB,QAAU,cAAC,GAAD,CAAgB0D,QA/Hb,IA+HwCC,YAPtC,SAAC6H,GACpB2gB,EAAc3gB,MAId,SAII,sBAAKnxB,GAAG,WAAR,UACK2pB,GAAc,qBAAKtrB,UAAU,kBAAf,2DACf,qBAAKA,UAAU,cAAf,SACI,qBAAKo/B,IAAI,UAAUD,IAAK8T,MAE5B,sBAAKjzC,UAAU,UAAUI,MAAO,CAAEgJ,aAAciqC,EAAa,MAAQ,QAArE,WACMA,GACD,sBAAMrzC,UAAU,aAAaG,QAAS,WAAQmzC,GAAc,SAAAxsB,GAAS,OAAKA,MAA1E,8CAGAusB,GAAe,qCAAE,+DAAwC,8BAAMP,UAEpE,uBAAM9lB,SAjGG,SAAAtY,GACjBA,EAAEuY,iBACF9K,GAAW,GACXmyB,KA8FQ,UACI,gCACI,kEACA,sBAAKt0C,UAAU,gBAAf,UACI,cAAC,GAAD,CACIiC,OAAK,EACLmnB,QAAQ,SACR5nB,MAAM,uCACNI,aAAa,OACboE,UAAQ,EAACqjB,UAAW,EAAGC,UAAW,EAClCznB,YAAY,oBACZC,MAAOyxC,EACPxxC,QAAS,SAAAD,GAAK,OAAI0xC,EAAoB1xC,MAG1C,cAAC,EAAD,CAAQiC,KAAK,SAAS9B,OAAK,EAACC,SAAUopB,EAAYnrB,QAASg0C,EAA3D,2BAEJ,wDACA,cAAC,GAAD,CACItyC,YAAY,wCACZE,QAASqxC,EACTtxC,MAAOqxC,EACP/pB,QAAQ,WACRpjB,UAAQ,OAGhB,qBAAKhG,UAAU,UAAf,SACMkiB,EAAiF,cAAC,EAAD,CAAQhgB,UAAQ,EAAhB,SAAiB,cAAC,EAAD,MAArF,cAAC,EAAD,CAAQ6B,KAAK,SAAS7B,SAAUopB,EAAhC,mCCnFxBopB,I,QAtFc,SAAC,GAAgD,IAA9CrnB,EAA6C,EAA7CA,WAAYuW,EAAiC,EAAjCA,YAAaiP,EAAoB,EAApBA,cAC7CztB,EAAcC,KAAdD,UACA/c,EAAa6B,IAAb7B,SACR,EAAgC3H,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KAEA,EAAsCzhB,mBAAS,IAA/C,mBAAOyyC,EAAP,KAAoBC,EAApB,KACA,EAAoC1yC,oBAAS,GAA7C,mBAAO4qB,EAAP,KAAmBmoB,EAAnB,KACA,EAAkC/yC,qBAAlC,mBAAOgzC,EAAP,KAAkBC,EAAlB,KAEApyC,qBAAU,WACRoyC,EAAaj+B,UAAOC,MAAMG,QAAQJ,UAAOC,MAAMi+B,YAAYv1C,KAAKC,UAAU,CAAEu1C,IAAK,KAAMC,WAAW,IAAIjoC,MAAOkoC,iBAC5G,IAEH,IAMMY,EAAU,uCAAG,oCAAA18C,EAAA,+EAEuC+F,EAAS,UAExDqvB,EAFwD,uBAE/BuW,EAAYjiC,GAFmB,kBAEC,CAC1DyyC,OAAQV,EACR3iC,KAAMoiC,IANG,mBAEL18B,EAFK,EAELA,QAAS+9B,EAFJ,EAEIA,gBAAiB96C,EAFrB,EAEqBA,QAM7B+c,EARQ,sBASH,IAAIle,MAAMmB,GAAW,iBATlB,wBAYMsE,EAAU,GAAD,OACvBqvB,EADuB,qBACAuW,EAAYjiC,GADZ,WACyB,CACjDkyC,IAAKH,EACLte,IAAKof,IAfI,aAYP31C,EAZO,QAkBJ4X,QAlBI,iBAmBTpO,EAAS,6DACTwqC,IACA4B,IACAtyB,GAAW,GACXiD,IAvBS,8BAyBH,IAAI7sB,MAAJ,UAAasG,EAAKnF,SAAW,kBAzB1B,0DA4BbE,QAAQlB,MAAR,MACA2P,EAAS,QAAU,KAAE3O,UAAZ,EAA0B,CAAEhB,OAAO,IAC5CypB,GAAW,GA9BE,0DAAH,qDAkCVsyB,EAAY,WAChBrB,EAAe,KAOjB,OACI,cAAC,GAAD,CAAOzxC,GAAG,oBACRH,MAAM,oCACN8lB,QAAU,cAAC,GAAD,CAAgB0D,QAlEX,IAkEsCC,YAPpC,SAAC6H,GACpB2gB,EAAc3gB,MAId,SAIE,uBAAM9F,SArDS,SAAAtY,GACnBA,EAAEuY,iBACF9K,GAAW,GACXwyB,KAkDI,UACGrpB,GAAc,qBAAKtrB,UAAU,kBAAf,2DACf,gCACE,wDACE,cAAC,GAAD,CACI6B,YAAY,wCACZE,QAASqxC,EACTtxC,MAAOqxC,EACP/pB,QAAQ,WACRpjB,UAAQ,OAGhB,qBAAKhG,UAAU,UAAf,SACIkiB,EAAkF,cAAC,EAAD,CAAQhgB,UAAQ,EAAhB,SAAiB,cAAC,EAAD,MAAtF,cAAC,EAAD,CAAQ6B,KAAK,SAAS7B,SAAUopB,EAAhC,kCC7CdspB,I,QAxCA,SAAC,GAA+C,IAA7C5T,EAA4C,EAA5CA,gBAAiBn6B,EAA2B,EAA3BA,OAAQymB,EAAmB,EAAnBA,aAQvC,OACI,sBAAK3rB,GAAG,SAAR,UACI,sBAAK3B,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,oCACA,sBAAKA,UAAU,UAAU2B,GAAG,SAA5B,UACI,mBACIoC,KAAK,SACL6oB,KAAI,uCAAkCmB,mBAClC1vB,KAAKC,UAAU0iC,KAEnB5P,SAAQ,UAAK4P,EAAgBr/B,GAArB,SALZ,SAOI,cAAC,EAAD,CAAQ1B,KAAM,cAAC,KAAD,IAAaE,QAnBpB,WACvBmtB,EAAa,2BACN0T,GADK,IAER6T,kBAAkB,MAgBN,sBAEJ,sBAAKz0C,MAAO,CAAEwkC,SAAU,SAAxB,yDACiD5D,EAAgBr/B,GAAGuM,MAAM,EAAG,GAD7E,MACoF8yB,EAAgBr/B,GAAGuM,OAAO,GAD9G,uJAGI,oEAHJ,mDAOR,sBAAKlO,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,2CACA,sBAAKA,UAAU,UAAU2B,GAAG,SAA5B,UACI,cAAC,EAAD,CAAQ1B,KAAM,cAAC,KAAD,IAAaE,QAAS0G,EAApC,oBACA,uGCILiuC,GAvCe,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,aAAc9gB,EAAqD,EAArDA,aAAc+M,EAAuC,EAAvCA,gBAAiBtO,EAAsB,EAAtBA,gBACpEsiB,EAAqBD,GAAwC,6BAAxBA,EAAar2C,OAClDu2C,EAAqB,uCAAG,4BAAAh9C,EAAA,0DACtB+8C,EADsB,iDAEpBpf,EAASvC,GACX2N,EAAgBr/B,GAChB+wB,EAAgB/wB,GAChBq/B,EAAgBvS,OAAOkH,YACvB,CAAElH,OAAQuS,EAAgBvS,OAAQD,iBAAkBwS,EAAgBxS,mBAExEyF,EAAa2B,GARa,2CAAH,qDAUrBsf,EAAqBH,EAAeA,EAAar2C,OAAS,2BAC1Dy2C,EAAgB,SAAAnqB,GAClB,OAAIA,EAAU,MAAa,GAAN,OAAU3uB,KAAKqc,KAAKsS,EAAU,OAA9B,SAChB,UAAU3uB,KAAKqc,KAAKsS,EAAQ,MAA5B,WAEH5qB,EAAQ40C,EACgB,UAAvBE,EAAiC,CAAE,mBAAoB,WAAc,GACtE,CAAElR,OAAQ,WAChB,OACI,sBAAKhkC,UAAU,SAASI,MAAOA,EAAOD,QAAS,kBAAM80C,KAArD,UACI,cAAC,IAAD,IAE2B,6BAAvBC,EACI,uFAAkDxiB,EAAgBxyB,KAAlE,kCACmB,yBAAvBg1C,EACI,uHAAkFC,EAAcJ,EAAavhB,UAA7G,gCAAqJd,EAAgBxyB,KAArK,OACmB,oBAAvBg1C,EACI,0DAAqBxiB,EAAgBxyB,KAArC,0BAAkEi1C,EAAcJ,EAAaK,WAA7F,iBACmB,UAAvBF,EACI,0DAAqBxiB,EAAgBxyB,KAArC,kFACmB,WAAvBg1C,EACI,qIAAqG,SCbnH9hB,GAAqB,IAAInoB,aAC7BrT,EAAQ,MAiSKy9C,GA5RE,SAAC,GAQX,IAPLhoB,EAOI,EAPJA,WACAuW,EAMI,EANJA,YACAlR,EAKI,EALJA,gBACAx5B,EAII,EAJJA,SACAg+B,EAGI,EAHJA,WACAjD,EAEI,EAFJA,aACA3G,EACI,EADJA,aAEQpI,EAAcG,KAAdH,UACR,EAAsCxkB,oBAAS,kBAAMmL,KAAKC,SAA1D,mBAAQwpC,EAAR,KAAoBzC,EAApB,KAEAtxC,qBAAU,WACJsK,KAAKC,MAAQwpC,EAAa,KAAOzC,EAAchnC,KAAKC,OACxD,IAAMypC,EAAQv6C,YAAW,kBAAM63C,EAAchnC,KAAKC,SAhBhC,KAiBlB,OAAO,kBAAM1Q,aAAam6C,MACzB,CAACD,IAEJ,IAGA,EAAoCrzB,GAHxBoL,EAAU,UACfA,EADe,qBACQuW,EADR,YACuBlR,EAAgB/wB,GADvC,kCACmE2zC,GACrF,MACInxC,EAAR,EAAQA,KAAMrF,EAAd,EAAcA,OAAQojB,EAAtB,EAAsBA,UAChBmZ,EAAal3B,EAAOA,EAAKk3B,WAAa,GACtCma,EAAarxC,EAAOA,EAAKqxC,WAAa,KACtCT,EAAe5wC,GAAQA,EAAK4wC,aAC1B1sC,EAAa6B,IAAb7B,SACFN,EAAUC,uBACVg5B,EAAkB9nC,EAASgQ,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOiiC,KAE9C6R,EAAmB,SAACr8C,EAASwX,GACjC,MAAO,CACLjE,GAAIi3B,EACJz/B,KAAMivB,GAAmB/b,mBAAmB,mBAAoB,CAC9Dje,EACAwX,IAEF9O,MAAO,SAIL4zC,EAA6B,SAAAp6C,GACjC,IACE47B,EAAW,CACTv1B,GAAG,WAAD,OAAarG,EAAI6I,MACnBJ,KAAM,sBACNzI,IAAKA,EACLC,QAASm3B,EAAgBn3B,QACzBsB,QAAS+mC,IAEX,MAAO/qC,GACPe,QAAQlB,MAAMG,GACdwP,EAAS,UAAD,OAAWxP,EAAIa,SAAWb,GAAO,CAAEH,OAAO,MAiBhDi9C,EAAuB,uCAAG,WAAO94C,EAASzD,EAASw8C,GAAzB,SAAA39C,EAAA,0DAC1B29C,EAD0B,yCAErBvtC,EAAU,wEAA0C,mBAAGukB,KAAK,gBAAR,4CAAiE,CAAC3uB,IAAK,iBAAkBvF,OAAO,KAF/H,OAI5B40B,EAAa,2BAAKzwB,GAAN,IAAe4xB,OAAQ,CAAEr1B,QAASA,GAAWypB,YAAa,QACtExa,EACE,2MACA,CAAEhB,QAAS,MAPe,OAW9BU,EAAQrK,KAAK,oBAXiB,2CAAH,0DAcvBm4C,EAAyB,WACxBxoB,EAILnI,EAAU,cAAC,GAAD,CACRroB,QAASmkC,EACTtO,gBAAiBA,EACjBrF,WAAYA,EACZC,aAAcA,EACd2G,aAAcA,KARd5rB,EAAS,kDAAmD,CAAE3P,OAAO,KAYnEo9C,EAAkB,WACtB,IAAKzoB,EACH,OAAOhlB,EAAS,kDAAmD,CAAE3P,OAAO,IAG9EwsB,EAAU,cAAC,GAAD,CACRmI,WAAYA,EACZuW,YAAa5C,EACb6R,cAAe,WAAQA,EAAchnC,KAAKC,YAIxCiqC,EAAgB,uCAAG,sBAAA99C,EAAA,yDAClBo1B,EADkB,yCAEdhlB,EAAS,kDAAmD,CAAE3P,OAAO,KAFvD,OAKvBwsB,EAAU,cAAC,GAAD,CACRmI,WAAYA,EACZuW,YAAa5C,EACb6R,cAAe,WAAQA,EAAchnC,KAAKC,WARrB,2CAAH,qDAahB4xB,EAASt8B,uBAAY,SAACu8B,EAAeC,GACzC,IAAMC,EAAS,IAAIC,WAMnB,GAJIF,EAAcxlC,QAChBiQ,EAAS,GAAD,OAAIu1B,EAAc,GAAGvD,KAAK/8B,KAA1B,eAAqCsgC,EAAc,GAAGvD,KAAKj2B,KAAO,MAAMsB,QAAQ,GAAhF,gBAA0Fk4B,EAAc,GAAGG,OAAO,GAAGrkC,SAAW,CAAEhB,OAAO,IAG/IilC,EAAcvlC,OAAO,CACvB,IAAMiiC,EAAOsD,EAAc,GAE3BE,EAAOG,WAAW3D,EAAK,SACvBwD,EAAOI,OAAS,SAAAC,GACd,IAAM51B,EAAU41B,EAAY36B,OAAOiT,OAC7B2nB,EAAc9/B,KAAKqiB,MAAMpY,GACzB81B,EAAgBrE,GAA6BoE,GAE/CC,EAAc3nB,QAAS6W,EAAa6Q,EAAa,CAAEzP,QAAQ,IAC1DrmB,EAAS+1B,EAAc1kC,QAAS,CAAEhB,OAAO,QAGjD,CAAC2P,EAAUilB,IACd,EAAwF+Q,aAAY,CAClGX,SACAY,SAAS,EACTC,YAAY,EACZC,OAAQ,mBACRC,SAAU,EACVC,UAAWtE,KANL4b,EAAR,EAAQA,aAAcrX,EAAtB,EAAsBA,cAAel9B,EAArC,EAAqCA,KAAMw0C,EAA3C,EAA2CA,aAAcC,EAAzD,EAAyDA,aAAcC,EAAvE,EAAuEA,aAiBjEC,EAAkB/a,EAAW2F,EAAgBvS,OAAOtvB,mBACvD41C,GAAgBA,EAAar2C,SAAWwjB,GAEnCmZ,GAAc2F,EAAgBvS,OAAOtvB,iBAElC6hC,EAAgBvS,OAAOkH,aAVlB,SAAAlH,GACZ,IAAM8E,EAAW,IAAI3d,YACb4d,EAAuB/E,EAAvB+E,SAAUC,EAAahF,EAAbgF,IAAKC,EAAQjF,EAARiF,IACvB,OAAOE,qBAAUL,EAASM,OAAO,CAAC,iCAAkC,CAAC,CAACL,EAAUC,EAAKC,MAS9E0H,CAAQ4F,EAAgBvS,UAAY4M,EAAW2F,EAAgBvS,OAAOtvB,kBAI3Ek3C,EAAW9zC,OAAOi6B,QAAQnB,GAC7BliC,KAAI,YAAwB,IAAD,mBAArBwX,EAAqB,KAC1B,IAD0B,KACV,OAAO,KAEvB,IAAM2lC,EAAcjnC,GAAQsB,IAAS,KAC/B4lC,EAAa5lC,IAAS5R,EAAeI,gBACrCq3C,EAAWD,EAAU,iCACGvV,EAAgBpe,OAAS,gBAD5B,eAEpBjS,EAFoB,YAEZ2lC,GAAeA,IAAgB3lC,EAA/B,WAA0C2lC,EAA1C,KAA2D,IAIpEG,GAHgBF,EAClBvV,EAAgBvS,OAAOtvB,gBACvB6hC,EAAgBvS,OAAOr1B,WACUuX,EAC/B+lC,EAAoBH,IAAeH,EAEzC,OACE,+BACE,cAAC,GAAD,CAAWp2C,UAAU,iBAAiB8B,MAAO00C,EAAUt0C,UAAQ,IAC/D,sBAAKlC,UAAU,eAAf,UACGu2C,GAA8B,OAAff,IAAyBA,EACtC,cAAC,EAAD,CAAQ5xC,KAAG,EAACzD,QAAS41C,EAAkB9zC,OAAK,EAA5C,yBACA,cAAC,EAAD,CAAQ9B,QAAS21C,EAAiB7zC,OAAK,EAAvC,yBAEFs0C,GAAe,cAAC,EAAD,CACdr0C,UAAWw0C,EACXl1C,MAAO40C,EAAkB,uCAAyC,GAClEj2C,QAAS01C,EAAwB5zC,OAAK,EAHxB,6BAKhB,cAAC,EAAD,CACEC,SAAUu0C,EACVj1C,MAAOi1C,EAAa,4BAA8B,GAClDt2C,QAAS,kBACPw1C,EAAwB3U,EAAiBrwB,EAAM4lC,IAEjDt0C,OAAK,EANP,0BAUA,cAAC,EAAD,CACE9B,QAAS,kBA1JM,SAAA0a,GACzB,IAAMvf,EAAMm6C,EAAiB56B,EAAKtK,GAAkBE,OACpDilC,EAA2Bp6C,GAwJFq7C,CAAmBhmC,IAClC1O,OAAK,EACL2B,KAAG,EACH3D,KAAM,cAAC,IAAD,IACNuB,MACEi1C,EAAa,0CAA4C,GAE3Dv0C,SAAUu0C,EARZ,yBAtBK9lC,MAsCZ7Q,QAAO,SAAAuJ,GAAC,OAAIA,KAETutC,EAAc10B,IAAc/d,EAC5B0yC,EAAkBxpB,EAAc,qCACpC,sBAAKrtB,UAAU,QAAQ2B,GAAG,UAA1B,UACGy0C,IAAoBQ,GAAgB,cAAC,GAAD,CACnC7B,aAAcA,EACd9gB,aAAcA,EACd+M,gBAAiBA,EACjBtO,gBAAiBA,IAEnB,sBAAK1yB,UAAU,kBAAf,UACE,cAAC,IAAD,CAAeoE,KAAM,KACrB,gJACgHsuB,EAAgBxyB,KADhI,SAEQ,mBAAG0sB,KAAK,kEAAkErpB,OAAO,SAASspB,IAAI,aAA9F,0CAGV,qBAAK7sB,UAAU,cAAf,gCACClB,GACC,qBAAIkB,UAAU,QAAd,+CAAyDlB,KAE1D83C,GAAe,cAAC,EAAD,IAChB,oBAAI52C,UAAU,UAAd,UAA0B42C,GAAeP,OAE3C,sBAAKr2C,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,4BACA,cAAC,GAAD,CACE2yC,gBAhMyB,SAAAmE,GAC7B,IAAMx7C,EAAMm6C,EACVqB,EAAiB19C,QACjBmX,GAAkBC,MAEpBklC,EAA2Bp6C,IA4LvBo3B,gBAAiBA,EACjBkR,YAAaA,UAIjB,sBAAK5jC,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,gCACA,oBAAIA,UAAU,QAAd,yDAKJ,OACE,kDAAS2B,GAAG,WAAW3B,WAAYi2C,EAAe,eAAiB,KAAOC,EAAe,eAAiB,KAAOC,EAAe,eAAiB,KAASH,KAA1J,eAEKE,GAAgBC,IACb,qBAAKn2C,UAAWk2C,EAAe,kBAAoB,kBAAnD,SAAsE,cAAC,KAAD,CAAgB9xC,KAAM,QAGlG,qCAAWu6B,MACVkY,EAED,cAAC,GAAD,CACE7V,gBAAiBA,EACjBn6B,OAAQpF,EACR6rB,aAAcA,S,gBCjStB,SAASypB,GAAiB3iC,GACxB,IAAMxJ,EAAUR,EAASlB,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOyS,KAC5C,OAAOxJ,EAAUA,EAAQN,kBAAoB,QA6DhC,SAAS0sC,GAAT,GAAuI,IAAD,OAA/G17C,EAA+G,EAA/GA,IAAK27C,EAA0G,EAA1GA,UAAWrsC,EAA+F,EAA/FA,QAAS/N,EAAsF,EAAtFA,QAASq6C,EAA6E,EAA7EA,eAAgBxrC,EAA6D,EAA7DA,MAAOyrC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,oBAC5H,EAAkC32C,oBAAS,GAA3C,mBAAO42C,EAAP,KAAmBC,EAAnB,KACMC,EAAenoC,GAAQ/T,EAAI,IAE3B0jC,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgBiJ,KAGlD6sC,EAFkBtjC,GAAsB7Y,EAAKsP,EAAS/N,EAAS,CAAE6O,QAAOH,UAAU,IAEvDpS,KAAI,SAAAsqB,GAAK,OAAIF,MAAMC,QAAQC,GAASA,EAAMtqB,KAAI,SAACwL,EAAMvH,GAAP,OAjEjF,SAAkCuH,EAAMvH,EAAG4hC,GACzC,GAAoB,IAAhBr6B,EAAKvM,OAAc,OAAOuM,EAE9B,GAAU,IAANvH,EAAS,OAAQ,qBAAK4C,UAAS,iBAAY2E,EAAK7I,eAA/B,SAAoE6I,GAApE,eAA6DvH,IAElF,IAAKuH,EAAKZ,KAAM,OAAQ,qBAAK/D,UAAU,OAAf,SAA0C2E,GAA1C,eAAmCvH,IAE3D,GAAkB,UAAduH,EAAKZ,KAAkB,OACzB,sBAAK/D,UAAU,QAAf,UACI2E,EAAKyK,OAAS,EAAI,+BAAQzK,EAAKyK,SAAkB,KACjDzK,EAAKvL,QAAU,qBAAK4G,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,QAnB/CuK,EAmBqEo0B,EAAer9B,GAnB3EvI,EAmB+EuL,EAAKvL,QAlB3G,GAAN,OAH8B,yDAG9B,YAAqCwR,EAArC,YAAgDxR,EAAhD,SAkBmE,QAAsE,KACnIuL,EAAKqN,SAHT,eAAoC5U,IAjBxC,IAAsBwN,EAASxR,EAwB7B,GAAkB,YAAduL,EAAKZ,KAAoB,OAC3B,mBACE/D,UAAU,UAEV4sB,KAAMjoB,EAAKvL,QAAL,UAAkB4lC,EAAez0B,YAAjC,oBAAwD5F,EAAKvL,SAAY,KAC/EmK,OAAO,SACPspB,IAAI,aACJ1sB,QAAS,SAAAuU,GAAC,OAAIA,EAAEoY,mBANlB,SAQE,eAAC,GAAD,CAAS5qB,UAAWyC,EAAKvL,QAASiK,MAAOsB,EAAKvL,QAA9C,UACIuL,EAAKzE,KAAOyE,EAAKzE,KAAOyE,EAAKvL,QAC7BuL,EAAKvL,QAAU,cAAC,KAAD,IAA2B,SAVhD,eAEegE,IAajB,GAAkB,YAAduH,EAAKZ,KAAoB,OAC3B,sBAAK/D,UAAU,UAAf,UACI2E,EAAK1E,KAAO,qBAAKD,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASsE,EAAK1E,KAAd,QAAkC,KAC5F0E,EAAKzE,OAFT,eAAsC9C,IAMxC,GAAkB,WAAduH,EAAKZ,KAAmB,CAC1B,IAAM2zC,EAAc/yC,EAAKiG,SAAWjG,EAAKvL,SAAWuL,EAAKhD,GACzD,OACE,oBACE3B,UAAU,SAEV4sB,KAAM8qB,EAAW,uBAAmB/yC,EAAKiG,QAAxB,YAAmCjG,EAAKvL,QAAxC,YAAmDuL,EAAKhD,IAAO,KAChF4B,OAAO,SACPspB,IAAI,aACJ1sB,QAAS,SAAAuU,GAAC,OAAIA,EAAEoY,mBANlB,UAQInoB,EAAKzE,KACLw3C,EAAc,cAAC,KAAD,IAA2B,OAT7C,eAEet6C,IAYnB,OAAO,6BAUqFu6C,CAAyBhzC,EAAMvH,EAAG4hC,MAAoBvb,KAElJ,OACE,sBAAKzjB,UAAWk3C,EAAiB,0BAA4B,aAA7D,UACI,sBAAKl3C,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAOG,QAAS,kBAAOg3C,GAAiBI,GAAY,SAAA7iC,GAAC,OAAKA,MAAzE,SACE,sBAAK1U,UAAU,oBAAf,WACIm3C,GAAkB,qBAAKn3C,UAAU,YAAf,SACjBs3C,EAAc,cAAC,IAAD,IAAmB,cAAC,IAAD,MAEpC,qBAAKt3C,UAAU,UAAf,SAA2By3C,IAC3B,qBAAKz3C,UAAU,cACdk3C,GAAmB,qBAAKl3C,UAAU,oBAAf,qDAClBk3C,IAAmBxrC,IAAUyJ,GAAQ7Z,EAAKuB,IAAa,qBAAKmD,UAAU,iBAAf,4EAG7D,qBAAKA,UAAU,cAAf,SACGi3C,EACC,cAAC,GAAD,CAAS/0C,UAAWk1C,IAAmBC,EAAqBh0C,MAAOg0C,EAAnE,SACE,qBAAKr3C,UAAS,qBAAgBo3C,EAAiB,WAAa,IAAMj3C,QAAS,SAAAuU,GAAOA,EAAEoY,mBAAoBsqB,GAAkBH,EAAUhzC,MAAM,EAAMyQ,IAAhJ,SAAsJ,cAAC,IAAD,QAErJ,kCAIP4iC,EAAc,sBAAKt3C,UAAU,WAAf,UACZ,gCAAK,mDAAqB,mCAArB,QAAL,IAA2C1E,EAAI,GAAIk8C,EAAY,YAAQA,EAAR,KAA0B,MACzF,gCAAK,mDAAqB,sCAArB,QAAL,IAA8CziC,uBAAYzZ,EAAI,IAAM,MAAO,IAA3E,IAAiFy7C,GAAiBnsC,MAClG,gCAAK,sCAAL,IAAmBtP,EAAI,SACd,gC,yBClHfs8C,GAAkB,IAAI3sC,aAAUrT,EAAQ,MAGvC,SAASigD,GAAT,EAAsD59C,GAAO,IAAtC0S,EAAqC,EAArCA,GAAI7K,EAAiC,EAAjCA,MAAOqC,EAA0B,EAA1BA,KAAM2zC,EAAoB,EAApBA,WAG7C,GAAW,OAAPnrC,IAAgBA,EAAI,CACtB,IAAM3N,EAAO84C,GAAU,0BAAuBjsC,KAAKC,MAAM7O,SAAS,IAAIiR,MAAM,EAAE,GAAvD,aAA8DjU,EAAKiU,MAAM,IAChG,MAAO,CAACnP,EAAeE,oBAAqB6C,EAAO81C,GAAgBvgC,mBAAmB,SAAU,CAAClT,EAAMnF,KAEzG,MAAO,CAAC2N,EAAI7K,GAAS,MAAOqC,GAAQ,M,cC+JtC,SAAS4zC,GAAT,GAAmD,IAA1BniB,EAAyB,EAAzBA,OAAyB,IAAjBlqB,aAAiB,SAC1Cd,EAAUR,EAASlB,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOi0B,EAAOhrB,WACnD,IAAK2Y,MAAMC,QAAQoS,EAAOriB,MAAO,OAAQ,oBAAIvT,UAAU,QAAd,8DACzC,IAMyBg4C,EAHnBC,EAAiB9jC,GAHPyhB,EAAOriB,KAAKqiB,EAAOriB,KAAKnb,OAAS,GAGKw9B,EAAOhrB,QAASgrB,EAAOtF,UACvE4nB,EAAcD,EAAe/T,MAAM,IAAIiU,OAAJ,aAAiBp5C,EAAeK,cAAgB,MACnFmU,EAAO2kC,EAActiB,EAAOriB,KAAKrF,MAAM,GAAI,GAAK0nB,EAAOriB,KAG7D,OAAQ,sBAAKvT,UAAU,uBAAf,UACLuT,EAAKpa,KAAI,SAACmC,EAAK8B,GAAN,OAAa,cAAC,GAAD,CAErB9B,IAAKA,EAAKsP,QAASgrB,EAAOhrB,QAAS/N,QAAS+4B,EAAOtF,SAAU5kB,MAAOA,GAD/DtO,MAGP,qBAAI4C,UAAU,UAAd,UAEIk4C,EACE,+BACE,kCAAO,cAAC,IAAD,IAAP,SACA,4BAAID,EAAe/pC,MAAM,GAAIgqC,EAAY,GAAG9/C,aAG9C,KAGFw9B,EAAOwiB,WAAaxiB,EAAOwiB,SAAS3hC,SAClC,+BACE,0CACA,4BAAImf,EAAOwiB,SAASC,UAAY,qBAItC,+BACE,kCAAO,cAAC,IAAD,IAAP,kBACA,4BAAIziB,EAAO0iB,cA3BQN,EA2ByB,IAAInsC,KAAK+pB,EAAO0iB,aA3BrC,UAAON,EAAKO,qBAAZ,YAAoCP,EAAKQ,uBA2BWv7C,gBAG3E24B,EAAO6iB,aACL,+BACE,kCAAO,cAAC,IAAD,IAAP,0BACA,4BAAI7iB,EAAO6iB,kBAGb,KAGF7iB,EAAO8iB,KACL,+BACE,kCAAO,cAAC,IAAD,IAAP,oBACA,4BAAG,mBAAG9rB,KAAMhiB,EAAQL,YAAY,OAAOqrB,EAAO8iB,KAAMn1C,OAAO,SAASspB,IAAI,aAArE,SAAmFjiB,EAAQL,YAAYiH,MAAM,KAAK,UAGvH,UA3C2CokB,EAAOxH,KAiD7CuqB,OAnNf,YAAsG,IAA7EtrB,EAA4E,EAA5EA,WAAYuW,EAAgE,EAAhEA,YAAalR,EAAmD,EAAnDA,gBAAiBuB,EAAkC,EAAlCA,aAAc9P,EAAoB,EAApBA,iBACvE9b,EAAa6B,IAAb7B,SACFN,EAAUC,wBACVpJ,EAASuiC,uBAEf,EAAoCzgC,oBAAS,kBAAMmL,KAAKC,SAAxD,mBAAOwpC,EAAP,KAAmBzC,EAAnB,KAIAtxC,qBAAU,WACHsK,KAAKC,MAAQwpC,EAAc,KAAMzC,EAAchnC,KAAKC,OACzD,IAAMypC,EAAQv6C,YAAW,kBAAM63C,EAAchnC,KAAKC,SAAQ,KAC1D,OAAO,kBAAM1Q,aAAam6C,MACzB,CAACD,IACJ,IAGA,EAAoCrzB,GAHxBoL,EAAU,UACfA,EADe,qBACQuW,EADR,YACuBlR,EAAgB/wB,GADvC,oCACqE2zC,GACvF,MACInxC,EAAR,EAAQA,KAAMrF,EAAd,EAAcA,OAAQojB,EAAtB,EAAsBA,UAGhB02B,EAAuBz0C,EAAOA,EAAKoP,KAAKzT,QAAO,SAAAuJ,GAAC,OAAIA,EAAE+uC,YAAY,GAClES,EAAWx8C,KAAKqc,KAAKkgC,EAAqBxgD,OAFvB,IAInB0gD,EAAc31C,mBAAQ,kBAAM9G,KAAKwwC,IAAIxwC,KAAKywC,IAAIt6B,OAAO5T,EAAOm6C,MAAO,GAAIF,IAAa,IAAG,CAACj6C,EAAOm6C,KAAMF,IAC3G,EAAwBn4C,mBAASo4C,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAcL,EAAqB1qC,MAPhB,IAOuB6qC,EAAO,GAP9B,GAOqDA,GAAyB5/C,KAAI,SAAAy8B,GAAM,OAAImiB,GAAc,CAAEniB,SAAQlqB,OAAO,OAMpJ,GAJAnK,qBAAU,kBAAO2gB,GAAana,EAAQ64B,QAAR,+BAAwCmY,MAAS,CAACA,EAAMhxC,EAASma,IAC/F3gB,qBAAU,kBAAMy3C,EAAQF,KAAc,CAAClV,EAAalR,EAAiBomB,KAGhEzrB,EAAY,OAAQ,yBAAS1rB,GAAG,eAAZ,SACvB,oBAAI3B,UAAU,mBAAd,kEAIF,IAAMk5C,EAAe/0C,GAAQA,EAAKoP,KAAKrK,MAAK,SAAAG,GAAC,OAAKA,EAAE+uC,WAAa/uC,EAAE8vC,YAE7DC,EAAc,SAACC,GAAD,IAAgBp+B,EAAhB,uDAAwB,GAAxB,OAAgC,IAAI6Y,UAAJ,2BAC/CulB,GAD+C,IAElDC,MAAOD,EAAcC,MAAMC,IAC3B79C,SAAU,KAEV89C,kBA9CkB,KA8CCH,EAAcI,gBAC9Bx+B,KAECy+B,EAAoB,SAAAL,GAAa,OAAIplB,EAAamlB,EAAYC,EAAe,CACjF9lC,KAAM,CAAC,CAACqwB,EAAa,MAAO,WA0BxB+V,EACJ,sBAAK35C,UAAU,sBAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,cAAC,EAAD,CAAQgC,OAAK,EAAC0B,MAAI,EAACvD,QAAS,kBAAM44C,EAAO,GAAKC,GAAQ,SAAAD,GAAI,OAAIA,EAAO,MAArE,SAAyE,cAAC,KAAD,MACzE,sBAAK/4C,UAAU,qBAAf,UAAsC+4C,EAAtC,IAA6C,sCAAUF,QACvD,cAAC,EAAD,CAAQ72C,OAAK,EAAC0B,MAAI,EAACvD,QAAS,kBAAM44C,EAAOF,GAAYG,GAAQ,SAAAD,GAAI,OAAIA,EAAO,MAA5E,SAAgF,cAAC,KAAD,SAIpF,OACE,0BAASp3C,GAAG,eAAZ,YACKwiB,EAAiB/rB,QAAW,sBAAK4H,UAAU,QAAQ2B,GAAG,uBAA1B,UAC7B,qBAAK3B,UAAU,gBAAf,SACE,sBAAKA,UAAU,QAAf,UAAuB,cAAC,IAAD,CAAaoE,KAAM,KAA1C,4CAEF,qBAAKpE,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAcG,QAAS,kBAAM8zB,EAAa,OAAzD,SACG9P,EAAiBhrB,KAAI,SAAA2hC,GAAG,OACvB,cAAC,GAAD,CAEIlwB,QAAS8nB,EAAgB/wB,GACzB9E,QAAS+mC,EACTuT,eAAe,EACf77C,IAAKu8C,GAAY/c,EAAIx/B,IAAKsoC,IAJrB9I,EAAIn5B,SAOf,qBAAK3B,UAAU,UAAf,SAKE,cAAC,EAAD,CAAQiC,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAYE,QAAS,kBAAM8zB,EAAa,OAA5D,wCAKNilB,GAAiB,sBAAKl5C,UAAU,QAAQ2B,GAAG,UAA1B,UACnB,qBAAK3B,UAAU,gBAAf,SACE,sBAAKA,UAAU,QAAf,UAAuB,cAAC,IAAD,IAAvB,kCAEF,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,cAAC+3C,GAAD,CAAeniB,OAAQsjB,IACvB,sBAAKl5C,UAAU,UAAf,UACE,cAAC,EAAD,CAAQiC,OAAK,EAACjC,UAAU,SAASG,QAAS,WArEvC,IAAAk5C,EAEbD,EAFaC,EAqEoDH,GAnEtCU,OAAO,CAAEvsB,aAAYtvB,aAC7CxE,MAAK,YAA2B,IAAxBkd,EAAuB,EAAvBA,QAAS/c,EAAc,EAAdA,QACX+c,EAQHpO,EAAS,uCAPL3O,EAAQkJ,SAAS,0BACnByF,EAAS,2HAETA,EAAS,2BAAD,OAA4B3O,EAA5B,gFAEVggD,EAAkBL,OAKrBzgD,OAAM,SAAA8b,GACL9a,QAAQlB,MAAMgc,GACdglC,EAAkBL,OAoDZ,oBACA,cAAC,EAAD,CAAQp3C,OAAK,EAAC9B,QAAS,kBAhDF8zB,EAAamlB,EAA9BC,EAgDiCH,EAhDwB,CAAE3lC,KAAM8lC,EAAc9lC,KAAKrF,MAAM,GAAI,MAA9F,IAAAmrC,GAgDJ,iCAMR,sBAAK13C,GAAG,YAAY3B,UAAU,QAA9B,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,IACEmE,GAA6B,IAArBA,EAAKoP,KAAKnb,OAAgB,uBAAyB,4BAE5D6gD,EAAY7gD,OAAgBuhD,EAAP,QAE1B,sBAAK35C,UAAU,UAAf,WACIqtB,GAAe,oBAAIrtB,UAAU,mBAAd,gEAChBlB,GAAW,qBAAIkB,UAAU,mBAAd,iDAAsElB,KAEhFojB,IAAc/d,EAAO,cAAC,EAAD,IAClB80C,EAAY7gD,OACX,qCACI6gD,EACAU,KAHgB,eC3J9BE,GAAQ,CAAC,CACb35C,KAAM,YACNjC,IAAK,wBACL8pC,KAAM,sCACNwB,KAAM,+CAER,CACErpC,KAAM,YACNjC,IAAK,kDACL8pC,KAAM,0DACNwB,KAAM,+CAER,CACErpC,KAAM,WACNjC,IAAK,sBACL8pC,KAAM,mCACNwB,KAAM,+HAER,CACErpC,KAAM,mBACNjC,IAAK,6BACL8pC,KAAM,sCACNwB,KAAM,8EAER,CACErpC,KAAM,MACNjC,IAAK,4CACL8pC,KAAM,qDACNwB,KAAM,gBAIO,SAASuQ,GAAT,GAKX,IAJFlvC,EAIC,EAJDA,QACAg5B,EAGC,EAHDA,YACAoF,EAEC,EAFDA,cACAC,EACC,EADDA,iBAGA,EAAsCvoC,mBAAS,MAA/C,mBAAOqoC,EAAP,KAAoBgR,EAApB,KAEA,OACE,sBAAKp4C,GAAG,0BAAR,UACE,oBAAIA,GAAG,kBAAkB3B,UAAW+oC,EAAc,eAAiB,GAAnE,SACG8Q,GAAM1gD,KAAI,SAAC6gD,EAAMz0C,GAAP,OACT,qBAEEpF,QAAS,kBAAM45C,EAAeC,IAC9Bh6C,UAAY+oC,GAAeiR,EAAK/7C,MAAQ8qC,EAAY9qC,IAAO,WAAa,GAH1E,UAKE,qBAAK+B,UAAU,iBAAiBI,MAAO,CAAEC,gBAAgB,OAAD,OAAS25C,EAAKjS,KAAd,QACxD,qBAAK/nC,UAAU,YAAf,SAA4Bg6C,EAAK95C,OACjC,qBAAKF,UAAU,YAAf,SAA4Bg6C,EAAKzQ,SAN5BhkC,QAUVwjC,GACC,cAACD,GAAD,CACEl+B,QAASA,EACTm+B,YAAaA,EACbnF,YAAaA,EACboF,cAAeA,EACfC,iBAAkBA,O,eC3DbgR,GARG,CACd,+CACA,mEACA,8DACA,2DACA,oECcEhqC,GAAS,IAAIhF,aAAUgvC,IAEvBC,GAAY,SAAAh8B,GAGd,OAFAA,EAAMA,EAAI5I,WAAW,yBAA2B4I,EAAI0iB,QAAQ,8BAA+B,IAAM1iB,GAEzF5I,WAAW,WAAmB4I,EAAI0iB,QAAQ,6BAA8B,yBAC5E1iB,EAAI1M,MAAM,KAAK,GAAGsQ,SAAS,kBAA0B,wBAA0B5D,EAAI1M,MAAM,KAAKtD,MAAM,GAAGuD,KAAK,KAEzGyM,GAsNIi8B,GAnNK,SAAC,GAA+D,IAA7DvW,EAA4D,EAA5DA,YAAalR,EAA+C,EAA/CA,gBAAiBwE,EAA8B,EAA9BA,WAAYiT,EAAkB,EAAlBA,YACrDxxC,EAAyDwxC,EAAzDxxC,UAAW4H,EAA8C4pC,EAA9C5pC,WAAYX,EAAkCuqC,EAAlCvqC,cAAemD,EAAmBonC,EAAnBpnC,eAEtCsF,EAAa6B,IAAb7B,SACR,EAA6C84B,sBAArCv2B,EAAR,EAAQA,QAASwvC,EAAjB,EAAiBA,eAAgBjqC,EAAjC,EAAiCA,QACjC,EAAgCzP,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAAgCzhB,mBAAS,CACrC25C,MAAO,CACHjhD,QAAS,GACT6G,KAAM,IAEVC,KAAM,GACNyyB,YAAa,GACb6N,MAAO,GACP8Z,WAAY,GACZ/vC,YAAa,KATjB,mBAAO0lC,EAAP,KAAiBsK,EAAjB,KAWA,EAAgD75C,mBAAS,IAAzD,mBAAO85C,EAAP,KAAyBC,EAAzB,KACA,EAAkD/5C,oBAAS,GAA3D,mBAAOg6C,EAAP,KAA2BC,EAA3B,KACA,EAAgDj6C,oBAAS,GAAzD,mBAAOkpC,EAAP,KAAyBc,EAAzB,KACA,EAAoChqC,mBAAS,MAA7C,mBAAOF,EAAP,KAAmBqqC,EAAnB,KACA,GAAkDnqC,mBAAS,CACvD+V,SAAS,EACT/c,QAAS,KAFb,qBAAOqxC,GAAP,MAA0BC,GAA1B,MAwBAzpC,qBAAU,WACN,IAAMkxC,E5BoBiB,SAACr5C,EAASwqC,EAAagG,EAAkB7mC,EAAgBktC,EAAUvd,EAAiB9nB,GAAa,IAAD,EACrHi/B,EAAcF,GAA4BvwC,EAASwqC,EAAagG,EAAkB7mC,GACxF,OAAK8mC,EAAYpzB,QAEbw5B,GAAYrM,IAAgB,UAAAqM,EAASoK,aAAT,eAAgBjhD,WAAYwqC,EACjD,CACHntB,SAAS,EACT/c,QAAQ,sDAIZg5B,GAAmB9nB,GAAY8nB,EAAgB/wB,KAAOiJ,EAC/C,CACH6L,SAAS,EACT/c,QAAS,gDAIV,CAAE+c,SAAS,GAhBeozB,E4BtBN+Q,CAAuBJ,EAAkB5W,EAAagG,EAAkB7mC,EAAgBktC,EAAUvd,EAAiB9nB,GAE1I+vC,GAAqBlI,EAAeh8B,SACpCu0B,GAAqB,CACjBv0B,QAASg8B,EAAeh8B,QACxB/c,QAAS+4C,EAAe/4C,QAAU+4C,EAAe/4C,QAAU,OAGhE,CAAC8gD,EAAkBvK,EAAUvd,EAAiBkR,EAAah5B,EAASg/B,EAAkB7mC,IAEzF,IAAM83C,GAAgBz5C,sBAAW,sBAAC,4EAAAnJ,EAAA,yDAC9BkqB,GAAW,GACXo4B,EAAY,IAFkB,SAKpBvb,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgBiJ,KAL9B,sBAMC,IAAIrS,MAAM,iCANX,cAQlBgS,EAAgBy0B,EAAhBz0B,YACF2M,EAAW7B,GAAY2pB,EAAer9B,IACtCm5C,EAAW,IAAIplC,UAAO0hB,SAASgjB,EAAgBH,GAAW/iC,GAVtC,UAYgCtc,QAAQ6Y,IAAI,CAClEqnC,EAAS56C,OACT46C,EAASC,QAAQ5qC,GACjB2qC,EAASE,SAAS7qC,GAAS5W,MAAK,SAAA2kB,GAAG,MAAK,CAAEA,UAAQtlB,OAAM,SAAAC,GAAG,MAAK,CAAEA,UAClEiiD,EAAS58B,IAAI/N,GAAS5W,MAAK,SAAA2kB,GAAG,MAAK,CAAEA,UAAQtlB,OAAM,SAAAC,GAAG,MAAK,CAAEA,YAhBvC,uCAYnByhD,EAZmB,KAYPlhD,EAZO,KAYE6hD,EAZF,KAYaC,EAZb,KAkBpBh9B,EAAM+8B,EAAU/8B,KAAOg9B,EAAUh9B,IAlBb,uBAmBV+8B,EAAUpiD,KAAOqiD,EAAUriD,IAnBjB,WAqBtB0F,EAAO,IAEP2f,EAAI5I,WAAW,yBAvBO,iBAwBtB/W,EAAOF,KAAKqiB,MAAMxC,EAAI0iB,QAAQ,8BAA+B,KAxBvC,+BA0BhBua,EAAUjB,GAAUh8B,GA1BJ,UA2BCngB,MAAMo9C,GA3BP,eA2BhB18C,EA3BgB,iBA4BTA,EAASF,OA5BA,QA4BtBA,EA5BsB,eA+BpBiiC,EAAQjiC,EAAO27C,GAAU37C,EAAKiiC,OAAS,KAC7C+Z,GAAY,SAAAtK,GAAQ,8CACbA,GACA1xC,GAFa,IAGhBiiC,aAGJ+Z,GAAY,SAAAtK,GAAQ,kCACbA,GADa,IAEhBqK,aACAD,MAAO,CACHjhD,UACA6G,KAAMgjB,UAAgB,CAAED,KAAM5pB,IAAW8pB,aAE7C3Y,mBAGJ4X,GAAW,GAhDe,6EAmD0D3jB,EAAS,GAAD,OACjFkM,GADiF,oBAClD0vC,EADkD,YAChCjqC,EADgC,oBACbvF,IApDrD,oBAmDd6L,EAnDc,EAmDdA,QAAS6jC,EAnDK,EAmDLA,WAAY3nB,EAnDP,EAmDOA,YAAa6N,EAnDpB,EAmDoBA,MAAOtgC,EAnD3B,EAmD2BA,KAAMm6C,EAnDjC,EAmDiCA,MAAO3gD,EAnDxC,EAmDwCA,QAGzD+c,EAtDiB,uBAsDF,IAAIle,MAAMmB,GAtDR,WAwDhBslC,EAAiB50B,EAASlB,MAAK,qBAAGvH,KAAgBiJ,KAxDlC,uBAyDK,IAAIrS,MAAM,iCAzDf,QA2DdgS,EAAgBy0B,EAAhBz0B,YACRgwC,GAAY,SAAAtK,GAAQ,kCACbA,GADa,IAEhBqK,aACA3nB,cACA6N,QACAtgC,OACAm6C,MAAO,CACHjhD,QAASihD,EACTp6C,KAAMgjB,UAAgB,CAAED,KAAMq3B,IAASn3B,aAE3C3Y,mBAGJ4X,GAAW,GAzEW,mDA2EtBvoB,QAAQlB,MAAR,MACA2P,EAAS,sBAAD,OAAuB,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IA5EpC,kEA+E/B,CAAC2P,EAAU8H,EAASiqC,EAAgBxvC,IAIvC,OAFArJ,qBAAU,kBAAMs5C,OAAiB,CAACA,KAG9B,sBAAKl5C,GAAG,cAAR,UACI,sBAAK3B,UAAU,QAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UAAyBiwC,EAASqK,WAAlC,KAAkDnqC,KAClD,sBAAKnQ,UAAU,WAAf,+BACsB,mBAAGA,UAAU,UAAU4sB,KAAI,UAAKqjB,EAAS1lC,YAAd,oBAAqC6vC,GAAkB72C,OAAO,SAASspB,IAAI,aAAtG,SAAqHutB,UAI3Il4B,EACI,cAAC,EAAD,IAEA,sBAAKliB,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAQI,MAAO,CAACC,gBAAgB,OAAD,OAAS65C,GAAUjK,EAASzP,OAA5B,MAA9C,SACOyP,EAASzP,MAA6B,KAArB,cAAC,IAAD,MAExB,sBAAKxgC,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACMiwC,EAAS/vC,OAEf,qBAAKF,UAAU,cAAf,SACMiwC,EAAStd,iBAGnB,sBAAK3yB,UAAU,QAAf,mBAEI,oBAAGA,UAAU,UAAU4sB,KAAI,UAAKqjB,EAAS1lC,YAAd,oBAAqC0lC,EAASoK,MAAMjhD,SAAWmK,OAAO,SAASspB,IAAI,aAA9G,UACI,qBAAK7sB,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS4vC,EAASoK,MAAMp6C,KAAxB,QAEzCgwC,EAASoK,MAAMjhD,UAAYwqC,EACvB,yCAAaqM,EAASoK,MAAMjhD,QAA5B,OAEA62C,EAASoK,MAAMjhD,oBAQ/C,sBAAK4G,UAAU,QAAf,UACI,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,UAAf,UACI,sBAAK2B,GAAG,oBAAR,UACI,cAAC,GAAD,CAAWE,YAAY,oBAAoBC,MAAO04C,EAAkBz4C,QAAS,SAACD,GAAD,OAAW24C,EAAoB34C,MAC5G,cAAC,EAAD,CACInJ,UAAWA,EAAUmH,QAAO,SAAAuJ,GAAC,OAAIA,EAAEjQ,UAAYwqC,KAC/CrjC,WAAYA,EACZX,cAAeA,EACfY,WAAYA,EACZC,QAAS,kBAAMoqC,EAAc,OAC7BlrC,gBAAiB,SAAAvG,GAAO,OAAIqhD,EAAoBrhD,SAGtD2xC,GAAkBrxC,SACf,sBAAKsG,UAAU,mBAAf,UAAkC,cAAC,IAAD,CAAOoE,KAAM,KAA/C,OAA2D2mC,GAAkBrxC,WAElF,qBAAKsG,UAAU,cACf,cAAC,EAAD,CACI5G,QAASohD,EACT13C,gBAAiB,kBAAM+nC,EAAc2P,IACrC94C,SAAU,SAACI,GAAD,OAAW4oC,EAAoB5oC,IACzCiB,eAAgBA,IAEpB,cAAC,EAAD,CAAQ9C,KAAM,cAAC,IAAD,IAAkBiC,SAAUw4C,EAAoBv6C,QAlLvD,WACnB,IACI+2B,EAAW,CACPv1B,GAAG,gBAAD,OAAkBkK,KAAKC,OACzB/H,KAAM,sBACNxI,QAASm3B,EAAgBn3B,QACzBsB,QAAS+mC,EACTtoC,IAAK,CACDqR,GAAIytC,EACJt4C,MAAO,IACPqC,KAAM8L,GAAOoH,mBAAmB,eAAgB,CAAC44B,EAASoK,MAAMjhD,QAASohD,EAAkBrqC,OAGrG,MAAMuE,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,UAAD,OAAWqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,MAmKtC,4BCvOd0iD,I,QAAU,mCAgEDC,GA7DC,WACZ,IAAMC,EAAcl6C,sBAAW,sBAAC,4BAAAnJ,EAAA,sEACLuG,EAAS,GAAD,OAAI48C,GAAJ,sBADH,UACtB38C,EADsB,gDAEN,MAFM,gCAGrBA,EAAS+X,QAHY,2CAI7B,IAEG+kC,EAAkBn6C,sBAAW,uCAAC,WAAOnH,EAAM0S,GAAb,eAAA1U,EAAA,sEACTuG,EAAS,GAAD,OAAI48C,GAAJ,kDAAqDnhD,EAArD,sBAAuE0S,IADtE,UAC1BlO,EAD0B,gDAEV,MAFU,gCAGzBA,EAAS+X,OAAOrd,KAAI,qBAAG2T,UAHE,2CAAD,wDAIhC,IAEG0uC,EAAgBp6C,sBAAW,uCAAC,WAAOnH,EAAM0S,GAAb,eAAA1U,EAAA,sEACPuG,EAAS,GAAD,OAAI48C,GAAJ,gDAAmDnhD,EAAnD,sBAAqE0S,IADtE,UACxBlO,EADwB,gDAER,MAFQ,gCAGvBA,EAAS+X,OAAOrd,KAAI,qBAAG2T,UAHA,2CAAD,wDAI9B,IAEG2uC,EAAcr6C,sBAAW,uCAAC,WAAOs6C,EAAWC,EAAaC,EAAShpC,EAAWxD,EAAQysC,GAA3D,6BAAA5jD,EAAA,6DAA2E2M,EAA3E,+BAAkF,gBAAlF,SACLpG,EAAS,GAAD,OAAI48C,GAAJ,4BAA+BM,EAA/B,wBAAwDC,EAAxD,oBAA+EC,EAA/E,sBAAoGhpC,EAApG,mBAAwHxD,EAAxH,2BAAiJysC,EAAjJ,iBAAwKj3C,IAD3K,UACtBnG,EADsB,gDAEN,MAFM,gCAGrBA,EAAS+X,QAHY,2CAAD,gEAI5B,IAEGslC,EAAyB16C,sBAAW,uCAAC,WAAO26C,EAAS1B,EAAO2B,EAAiB3R,GAAxC,eAAApyC,EAAA,sEAChBuG,EAAS,GAAD,OAAI48C,GAAJ,6CAAgDW,EAAhD,kBAAiE1B,EAAjE,4BAA0F2B,EAA1F,yBAA0H3R,IADlH,UACjC5rC,EADiC,gDAEjB,MAFiB,gCAGhCA,EAAS+X,QAHuB,2CAAD,4DAIvC,IAEGylC,EAAkB76C,sBAAW,uCAAC,WAAO26C,EAAS1B,EAAO2B,EAAiB3R,EAAcj7B,GAAtD,eAAAnX,EAAA,sEACTuG,EAAS,GAAD,OAAI48C,GAAJ,sCAAyCW,EAAzC,kBAA0D1B,EAA1D,4BAAmF2B,EAAnF,yBAAmH3R,EAAnH,mBAA0Ij7B,IADzI,UAC1B3Q,EAD0B,gDAEV,MAFU,gCAGzBA,EAAS+X,QAHgB,2CAAD,8DAIhC,IAEG0lC,EAAc96C,sBAAW,uCAAC,WAAOiK,EAAWqwC,EAAWC,EAAaC,EAAShpC,EAAWxD,EAAQ+sC,EAAQC,GAA9E,eAAAnkD,EAAA,sEACLuG,EAAS,GAAD,OAAI48C,GAAJ,oCAAuC/vC,EAAvC,sBAA8DqwC,EAA9D,wBAAuFC,EAAvF,oBAA8GC,EAA9G,sBAAmIhpC,EAAnI,mBAAuJxD,EAAvJ,mBAAwK+sC,EAAxK,wBAA8L9wC,EAA9L,sBAAqN+wC,IADxN,UACtB39C,EADsB,gDAEN,MAFM,gCAGrBA,EAAS+X,QAHY,2CAAD,oEAI5B,IAEG6lC,EAAgBj7C,sBAAW,uCAAC,WAAOk7C,EAAiBX,EAAa/oC,GAArC,eAAA3a,EAAA,sEACPuG,EAAS,GAAD,OA9ChB,8CA8CgB,+CAAyD89C,EAAzD,wBAAwFX,EAAxF,sBAAiH/oC,IADlH,UACxBnU,EADwB,gDAER,MAFQ,gCAGvBA,EAAS+X,QAHc,2CAAD,0DAI9B,IAEH,MAAO,CACH8kC,cACAE,gBACAD,kBACAE,cACAK,yBACAG,kBACAC,cACAG,kBCrDFE,I,QAAe,SAACntC,EAAQY,GAAT,OAAmBZ,EAAS/S,KAAKmgD,IAAI,GAAIxsC,EAAM8E,YAC9D2nC,GAAkB,SAACC,EAAK9zC,GAC1B,IAAMoH,EAAQ0sC,EAAItjD,UAAYwP,EAAMgzC,QAAQxiD,QAAUwP,EAAMgzC,QAAUhzC,EAAM8yC,UAC5E,OAAOa,GAAaG,EAAIttC,OAAQY,IAE9BsC,GAAa,SAAA3Q,GAAE,OAAIyI,EAASlB,MAAK,qBAAG3N,UAA0BoG,MA0LrDg7C,GAxLA,SAAC,GAA2F,IAAzFzlB,EAAwF,EAAxFA,WAAY8J,EAA4E,EAA5EA,gBAAiB4b,EAA2D,EAA3DA,gBAAiBC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,kBAAmBC,EAAe,EAAfA,SAC/E10C,EAAa6B,IAAb7B,SACR,EAAyCgzC,KAAjCY,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,YAEjBN,EAAYiB,EAAZjB,QACFF,EAAYkB,EAAgB1zC,MAAK,qBAAGpH,QAAsB+6C,EAAOnB,UAAUtiD,WAC3E4jD,EAAc1qC,GAAWuqC,EAAOnB,UAAUngD,SAC1C0hD,EAAY3qC,GAAWspC,EAAQrgD,SACrC,EAA0CmF,mBAAS,MAAnD,mBAAOw8C,EAAP,KAAsBC,EAAtB,KACA,EAA8Bz8C,oBAAS,GAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KAEMi7B,EAASP,EAAOO,OAAOjkD,KAAI,SAAAyP,GAC7B,IAAQq/B,EAAuCr/B,EAAvCq/B,KAAMoV,EAAiCz0C,EAAjCy0C,gBAAiBC,EAAgB10C,EAAhB00C,YAC/B,OAAO,2BACA10C,GADP,IAEI20C,cAAeF,EAAkBZ,GAAgBxU,EAAKsV,cAAeF,GAAmB,EACxFG,UAAWF,EAAcb,GAAgBxU,EAAKuV,UAAWF,GAAe,OAI1E71B,EAAS21B,EAAOjkD,KAAI,gBAAGijD,EAAH,EAAGA,UAAWmB,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,UAAWH,EAAxC,EAAwCA,gBAAiBC,EAAzD,EAAyDA,YAAzD,MAA4E,CAClGj6C,MACI,sBAAKrD,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,UAEQq9C,EACI,sBAAKr9C,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASg9C,EAAgBI,eAAex9C,KAAxC,QAC7C,qBAAKD,UAAU,OAAf,SAAwBq9C,EAAgBI,eAAelO,iBAG3D,KAER,sBAAKvvC,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASi9C,EAAYI,WAAWz9C,KAAhC,QAC7C,qBAAKD,UAAU,OAAf,SAAwBs9C,EAAYI,WAAWnO,oBAGvD,sBAAKvvC,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UAEQq9C,EACI,sBAAKr9C,UAAU,SAAf,UACMu8C,GAAac,EAAgBM,YAAaN,EAAgB3B,WADhE,IAC+E2B,EAAgB3B,UAAU1pC,UAGzG,KAER,sBAAKhS,UAAU,SAAf,UACMu8C,GAAae,EAAYM,aAAcN,EAAY1B,SADzD,IACsE0B,EAAY1B,QAAQ5pC,aAG9F,sBAAKhS,UAAU,OAAf,UAEQq9C,EACI,qBAAKr9C,UAAU,MAAf,SACMu9C,EAAgB,6CAASA,EAAT,IAA2BF,EAAgB3B,UAAU1pC,UAAc,OAGzF,KAER,qBAAKhS,UAAU,MAAf,SACMw9C,EAAY,6CAASA,EAAT,IAAuBF,EAAY1B,QAAQ5pC,UAAc,gBAK3FlQ,MAAOs6C,MAGLyB,EAAS,SAACl8C,EAAIpG,EAASoR,EAAIxI,GAA0B,IAApBrC,EAAmB,uDAAX,OAC3Co1B,EAAW,CACPv1B,KACApG,UACAsB,QAASmkC,EACTj9B,KAAM,sBACNzI,IAAK,CACDqR,KACAxI,OACArC,YAKNg8C,EAAS,uCAAG,4DAAA7lD,EAAA,yDACdkqB,GAAW,GADG,WAI+Ei7B,EAAOl0C,MAAK,qBAAGkzC,YAA8Bc,KAA9HlB,EAJE,EAIFA,gBAAiB+B,EAJf,EAIeA,mBAAoBV,EAJnC,EAImCA,gBAAiBC,EAJpD,EAIoDA,YAAalB,EAJjE,EAIiEA,UAE5DuB,EAAc,KACzBN,GACA3B,EAAY2B,EAAgB3B,UAC5BiC,EAAcN,EAAgBM,cAE9BjC,EAAY4B,EAAY5B,UACxBiC,EAAcL,EAAYK,aAGtB/B,EAAsC0B,EAAtC1B,QAASgC,EAA6BN,EAA7BM,aAAcF,EAAeJ,EAAfI,YAE3BK,EAjBM,iCAkBqB9B,EAAgBP,EAAUngD,QAASylC,EAAiBgb,EAAiBN,EAAUtiD,QAASukD,GAlB7G,gBAkBEhxC,EAlBF,EAkBEA,GAAIxI,EAlBN,EAkBMA,KACZ05C,EAAO,gCAAD,OAAiChyC,KAAKC,OAAS4vC,EAAUngD,QAASoR,EAAIxI,GAnBtE,yBAsBW+3C,EAAYlb,EAAiB0a,EAAUtiD,QAASsiD,EAAUngD,QAASqgD,EAAQxiD,QAASwiD,EAAQrgD,QAASoiD,EAAaC,EAAcxB,GAtB3I,iBAsBF4B,EAtBE,EAsBFA,GACRH,EAAO,4BAAD,OAA6BhyC,KAAKC,OAAS4vC,EAAUngD,QAASyiD,EAAGrxC,GAAIqxC,EAAG75C,KAAM65C,EAAGl8C,MAAM8V,KAEvFqmC,EAAqB,IAAIpyC,OAAgB,OAAV6xC,QAAU,IAAVA,OAAA,EAAAA,EAAYQ,cAAe,KAAqB,OAAfb,QAAe,IAAfA,OAAA,EAAAA,EAAiBa,cAAe,IAAIC,aAC1GrB,EAAkB,CACdsB,OAAQJ,EAAG75C,KACX85C,qBACAtxC,GAAI,CACApR,QAASqgD,EAAQrgD,QACjByU,MAAO4rC,EACPxsC,OAAQwuC,KAGhBb,IAnCU,kDAqCVnjD,QAAQlB,MAAR,MACA2P,EAAS,KAAE3O,SAAF,KAAgB,CAAEhB,OAAO,IAtCxB,QAyCdypB,GAAW,GAzCG,0DAAH,qDA4Cf,OACI,sBAAKxgB,GAAG,SAAR,UACI,sBAAKA,GAAG,UAAR,UACI,sBAAK3B,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS28C,EAAY/8C,KAArB,QAC7C,qBAAKD,UAAU,OAAf,SAAwBg9C,EAAY98C,UAExC,sBAAKF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASq7C,EAAUz7C,KAAnB,QAC7C,qBAAKD,UAAU,OAAf,SAAwB07C,EAAUr4C,cAG1C,cAAC,IAAD,IACA,sBAAKrD,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS48C,EAAUh9C,KAAnB,QAC7C,qBAAKD,UAAU,OAAf,SAAwBi9C,EAAU/8C,UAEtC,sBAAKF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAASu7C,EAAQ37C,KAAjB,QAC7C,sBAAKD,UAAU,OAAf,UAAwB47C,EAAQ17C,KAAhC,KAA0C07C,EAAQ5pC,OAAlD,gBAMR2lB,EACI,cAAC,EAAD,IAEA,sBAAKh2B,GAAG,SAAR,UACI,qBAAK3B,UAAU,QAAf,oBAEKynB,EAAOrvB,OAMJ,cAAC,GAAD,CAAQqvB,OAAQA,EAAQ/lB,SAAU,SAAAI,GAAK,OAAIq7C,EAAiBr7C,MAL5D,sBAAKH,GAAG,wBAAR,+EACsE,uBADtE,sDAUpB,qBAAK3B,UAAU,cAEf,sBAAK2B,GAAG,UAAR,UACI,cAAC,EAAD,CAAQM,OAAK,EAACD,OAAK,EAAC/B,KAAMm9C,EAAOhlD,OAAS,cAAC,IAAD,IAAoB,cAAC,IAAD,IAAuB8J,SAAUy1B,EAASx3B,QAAS48C,EAAjH,SAA6HK,EAAOhlD,OAAS,SAAW,YACtJglD,EAAOhlD,OACL,cAAC,EAAD,CAAQ6J,OAAK,EAAChC,KAAM,cAAC,IAAD,IAAmBiC,UAAWg7C,GAAiBvlB,EAASx3B,QAAS29C,EAArF,qBACF,YC7LZ5rC,I,QAAuB,IAAIjH,aAAUC,IAAKiH,cAC1CC,GAAsB,IAAInH,aAAUC,IAAKmH,YAEzCgsC,GAAe,SAAAjlD,GACjB,IAAMklD,EAAmBrrC,GAAyB7Z,GAClD,OAAOqJ,IAAO67C,IAAqBrqC,GAAYqqC,IAAqB,CAAC,UAAW,IAG9EC,GAAe,SAACnlD,EAASmC,GAC3B,IAAMqP,EAAUR,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAEhX,UAAYA,KACjD,OAAOqP,EAAO,iEAA6DA,EAAQjJ,GAArE,YAA2EsR,GAAyB7Z,GAApG,QAAqH,MAGjIolD,GAAW,SAAC7C,EAAa/oC,EAAWG,EAAYC,EAAa5D,GAC/D,IAAMssC,EAAY2C,GAAatrC,GACzB6oC,EAAUyC,GAAarrC,GACvByrC,EAAgBF,GAAaxrC,EAAY4oC,GACzC+C,EAAcH,GAAavrC,EAAa2oC,GAE9C,MAAO,CACH1hD,KAAM,CACFsB,QAASogD,EACT3rC,MAAO,CACH5W,QAAS2Z,EACTf,OAAQ0pC,EAAU,GAClB5mC,SAAU4mC,EAAU,GACpBz7C,KAAMw+C,GAEVrvC,OAAQA,EAAOnS,YAEnB0P,GAAI,CACApR,QAASqX,EAAU7D,WACnBiB,MAAO,CACH5W,QAAS4Z,EACThB,OAAQ4pC,EAAQ,GAChB9mC,SAAU8mC,EAAQ,GAClB37C,KAAMy+C,GAEVtvC,OAAQ,QAkBLuvC,IAbG,sBACbzsC,GAAqB5F,WAAW,uBAAwB,SAACxK,EAAOqC,EAAMqV,GACnE,MAAmEtH,GAAqB1F,iBAAiB,CAAErI,OAAMrC,UAASkC,KAAK,GAAvH0O,EAAR,EAAQA,qBAAsBtD,EAA9B,EAA8BA,OAAQuD,EAAtC,EAAsCA,cAAeC,EAArD,EAAqDA,UACrD,OAAO4rC,GAAShlC,EAAeje,QAASqX,EAAWF,EAAsBC,EAAevD,MAH9E,gBAKbgD,GAAoB9F,WAAW,uBAAwB,SAACxK,EAAOqC,EAAMqV,GAClE,MAAgEpH,GAAoB5F,iBAAiB,CAAErI,OAAMrC,UAASkC,KAAK,GAAnH6O,EAAR,EAAQA,kBAAmBzD,EAA3B,EAA2BA,OAAQ0D,EAAnC,EAAmCA,cAAeF,EAAlD,EAAkDA,UAC1CG,EAAeF,EAAfE,WACYC,EAAgBF,EAA5BC,WACR,OAAOyrC,GAAShlC,EAAeje,QAASqX,EAAWG,EAAYC,EAAa5D,MATlE,ICgJHwvC,GArLC,SAAC,GAAuD,IAArDvxB,EAAoD,EAApDA,WAAYziB,EAAwC,EAAxCA,QAAS/N,EAA+B,EAA/BA,QAASgiD,EAAsB,EAAtBA,gBACrCx2C,EAAa6B,IAAb7B,SACAg0C,EAAkBhB,KAAlBgB,cAER,EAAoC37C,mBAAS,IAA7C,mBAAOo+C,EAAP,KAAmBC,EAAnB,KACA,EAA8Br+C,oBAAS,GAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KACA,EAAoCzhB,oBAAS,kBAAMmL,KAAKC,SAAxD,mBAAOwpC,EAAP,KAAmBzC,EAAnB,KACMr5B,EAAiB1S,iBAAO8D,EAAQjJ,IAEhCq9C,EAAoB,SAAAzjD,GAAO,OAAI6O,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAEhX,UAAYA,MAChEghD,EAAe,SAACntC,EAAQY,GAAT,OAAmBZ,EAAS/S,KAAKmgD,IAAI,GAAIxsC,EAAM8E,WAIpEvT,qBAAU,WACDsK,KAAKC,MAAQwpC,EAAc,KAAMzC,EAAchnC,KAAKC,OACzD,IAAMypC,EAAQv6C,YAAW,kBAAM63C,EAAchnC,KAAKC,SAAQ,KAC1D,OAAO,kBAAM1Q,aAAam6C,MAC3B,CAACD,IAEJ,IAIA,EAA2ErzB,GAJ/DoL,EAAU,UACbA,EADa,qBACUxwB,EADV,YACqB+N,EAAQjJ,GAD7B,oCAC2D2zC,GAC3E,MAEQ2J,EAAd,EAAQ96C,KAA2BrF,EAAnC,EAAmCA,OAAmBogD,EAAtD,EAA2Ch9B,UAGrCi9B,EAAch8C,mBAAQ,WACxB,OAAIyH,EAAQjJ,KAAO6X,EAAenT,QAAgB,IAE7B44C,GAAuBA,EAAoB1rC,KAAO0rC,EAAoB1rC,KAAO,IAC9Epa,KAAI,YAAqB,IAAlBu/C,EAAiB,EAAjBA,KACjB0G,EADkC,EAAX7rC,KACGpa,KAAI,YAAsB,IAAD,mBAAjB2I,EAAiB,KAAVqC,EAAU,KAC/C8J,EAAU9J,EAAK+J,MAAM,EAAG,IACxBmxC,EAA0BV,GAAa1wC,GAC7C,OAAIoxC,EAAgC,aAChCjB,OAAQj6C,GACLk7C,EAAwBv9C,EAAOqC,EAAMyG,IAErC,QACR9K,QAAO,SAAAyW,GAAI,OAAIA,KAElB,OAAO6oC,EAAmBhnD,OAAnB,aACHuE,KAAM+7C,GACH0G,EAAmB,IACtB,QACLt/C,QAAO,SAAAk+C,GAAE,OAAIA,OACjB,CAACiB,EAAqBr0C,IA2DzB,OAzDArJ,qBAAU,WAAM,4CACZ,4BAAAtJ,EAAA,sEAC2B2C,QAAQ6Y,IAAI0rC,EAAYhmD,IAAZ,uCAAgB,6CAAAlB,EAAA,6DAAS0E,EAAT,EAASA,KAAMyhD,EAAf,EAAeA,OAAQnkD,EAAvB,EAAuBA,KAAM0S,EAA7B,EAA6BA,GACtE2yC,EAAcT,EAAgB31C,MAAK,SAAAq2C,GAAC,OAAIA,EAAEnB,SAAWA,KACrDH,EAAqBqB,GAAcA,EAAYrB,oBAA6B,KAC5EjB,EAAcgC,EAAkB/kD,EAAKsB,SACrC0hD,EAAY+B,EAAkBryC,EAAGpR,SAJQ,kBAOtB8gD,EAAc1/C,EAAM1C,EAAKsB,QAASoR,EAAGpR,SAPf,cAOrCmD,EAPqC,oDASpCA,GAToC,IAUvCzE,OACA0S,GAAI2yC,EAAcA,EAAY3yC,IAAM,KAAOA,EAC3CsxC,qBACAjB,cACAC,YACAuC,YAAuC,cAA1B9gD,EAAO+gD,gBAAiE,cAA/B/gD,EAAOghD,wBAftB,yCAkB3C9lD,QAAQlB,MAAR,MACA2P,EAAS,wDAAyD,CAAE3P,OAAO,IAnBhC,kBAoBpC,CACHinD,SAAUhjD,EACV1C,OACA0S,KACAsxC,qBACAjB,cACAC,YACA2C,aAAa,IA3B0B,0DAAhB,wDADvC,UACUC,EADV,OAiCQj1C,EAAQjJ,KAAO6X,EAAenT,QAjCtC,iDAkCI04C,EAAcc,GAlClB,2CADY,yBAAC,WAAD,wBAsCZC,KACD,CAACX,EAAaN,EAAiBj0C,EAASyxC,EAAeh0C,IAE1D9G,qBAAU,WACDzC,IACLlF,QAAQlB,MAAMoG,GACduJ,EAAS,wBAAD,OAAyBvJ,GAAU,CAAEpG,OAAO,OACrD,CAACoG,EAAQuJ,IAEZ9G,qBAAU,WACN4gB,EAAW+8B,IAAqBJ,EAAW1mD,UAC5C,CAAC8mD,EAAkBJ,IAEtBv9C,qBAAU,WACNiY,EAAenT,QAAUuE,EAAQjJ,GACjCo9C,EAAc,IACdlM,EAAchnC,KAAKC,SACpB,CAAClB,IAGA,sBAAKjJ,GAAG,UAAU3B,UAAU,QAA5B,UACI,qBAAKA,UAAU,QAAf,qBAGA,8BAEQ23B,EACI,cAAC,EAAD,IAECmnB,EAAW1mD,OAGR0mD,EAAW3lD,KAAI,wBAAGwmD,EAAH,EAAGA,SAAU3C,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,UAAWhjD,EAArC,EAAqCA,KAAM0S,EAA3C,EAA2CA,GAAIsxC,EAA/C,EAA+CA,mBAAoBuB,EAAnE,EAAmEA,UAAWI,EAA9E,EAA8EA,YAA9E,OACX,sBAAK5/C,UAAU,YAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS28C,EAAY/8C,KAArB,QAC7C,qBAAKD,UAAU,OAAf,SAAwBg9C,EAAY98C,UAExC,sBAAKF,UAAU,SAAf,UACM/F,EAAKmV,OAASmtC,EAAatiD,EAAKmV,OAAQnV,EAAK+V,OAAS,GACxD,sBAAKhQ,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,cAASpG,QAAT,IAASA,GAAT,UAASA,EAAM+V,aAAf,aAAS,EAAa/P,KAAtB,QAC7C,qBAAKD,UAAU,OAAf,gBAAwB/F,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAM+V,aAA9B,aAAwB,EAAagC,kBAIjD,cAAC,IAAD,IACA,sBAAKhS,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,OAAS48C,EAAUh9C,KAAnB,QAC7C,qBAAKD,UAAU,OAAf,SAAwBi9C,EAAU/8C,UAGtC,sBAAKF,UAAU,SAAf,UACM2M,EAAGyC,OAASmtC,EAAa5vC,EAAGyC,OAAQzC,EAAGqD,OAAS,GAClD,sBAAKhQ,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOI,MAAO,CAACC,gBAAgB,OAAD,cAASsM,QAAT,IAASA,GAAT,UAASA,EAAIqD,aAAb,aAAS,EAAW/P,KAApB,QAC7C,qBAAKD,UAAU,OAAf,gBAAwB2M,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAIqD,aAA5B,aAAwB,EAAWgC,qBAKnD,sBAAKhS,UAAU,UAAf,UACI,oBAAG4sB,KAAI,UAAKowB,EAAYzyC,YAAjB,eAAmCo1C,GAAYp8C,OAAO,SAASspB,IAAI,aAA1E,oCAA8G,cAAC,KAAD,OAE1G+yB,EACI,sBAAK5/C,UAAU,eAAf,UACI,cAAC,IAAD,IADJ,4BAKAw/C,EACI,sBAAKx/C,UAAU,iBAAf,UACI,cAAC,EAAD,IADJ,UAGI,mDAAuBi+C,GAAsB,GAA7C,kBAGJ,sBAAKj+C,UAAU,mBAAf,UACI,cAAC,IAAD,IADJ,oBA/CY2/C,MAHpC,kFCsIbI,GAxPI,SAAC,GAAqE,IAAnE7oB,EAAkE,EAAlEA,WAAY8J,EAAsD,EAAtDA,gBAAiBlI,EAAqC,EAArCA,UAAWluB,EAA0B,EAA1BA,QAASyiB,EAAiB,EAAjBA,WAC3DhlB,EAAa6B,IAAb7B,SACR,EAAqEgzC,KAA7DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,gBAAiBE,EAAtC,EAAsCA,YAAaD,EAAnD,EAAmDA,cAEnD,EAAgC96C,oBAAS,GAAzC,mBAAOwB,EAAP,KAAiBgwB,EAAjB,KACA,EAA8BxxB,oBAAS,GAAvC,mBAAOi3B,EAAP,KAAgBxV,EAAhB,KACA,EAAkDzhB,oBAAS,GAA3D,mBAAOs/C,EAAP,KAA0BC,EAA1B,KACA,EAA8Cv/C,oBAAS,GAAvD,mBAAOw/C,EAAP,KAAwBC,EAAxB,KACA,EAA0Cz/C,oBAAS,GAAnD,mBAAO0/C,EAAP,KAAsBC,EAAtB,KAEA,EAA6C3/C,mBAAS,IAAtD,mBAAOk8C,EAAP,KAAwB0D,EAAxB,KACA,EAAkC5/C,mBAAS,MAA3C,mBAAOsL,EAAP,KAAkBu0C,EAAlB,KACA,EAA4B7/C,mBAAS,GAArC,mBAAO0O,GAAP,KAAem7B,GAAf,KACA,GAAsC7pC,mBAAS,IAA/C,qBAAO8/C,GAAP,MAAoBC,GAApB,MACA,GAA8B//C,mBAAS,MAAvC,qBAAOggD,GAAP,MAAgBC,GAAhB,MACA,GAAwCjgD,mBAAS,IAAjD,qBAAOkgD,GAAP,MAAqBC,GAArB,MACA,GAA8BngD,mBAAS,MAAvC,qBAAOuL,GAAP,MAAgB60C,GAAhB,MACA,GAA4BpgD,mBAAS,MAArC,qBAAOm8C,GAAP,MAAekE,GAAf,MACMC,GAAkBl6C,iBAAO,IAC/B,GAA8Cmf,GAAgB,CAAEpL,IAAK,kBAAmBC,aAAc,KAAtG,qBAAO+jC,GAAP,MAAwBoC,GAAxB,MAEMC,GAAY/9C,mBAAQ,kBAAMyH,EAAQrP,UAAS,CAACqP,EAAQrP,UACpD4lD,KAAiBn1C,GAAaC,IAAWi1C,IAAaR,IAAWtxC,GAAS,GAC1EgyC,IAActoB,EAAUliB,QAAQuD,MAAMC,KACtCinC,GAAyBjgD,uBAAY,SAAAipC,GAAY,OAAIvR,EAAUr2B,OAChEtJ,KAAI,SAAA2T,GAAK,kCACHA,GADG,IAEN1T,QAAmC,IAA1BoZ,OAAO1F,EAAM1T,SAAb,YAAmC,IAAI8a,OAAO,KAAQpH,EAAM1T,aAExE8P,MAAK,qBAAG9P,UAA0BixC,OAAe,CAACvR,EAAUr2B,SAE3D6+C,GAAalgD,sBAAW,sBAAC,gCAAAnJ,EAAA,+EAEFqjD,IAFE,UAEjBiG,EAFiB,OAGjBC,EAAcD,EAAOr4C,MAAK,qBAAG3N,UAA0B2lD,MAC7DhvB,GAAasvB,GACRA,EALkB,wDAOjBhB,EAAce,EACfzhD,QAAO,gBAAGvE,EAAH,EAAGA,QAAH,OAAiBA,IAAY2lD,IAAa92C,EAASjR,KAAI,qBAAGoC,WAAuBqH,SAASrH,MACjGpC,KAAI,gBAAG8G,EAAH,EAAGA,KAAM1E,EAAT,EAASA,QAAT,MAA8B,CAC/B0E,OACAoD,MAFC,EAAkBnD,KAGnB4B,MAAOvG,MAEfklD,GAAeD,GACfG,GAAWH,EAAY,GAAG1+C,OAfH,mBAgBhB,GAhBgB,yCAkBvBlI,QAAQlB,MAAR,MACA2P,EAAS,+BAAD,OAAgC,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IAnB5C,mBAoBhB,GApBgB,0DAsB5B,CAACwoD,GAAW5F,EAAajzC,IAEtBo5C,GAAiBrgD,sBAAW,sBAAC,kCAAAnJ,EAAA,yDAC1BipD,IAAcR,GADY,0EAIFnF,EAAgB2F,GAAWR,IAJzB,cAIrBgB,EAJqB,OAKrBC,EAAqBD,EAAW5hD,QAAO,qBAAGI,QAC1C0hD,EANqB,YAOpB,IAAI7oC,IAAI2oC,EACN5hD,QAAO,gBAAG1G,EAAH,EAAGA,QAAH,OAAiB4nD,GAAgB36C,QACpClN,KAAI,qBAAGC,WACPD,KAAI,SAAAC,GAAO,OAAwB,IAApBoZ,OAAOpZ,GAAP,YAA6B,IAAI8a,OAAO,KAAQ9a,KAASwJ,SAASxJ,MACrFD,KAAI,qBAAGC,aAIVwjD,EAAkBgF,EACnBzoD,KAAI,SAAAC,GAAO,OAAIuoD,EAAmBz4C,MAAK,SAAA4D,GAAK,OAAIA,EAAM1T,UAAYA,QAClE0G,QAAO,SAAAgN,GAAK,OAAIA,KAChB3T,KAAI,gBAAG8G,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAM8R,EAAf,EAAeA,OAAQ5Y,EAAvB,EAAuBA,QAAvB,MAAsC,CACvC6G,OACAoD,MAAM,GAAD,OAAKnD,EAAL,aAAc8R,EAAd,KACLlQ,MAAO1I,EACP4Y,aAERsuC,EAAkB1D,GAxBS,mBAyBpB,GAzBoB,yCA2B3BhjD,QAAQlB,MAAR,MACA2P,EAAS,oCAAD,OAAqC,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IA5B7C,mBA6BpB,GA7BoB,0DA+BhC,CAACwoD,GAAWR,GAASnF,EAAiBlzC,IAEnCw5C,GAAezgD,sBAAW,sBAAC,kCAAAnJ,EAAA,yDACxBipD,IAAcR,GADU,0EAIFlF,EAAc0F,GAAWR,IAJvB,cAInBoB,EAJmB,OAKnBC,EAAmBD,EAAShiD,QAAO,qBAAGI,QACtC4uC,EANmB,YAMQ,IAAI/1B,IAAI+oC,EAAS3oD,KAAI,qBAAGC,aACnD4oD,EAAalT,EACd31C,KAAI,SAAAC,GAAO,OAAI2oD,EAAiB74C,MAAK,SAAA4D,GAAK,OAAIA,EAAM1T,UAAYA,QAChE0G,QAAO,SAAAgN,GAAK,OAAIA,KAChB3T,KAAI,gBAAG8G,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAM8R,EAAf,EAAeA,OAAQ5Y,EAAvB,EAAuBA,QAAvB,MAAsC,CACvC6G,OACAoD,MAAM,GAAD,OAAKnD,EAAL,aAAc8R,EAAd,KACLlQ,MAAO1I,EACP4Y,aAEHpN,MAAK,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAEoL,MAAMq8B,cAAc76B,EAAExB,UAC5Cw9C,GAAgBmB,GAjBS,mBAkBlB,GAlBkB,yCAoBzBpoD,QAAQlB,MAAR,MACA2P,EAAS,kCAAD,OAAmC,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IArB7C,mBAsBlB,GAtBkB,0DAwB9B,CAACwoD,GAAWR,GAASlF,EAAenzC,IAEjC8iC,GAAYhoC,mBAAQ,WACtB,IACI,IAAM4tC,EAAiBsQ,GAAuBr1C,GAC9C,IAAK+kC,EAAgB,OAAO,EAC5B,IAAQj6B,EAAyBi6B,EAAzBj6B,WAAYhC,EAAai8B,EAAbj8B,SACpB,OAAOY,UAAOC,MAAMZ,YAAY+B,EAAYhC,GAC9C,MAAMJ,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAAS,iCAAD,OAAkCqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,OAE1E,CAAC2oD,GAAwBr1C,EAAW3D,IAEjC45C,GAAS,uCAAG,kCAAAhqD,EAAA,yDACdooD,GAAiB,GADH,SAIJtP,EAAiBsQ,GAAuBr1C,GAJpC,wDAMF8I,EAAai8B,EAAbj8B,SACFotC,EAAa3W,sBAAWn8B,GAAQ0F,GAAU7X,WAPtC,SAQWw+C,EAAYzvC,EAAWk1C,GAAWj1C,GAASy0C,GAASwB,EAAY,CAAC,SAAU,sBARtF,OAQJrF,EARI,OASVkE,GAAUlE,GATA,kDAWVjjD,QAAQlB,MAAR,MACA2P,EAAS,+BAAD,OAAgC,KAAE3O,SAAF,MAAkB,CAAEhB,OAAO,IAZzD,QAed2nD,GAAiB,GAfH,0DAAH,qDAuBf9+C,qBAAU,kBAAMgpC,GAAU,KAAI,CAACv+B,IAC/BzK,qBAAU,WACN,IAAM4gD,EAAgBvF,EAAgB1zC,MAAK,qBAAGpH,QAAsBkK,KACpE,GAAKm2C,EAAL,CACA,IAAMC,EAAkBxB,GAAa13C,MAAK,qBAAG8I,SAAwBmwC,EAAcnwC,UAC/EowC,GAAiBtB,GAAWsB,EAAgBtgD,UACjD,CAAC86C,EAAiBgE,GAAc50C,IAEnC,IAAMq2C,GAAS,uCAAG,WAAOC,EAAiBC,GAAxB,eAAAtqD,EAAA,6DACdqqD,GAAgB,GADF,SAEOC,IAFP,OAERC,EAFQ,OAGdF,GAAiBE,GAHH,2CAAH,wDAMfjhD,qBAAU,WACDm/C,IACL2B,GAAUlC,EAAoB0B,MAC/B,CAACnB,GAASmB,KAEbtgD,qBAAU,WACDm/C,IACL2B,GAAUpC,EAAsBwB,MACjC,CAACf,GAASe,KAEblgD,qBAAU,WACD2/C,KAAapoB,EAAUnf,mBAC5BonC,GAAU,MACVsB,GAAUlgC,EAAYm/B,OACvB,CAACJ,GAAWpoB,EAAUnf,iBAAkB2nC,KAE3C//C,qBAAU,kBAAMy/C,GAAgB36C,QAAUyyB,EAAUr2B,SAAQ,CAACq2B,EAAUr2B,SAEvE,IAAMspC,GAAc,sBAAK/rC,UAAU,eAAf,+BAAgD,+BAAQmrC,QAE5E,OACI,sBAAKxpC,GAAG,cAAR,UACI,sBAAK3B,UAAU,QAAf,UACI,sBAAKA,UAAU,QAAf,wCAEI,qBAAK2B,GAAG,UAAR,gCAKAO,EACI,qBAAKlC,UAAU,cAAf,2CAEA23B,GAAWmB,EAAUnf,iBACjB,cAAC,EAAD,IAEAynC,GACI,cAAC,GAAD,IAECpB,GAAsBE,GAAoBtD,EAAgBxkD,OAGvDgoD,EACQ,cAAC,EAAD,IAEAvD,GACI,cAAC,GAAD,CACI3lB,WAAYA,EACZ8J,gBAAiBA,EACjB4b,gBAAiBA,EACjBC,OAAQA,GACRC,kBAtEtB,SAAA2F,GACtB,IAAMC,EAAsB,sBAAO7D,IAAP,CAAwB4D,IACpDxB,GAAmByB,IAqEyB3F,SAAU,kBAAMgE,GAAU,SAG9B,sBAAK/gD,UAAU,OAAf,UACI,yCACA,sBAAKA,UAAU,SAAf,UACMggD,EAAoB,cAAC,EAAD,IAAa,KACnC,cAAC,GAAD,CAAQ13B,YAAU,EAACxN,aAAc9O,EAAWnM,MAAO+8C,EAAiBl7C,SAAU,SAAAI,GAAK,OAAIy+C,EAAaz+C,MACpG,cAAC,GAAD,CAAa+qC,IAAI,IAAIxpC,MAAO0oC,GAAajqC,MAAOsN,GAAQrN,QAAS,SAAAD,GAAK,OAAIyoC,GAAUzoC,IAAQ+nB,OAAO,MAAMX,cAAe,kBAAMqhB,GAAUY,UAE5I,qBAAKnrC,UAAU,YAAf,SACI,cAAC,IAAD,MAEJ,uCACA,sBAAKA,UAAU,SAAf,UACMkgD,EAAkB,cAAC,EAAD,IAAa,KACjC,cAAC,GAAD,CAAQ53B,YAAU,EAACxN,aAAc4lC,GAAS7gD,MAAO2gD,GAAa9+C,SAAU,SAAAI,GAAK,OAAI6+C,GAAW7+C,MAC5F,cAAC,GAAD,CAAQwmB,YAAU,EAACxN,aAAc7O,GAASpM,MAAO+gD,GAAcl/C,SAAU,SAAAI,GAAK,OAAIg/C,GAAWh/C,SAEjG,cAAC,EAAD,CAAQI,SAAUi/C,GAAchhD,QAAS8hD,GAAzC,2BA/BhB,qBAAKjiD,UAAU,cAAf,4DAmCxB,cAAC,GAAD,CACI4K,QAASA,EACT/N,QAASmkC,EACT6d,gBAAiBA,GACjBxxB,WAAYA,QCtPbs1B,GAXU,CACrB,qBACA,mBACA,sBACA,wBACA,8BACA,kBACA,8BACA,iCCaW,SAAS5tB,GAAOlvB,GAC7B,IAAQqf,EAAcG,KAAdH,UACR,EAAwFQ,KAAhFG,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,qBAAsBJ,EAAlD,EAAkDA,qBAAsBO,EAAxE,EAAwEA,YAChExB,EAAaH,wBAAbG,SACFk+B,EAAkB97C,mBAElB+7C,EAAa1/C,mBAAQ,kBAAM0C,EAAM3M,SAASd,OAAS,IAAG,CAACyN,EAAM3M,WACnE,EAAgD+sB,GAAgB,CAAEpL,IAAK,oBAAqBC,aAAc,KAA1G,mBAAO0e,EAAP,KAAyBspB,EAAzB,KAEM1F,EAAS,CACb,CACE9/C,KAAM,qBACNylD,UAAW,cAAC,GAAD,CACTjqB,UAAWjzB,EAAMizB,UACjBpG,gBAAiB7sB,EAAM+E,QACvBo2B,gBAAiBn7B,EAAM+9B,YACvBrlB,WAAY1Y,EAAM0Y,WAClB0iB,YAAap7B,EAAMo7B,eAGvB,CACE3jC,KAAM,WACNylD,UAAW,cAAC,GAAD,CAASnf,YAAa/9B,EAAM+9B,YAAalR,gBAAiB7sB,EAAM+E,QAAQjJ,MAErF,CACErE,KAAM,mCACNylD,UAAW,cAAC,GAAD,CACTjqB,UAAWjzB,EAAMizB,UACjB8K,YAAa/9B,EAAM+9B,YACnBlR,gBAAe,eAAM7sB,EAAM+E,SAC3BssB,WAAYrxB,EAAMqxB,WAClBh+B,SAAU2M,EAAM3M,SAChBixC,YAAatkC,EAAMskC,eAGvB,CACE7sC,KAAM,eACNylD,UAAW,cAAC,GAAD,CACT7rB,WAAYrxB,EAAMqxB,WAClB8J,gBAAiBn7B,EAAM+9B,YACvB9K,UAAWjzB,EAAMizB,UACjBluB,QAAS/E,EAAM+E,QACfyiB,WAAYxnB,EAAMwnB,cAGtB,CACE/vB,KAAM,QACNylD,UAAW,cAAC,GAAD,CAAMjqB,UAAWjzB,EAAMizB,UAAWpG,gBAAe,eAAO7sB,EAAM+E,SAAWg5B,YAAa/9B,EAAM+9B,YAAa1M,WAAYrxB,EAAMqxB,cAExI,CACE55B,KAAM,YACNylD,UAAW,cAAC,GAAD,CACT11B,WAAYxnB,EAAMwnB,WAClBuW,YAAa/9B,EAAM+9B,YACnBlR,gBAAiB7sB,EAAM+E,QACvB1R,SAAU2M,EAAM3M,SAChBg+B,WAAYrxB,EAAMqxB,WAClBjD,aAAcpuB,EAAMouB,aACpB3G,aAAcznB,EAAMynB,gBAGxB,CACEhwB,KAAM,uBACNylD,UAAW,cAAC,GAAD,CAAc11B,WAAYxnB,EAAMwnB,WAAYuW,YAAa/9B,EAAM+9B,YAAalR,gBAAiB7sB,EAAM+E,QAASssB,WAAYrxB,EAAMqxB,WAAY/S,iBAAkBte,EAAMse,iBAAkB8P,aAAcpuB,EAAMouB,gBAErN,CACE32B,KAAM,QACNylD,UAAW,cAAC,GAAD,CACT/Z,cAAenjC,EAAMmjC,cACrBC,iBAAkBpjC,EAAMojC,iBACxBrF,YAAa/9B,EAAM+9B,YACnBh5B,QAAS/E,EAAM+E,WAGnB,CACEtN,KAAM,yCACNylD,UAAW,cAAC,GAAD,CACTnf,YAAa/9B,EAAM+9B,YACnBlR,gBAAe,eAAM7sB,EAAM+E,SAC3BssB,WAAYrxB,EAAMqxB,WAClBh+B,SAAU2M,EAAM3M,SAChBixC,YAAatkC,EAAMskC,eAGvB,CACE7sC,KAAM,kBACNylD,UAAW,cAAC,GAAD,CACT/Z,cAAenjC,EAAMmjC,cACrBC,iBAAkBpjC,EAAMojC,iBACxBrF,YAAa/9B,EAAM+9B,YACnBh5B,QAAS/E,EAAM+E,YAKfo4C,EAAgB,kBACnBH,EAA6C,KAAhC,cAAC,WAAD,CAAUl2C,GAAG,kBAGvBs2C,EAAyB7hD,sBAAW,sBAAC,wCAAAnJ,EAAA,yDACnC4E,EAAUgJ,EAAM3M,SAASgQ,MAAK,qBAAGvH,KAAgBkE,EAAM+9B,eADpB,iDAInCtU,EAJmC,UAIXzpB,EAAMwnB,WAJK,qBAIkBxwB,EAAQ8E,IAE7DquB,EAAwBrK,KACtBrI,OAAgBuI,IAAwBE,GAC1Cm9B,EAAyBlzB,IAA0B9J,EACnDi9B,IAAqBtmD,EAAQqzB,kBAC7BkzB,EAA0BvmD,EAAQ6vB,aAElC22B,EAAmB,cAAC,GAAD,CACvB/zB,mBAAoBA,EACpBzyB,QAASA,EACTywB,aAAcznB,EAAMynB,aACpBjG,iBAAkB+7B,EAClB7zB,gBAAiB6zB,KAGfD,GAAoBD,GAA0BE,IAAyBl+B,EAAUm+B,EAAkB,CAAEl+B,cAAc,IApB9E,4CAqBxC,CAACtf,EAAM3M,SAAU2M,EAAMwnB,WAAYxnB,EAAMynB,aAAcznB,EAAM+9B,YAAaje,EAAsBE,EAAoBE,EAAsBG,EAAahB,IAgB1J,OAdA3jB,qBAAU,kBAAM0hD,MAA0B,CAACA,IAE3C1hD,qBAAU,WACR,IAAM+hD,EAAgBtoD,YAAW,kBAAM4nD,EAAgBv8C,SAAWu8C,EAAgBv8C,QAAQk9C,SAAS,CAAE34B,IAAK,EAAG44B,SAAU,aAAa,GACpI,OAAO,kBAAMpoD,aAAakoD,MACzB,CAAC5+B,IAEJnjB,qBAAU,WACR,IAAMkiD,EAAc59C,EAAM+Y,YACvB9e,QAAO,gBAAG+e,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,EAAQqB,UAAYyiC,GAAiB//C,SAASic,EAAQqB,SAASjiB,OAASu7B,EAAiB52B,SAASic,EAAQqB,SAASjiB,QAErJwlD,EAAYrrD,QAAQ8sB,EAAU,cAAC,GAAD,CAAuBtG,YAAa6kC,EAAariC,WAAYvb,EAAMub,WAAYoY,iBAAkBA,EAAkBC,WAAYqpB,OAChK,CAACj9C,EAAM+Y,YAAa/Y,EAAMub,WAAY8D,EAAWsU,EAAkBspB,IAGpE,sBAAKnhD,GAAG,SAAR,UACE,cAAC,GAAD,CAASuiC,MAAOr+B,EAAMq+B,MAAOpL,UAAWjzB,EAAMizB,UAAW/Q,iBAAkBliB,EAAMo7B,YAAYlZ,mBAC7F,cAAC,GAAD,eAAYliB,IAEZ,qBAAKlE,GAAG,mBAAmBmE,IAAK88C,EAAhC,SACE,qBAAKjhD,GAAG,yBAAR,SACE,eAAC,SAAD,WAEIy7C,EAAOjkD,KAAI,gBAAGmE,EAAH,EAAGA,KAAMylD,EAAT,EAASA,UAAT,OACT,eAAC,QAAD,CAAOW,OAAK,EAACpmD,KAAMuI,EAAMq+B,MAAMjmC,IAAMX,EAArC,UACE,cAAC0lD,EAAD,IACED,GAAwB,OAFoBzlD,MAMpD,cAAC,QAAD,CAAOA,KAAMuI,EAAMq+B,MAAMjmC,IAAM,KAA/B,SACE,cAAC,WAAD,CAAU0O,GAAI9G,EAAMq+B,MAAMjmC,IAAM,iBAElC,cAAC,QAAD,CAAOX,KAAMuI,EAAMq+B,MAAMjmC,IAAzB,SACE,cAAC+kD,EAAD,gB,iCCzKVW,GAAU,GAKP,SAASC,GAAT,GAAiE,IAA5Cn1B,EAA2C,EAA3CA,OAAQ5L,EAAmC,EAAnCA,YAAatnB,EAAsB,EAAtBA,QAAWgR,EAAW,uDAAJ,GAC3D5K,EAAE,UAAM8sB,EAAOr1B,SAAWq1B,EAAOgF,KAA/B,OAAqCl4B,GAC7C,OAAIooD,GAAQhiD,GAAYgiD,GAAQhiD,GACzBgiD,GAAQhiD,GAAMkiD,GAAa,CAAEp1B,SAAQ5L,cAAatnB,WAAWgR,GAGtE,SAASs3C,GAAT,EAAwDt3C,GAAO,IAAvChR,EAAsC,EAAtCA,QAASkzB,EAA6B,EAA7BA,OAAQ5L,EAAqB,EAArBA,YACvC,GAAIA,GAAoC,WAArBA,EAAY9e,KAAmB,CAChD,IAAM+/C,EAAiB,IAAIpnB,qBAAkB,CAC3CC,uBAAwBC,KACxBxoB,UAAW7Y,IAIb,OAFAuoD,EAAehnB,uBAoCnB,SAAkCja,GAChC,MAAO,CACL/oB,MAAOjC,KAAOksD,gBAAgBlhC,EAAY0G,KAAKzvB,MAAMkqD,MACrD1pD,eAAgBuoB,EAAY0G,KAAKjvB,eACjCC,mBAAoBsoB,EAAY0G,KAAKhvB,oBAxCG0pD,CAAyBphC,GAE1D,CACLsS,YAAa,SAAAx4B,GAAI,OAAImnD,EAAeI,yBAAyBxuC,UAAOC,MAAMG,QAAQnZ,GAAO8xB,EAAOr1B,UAChG2C,gBAAiB,SAAA6C,GAAM,OAAIklD,EAAeK,qBAAf,2BAAyCvlD,GAAzC,IAAiD3E,KAAMw0B,EAAOr1B,aAEtF,GAAIypB,GAAoC,WAArBA,EAAY9e,KAAmB,CACvD,GAAsC,WAAlC8e,EAAY0a,kBACd,MAAO,CACLpI,YAAa,SAAAx4B,GAAI,OAAID,aAAkBgZ,UAAOC,MAAMG,QAAQnZ,GAAO8xB,EAAOr1B,UAC1E2C,gBAAiB,SAAA6C,GAAM,OAAIvD,aAAsBuD,EAAQrD,KAG3D,IAAM2b,EAAW,IAAIgmB,qBAAkB,CACrC9oB,UAAW7Y,EACX4hC,iCAAkCC,2CAClC7iC,mBAAoBsoB,EAAY0G,KAAKhvB,qBAEvC,MAAO,CACL46B,YAAa,SAAAx4B,GAAI,OAAIua,EAASgtC,yBAAyBxuC,UAAOC,MAAMG,QAAQnZ,GAAO8xB,EAAOr1B,UAC1F2C,gBAAiB,SAAA6C,GAAM,OAAIsY,EAASitC,qBAAT,2BAAmCvlD,GAAnC,IAA2C3E,KAAMw0B,EAAOr1B,aAGlF,GAAIq1B,EAAOr1B,QAAS,CACzB,IAAK0Q,OAAOsH,SAAU,MAAM,IAAI7Y,MAAM,8GAItC,OADiB,IAAImd,UAAOH,UAAU6uC,aAAat6C,OAAOsH,SAAU,OACpDizC,UAAU51B,EAAOr1B,SAC5B,MAAIq1B,EAAOgF,IACV,IAAIl7B,MAAM,wGAEV,IAAIA,MAAM,uB,QClDb,SAAS+rD,GAAiBx3C,EAAOy3C,EAAOC,GAC7C,IAAK13C,EAAO,OAAO,EACnB,IAAM+/B,EAAM//B,EAAM23C,SAAWD,EAAWE,SAASH,GAASC,EAAWG,YAAYJ,GACjF,OAAOpoD,SAAS2Q,EAAM8J,SAAWva,KAAKmgD,IAAI,GAAI1vC,EAAMgI,UAAY+3B,EAI3D,SAAS+X,GAA2B93C,EAAO03C,GAEhD,IAAKA,EAAWE,SAAU,MAAO,CAAEpuB,WAAY,EAAGuuB,SAAU,GAE5D,IAAMA,EAAY/3C,EAAM1T,SAA6B,+CAAlB0T,EAAM1T,QAdnB,IACC,KAgBvB,MAAO,CAELk9B,WAAY7wB,aAAa++C,EAAW9oD,SAAWmpD,GAAYL,EAAW9oD,UAAUgK,QAAQ,IACxFm/C,YAIJ,IAAMC,GAAiB,CAAC,uBAAwB,uBAAwB,yBAA0B,uBAA+B,oBAAgC,0BAE1J,SAASC,GAAaC,GAC3B,GAAKA,EACL,OAAIA,EAAIpiD,SAAS,mBAA2B,eACxCoiD,EAAIpiD,SAAS,sCAA8C,0DAC3DoiD,EAAIpiD,SAAS,0BAAkC,yCAC/CkiD,GAAe57C,MAAK,SAAA+7C,GAAW,OAAID,EAAIpiD,SAASqiD,MAAsB,4CACnED,EAGF,SAASE,GAAWF,GACzB,GAAKA,EACL,OAAIA,EAAIpiD,SAAS,mBAA2B,gCACxCoiD,EAAIpiD,SAAS,sCAA8C,uEAC3DoiD,EAAIpiD,SAAS,0BAAkC,uEAC/CkiD,GAAe57C,MAAK,SAAA+7C,GAAW,OAAID,EAAIpiD,SAASqiD,MAAsB,gJACnE,sFCrCT,IAAME,GAAS,CAAC,OAAQ,SAAU,OAAQ,OAInC,SAASC,GAAT,GAAwG,IAAD,IAA/EljD,EAA+E,EAA/EA,SAAUusB,EAAqE,EAArEA,OAAQ+1B,EAA6D,EAA7DA,WAAY55C,EAAiD,EAAjDA,QAASy6C,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC3F,EAA0C7kD,oBAAS,GAAnD,mBAAO8kD,EAAP,KAAsBC,EAAtB,KAEA,IAAKjB,EAAY,OAAQ,cAAC,EAAD,IAIzB,IAAMkB,EAAkBlB,GAAcA,EAAWE,WAC3CJ,GAAgBE,EAAWmB,iBAAkBL,EAAUd,GAC7D,GAAIA,IAAeA,EAAW/tC,QAAS,OAAQ,cAACmvC,GAAD,CAC7ClsD,QAAS,2GAAsEqrD,GAAaP,EAAW9qD,YACvGmsD,QAASX,GAAWV,EAAW9qD,WAGjC,IAAK8qD,EAAWG,YAAa,OAAQ,6BACrC,GAAIH,IAAeA,EAAWE,UAAYF,EAAW9oD,SAAW,IAC9D,OAAQ,gCACN,yCADM,kJACwJ,4BAAI+yB,EAAOr1B,UADnK,wBACqMwR,EAAQN,kBAD7M,aAIV,GAAIk6C,GAAcA,EAAWE,WAAaF,EAAWsB,0BACnD,OAAQ,qBAAK9lD,UAAU,gBAAf,yHAGV,IAAQsK,EAAsBM,EAAtBN,kBACF7H,EAAS+hD,EAAWsB,2BAA6B,CAAC,CAAE9zC,OAAQ1H,EAAmBwK,SAAU,KAMzFixC,EAAkBtjD,EACrB3C,QAAO,SAAAgN,GAAK,OAAIw3C,GAAgBx3C,EAAOw4C,EAAUd,MACjDrrD,KAAI,gBAAGC,EAAH,EAAGA,QAAS4Y,EAAZ,EAAYA,OAAZ,MAA0B,CAC7B/R,KAAM7G,EAAO,UApCW,yDAoCX,YAAiCwR,EAAQjJ,GAAzC,YAA+CvI,EAAQ0C,cAAvD,QAA6E,KAC1FuH,MAAO2O,EACPlQ,MAAO1I,GAAW4Y,MAGhBg0C,EAAoBxB,EAAWE,SAAY,mCAC/C,sBAAK1kD,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,0BACA,cAAC,GAAD,CACEkC,SAAUA,EACV4Y,cAAc,UAAA0pC,EAAWmB,wBAAX,eAA6BvsD,WAA7B,UAAwCorD,EAAWmB,wBAAnD,aAAwC,EAA6B3zC,QACnFnS,MAAOkmD,EACPrkD,SApBsB,SAAAI,GAC1B,IAAMgL,EAAQrK,EAAOyG,MAAK,gBAAG9P,EAAH,EAAGA,QAAS4Y,EAAZ,EAAYA,OAAZ,OAAyB5Y,IAAY0I,GAASkQ,IAAWlQ,KACnFujD,EAAc,2BAAKb,GAAN,IAAkBmB,iBAAkB74C,aAqB3C,6BAEFm5C,EAAuB/jD,GAAYwjD,EACjCjB,EAAaD,EAAWmB,iBAAxBlB,SACAnuB,EAAesuB,GAA0BJ,EAAWmB,iBAAkBnB,GAAtEluB,WAEF4vB,EAAe,SAAApkD,GAAK,OAAIujD,GAAc,SAAAc,GAAc,kCACrDA,GADqD,IAExDC,UAAWtkD,QASPukD,EAAqBlB,GAAOhsD,KAAI,SAAAorD,GAAK,OACzC,sBAEEvkD,UAAS,mBAAewkD,EAAW4B,WAAad,IAAaf,EAAsB,GAAd,aAA5D,OAA+E0B,EAAuB,YAAc,IAC7H9lD,QAAS,kBAAO8lD,GAVG,SAAA1B,GACrBgB,EAAYhB,GACZ2B,EAAa,MACbT,GAAiB,GAOyBa,CAAe/B,IAHzD,UAKE,qBAAKvkD,UAAU,QAAf,SAAwBukD,IACxB,qBAAKvkD,UAAU,gBAAf,SACGykD,EACG,IAAKD,EAAWE,SAASH,GAASjuB,EAEZ,QAAtBhsB,EACE,UAAMk6C,EAAWG,YAAYJ,GAASjuB,EACnCkuB,EAAWG,YAAYJ,GAASjuB,EAAY,IAAIhsB,MAXtDi6C,MAkBT,OAAQ,qCACLmB,EACE,sBAAK1lD,UAAU,gBAAf,8CAAgE,uBAAhE,qBAAwFwkD,EAAWsB,2BAA6B,IAAI3sD,KAAI,SAAAkQ,GAAC,OAAIA,EAAE2I,UAAQP,KAAK,SAC3Ju0C,EAEJ,sBAAKhmD,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,+BACA,qBAAK2B,GAAG,eAAR,SAAwB0kD,IAErBb,EAKC,sBAAK7jD,GAAG,sBAAR,UACE,qBAAK3B,UAAU,QAAf,wBACA,cAAC,GAAD,CACEiC,OAAK,EACLJ,YAAY,eACZ7B,UAAS,UAAKwkD,EAAW4B,UAAY,WAAa,IAClD1kD,SAAU,SAAAI,GAAK,OAAIokD,EAAapkD,SAVpC,sBAAKH,GAAG,kBAAkBxB,QAAS,kBAAMslD,GAAiB,IAA1D,UACE,cAAC,IAAD,IADF,kBAgBLhB,GAAa,sBAAKzkD,UAAU,wBAAf,mBACJwkD,EAAW4B,WAAa5B,EAAWG,YAAYW,IAAahvB,EAAY,IAAIhsB,EADxE,aAECk6C,EAAW4B,WAAa5B,EAAWG,YAAYW,IAAahvB,EAAakuB,EAAW+B,uBAAuB7gD,QAAQ,GAFpH,OAIZ8+C,EAAWE,SAER,6BADF,iCAAM,yCAAN,qCAAwDp6C,EAAxD,yFAAgK,4BAAImkB,EAAOr1B,UAA3K,UAKF,SAASwsD,GAAT,GAAiD,IAA1BlsD,EAAyB,EAAzBA,QAAyB,IAAhBmsD,eAAgB,MAAN,GAAM,EACnD,OAAQ,qBAAK7lD,UAAU,aAAf,SACN,eAAC,GAAD,CAASqD,MAAOwiD,EAAhB,UACE,sBAAK7lD,UAAU,cAAf,UAA6B,cAAC,IAAD,IAA7B,cACA,qBAAKA,UAAU,gBAAf,SAAgCtG,SCrIzB,SAAS8sD,GAAT,GAAiG,IAA9EhC,EAA6E,EAA7EA,WAAYc,EAAiE,EAAjEA,SAAUmB,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,cAC5F,EAAsDlmD,mBAAS,CAAEqQ,KAAM,GAAI+a,WAAY,KAAvF,mBAAO+6B,EAAP,KAA4BC,EAA5B,KAEAvlD,qBAAU,kBAAOqlD,GAAiBE,GAAuB,SAAApiB,GAAI,kCAAUA,GAAV,IAAgB3zB,KAAM,UAAQ,CAAC61C,IAE5F,IAAMG,EAAOjgD,iBAAO,MAEdkgD,EAAeN,GAGnB,cAAC,EAAD,CAAQ7iD,QAAM,EAAC5D,KAAM,cAAC,IAAD,IAAmB8D,KAAK,SAAS/D,UAAU,YAAYG,QAASumD,EAArF,oBAEIhB,EAAkBlB,GAAcA,EAAWE,WAC3CJ,GAAgBE,EAAWmB,iBAAkBL,EAAUd,GAE7D,GADkBA,IAAeA,EAAW/tC,SAAYivC,EAEtD,OAAQ,qBAAK1lD,UAAU,UAAf,SACLgnD,IAIL,IAAMC,EAAkBL,GAAiBA,EAAch7B,WACrD,qCAAE,cAAC,EAAD,IAAF,gBACE,qCAAE,cAAC,IAAD,IAAF,mBAEEs7B,EAAiBN,GAAiBA,EAAcO,aAAeP,EAAcO,YAAYpzB,aAC/F,OAAI6yB,GAAiBA,EAAcQ,SACzB,qCAEJR,EAAcvS,iBACZ,sBAAKr0C,UAAU,yBAAf,UACE,sBAAKA,UAAU,+BAAf,UAA8C,cAAC,IAAD,IAA9C,kBACA,sBAAKA,UAAU,iCAAf,UACsC,QAAnC4mD,EAAcvS,iBAA6B,qFAAqD,KAC7D,UAAnCuS,EAAcvS,iBACZ6S,EACG,6HACA,6HACI,WAKd,KAGJ,uBAAMphD,IAAKihD,EAAM/mD,UAAU,sBAAsBgtB,SAAU,SAAAtY,GAAOA,EAAEuY,kBAApE,UACE,sBAAKjtB,UAAU,mBAAf,UACE,cAAC,GAAD,CACEiC,OAAK,EACLunB,UAAQ,EACRxjB,UAAQ,EACRqjB,UAAW,EACXxnB,YAAY,WACZC,MAAO+kD,EAAoB/6B,WAC3B1rB,MAAO8mD,EAAiB,CAAEG,WAAY,UAAa,GACnDnlD,SAAUglD,EACVxlD,SAAU,SAAAI,GAAK,OAAIglD,EAAuB,2BAAKD,GAAN,IAA2B/6B,WAAYhqB,QAGlF,cAAC,GAAD,CACEG,OAAK,EACLmnB,QAAQ,SACR5nB,MAAM,uCACNI,aAAa,OACboE,UAAQ,EAACqjB,UAAW,EAAGC,UAAW,EAClCznB,YAAgD,QAAnC+kD,EAAcvS,iBAA6B,yBAA2B,oBACnFvyC,MAAO+kD,EAAoB91C,KAC3BrP,SAAU,SAAAI,GAAK,OAAIglD,EAAuB,2BAAKD,GAAN,IAA2B91C,KAAMjP,WAG9E,sBAAK9B,UAAU,UAAf,UACE,cAAC,EAAD,CACEgC,OAAK,EACLE,SAAU0kD,GAAiBA,EAAch7B,WACzC3rB,KAAM,cAAC,IAAD,IACN8D,KAAK,SACL/D,UAAU,gBACVG,QAASwmD,EANX,oBAUA,cAAC,EAAD,CACE3mD,UAAU,iBACVG,QAAS,WACF4mD,EAAK1gD,QAAQihD,iBAClBb,EAAW,CAAEI,yBAJjB,SAOID,GAAiBA,EAAch7B,WAAa,cAAC,EAAD,IAAa,qCAAE,cAAC,IAAD,IAAF,yBAO7D,sBAAK5rB,UAAU,UAAf,UACHgnD,EACD,cAAC,EAAD,CAAQhnD,UAAU,aAAakC,UAAWsiD,GAAcoC,EAAezmD,QAASsmD,EAAhF,SACGQ,OCvGT,IAAMM,GAAoB,IAAIt8C,aAAUrT,EAAQ,MAC1C4vD,GAAmB,IAAIv8C,aAAUrT,EAAQ,OAExC,SAAe6vD,GAAtB,mC,8CAAO,2DAAAxvD,EAAA,yDAAgCkvD,EAAhC,EAAgCA,YAAatqD,EAA7C,EAA6CA,QAAS+N,EAAtD,EAAsDA,QAASqqB,EAA/D,EAA+DA,OAAQuvB,EAAvE,EAAuEA,WAAYc,EAAnF,EAAmFA,SAAUpuC,EAA7F,EAA6FA,WACxFuX,EAAW04B,EAAX14B,QAGGtvB,gBAJR,sBAI+B,IAAI5G,MAAM,yDAJzC,uBAWsB2e,EAASwwC,QAAQP,EAAY72B,UAAU/2B,MAAK,SAAAwX,GAAI,MAAa,OAATA,KAX1E,mCAeDrV,EAAW8oD,EAAW9oD,SAAW,IACjCiR,EAAKw6C,EAAY72B,SACjBnsB,EAAOojD,GAAkBlwC,mBAAmB,kBAAmB,CAAC8vC,EAAY5zC,OAjB3E,yCAmBK4zC,EAAYQ,SAASzwC,GAnB1B,eAqBDiwC,EAAYzrD,SAAW,IArBtB,UAsBKyrD,EAAYS,KAAK3yB,GAtBtB,eAuBDtoB,EAAK9P,EAAQoC,oBACbkF,EAAOqjD,GAAiBnwC,mBAAmB,mBAAoB,CAACxa,EAAQyxB,SAAUzxB,EAAQmC,KAAMmoD,EAAY5zC,KAAM4zC,EAAYU,YAxB7H,UAyBiB3wC,EAAS4wC,YAAY,CAAEn7C,KAAIxI,OAAMlK,KAAMw0B,EAAOr1B,UAzB/D,oBAyB2E2V,WAA5ErT,EAzBC,KAyBwF,IAzBxF,oBA6BK+yB,EAAOr1B,QA7BZ,KA8BDuT,EA9BC,KA8BGxI,EA9BH,KA+BI2R,mBAAQpa,GA/BZ,KAgCSoa,mBAAQzZ,KAAKC,MAAMkoD,EAAWG,YAAYW,GAAYd,EAAW9oD,SAAW,OAhCrF,KAiCMoa,WAjCN,UAiCoBoB,EAAS6wC,oBAAoBt5B,EAAOr1B,SAjCxD,2CA4BGkC,EA5BH,CA6BDrB,KA7BC,KA8BD0S,GA9BC,KA8BGxI,KA9BH,KA+BDxI,IA/BC,KAgCDqsD,SAhCC,KAiCD1O,MAjCC,gBAqCIrkB,EAAOgzB,gBArCX,kCAuCsBhzB,EAAOl5B,gBAAgBT,GAvC7C,eAuCO4sD,EAvCP,iBAwCehxC,EAAS+wC,gBAAgBC,GAxCxC,QAwCCxP,EAxCD,OAwCiD/7C,KAxCjD,yCA4C2Bs4B,EAAO/d,SAAS5E,aA5C3C,oBA4CS/W,EA5CT,EA4CSA,QACJqP,EAAQrP,UAAYA,EA7CzB,uBA6CwC,IAAIhD,MAAJ,2DAA8DqS,EAAQ1K,OA7C9G,yBA8Ce+0B,EAAOgzB,gBAAgB,CAAEhuD,KAAMqB,EAAIrB,KAAM0S,GAAIrR,EAAIqR,GAAIxI,KAAM7I,EAAI6I,KAAM6jD,SAAU1sD,EAAI0sD,SAAU1O,MAAOh+C,EAAIg+C,QA9CvH,QA8CCZ,EA9CD,OA8CiI/7C,KA9CjI,iCAgDM,CAAE8Z,SAAS,EAAMiiC,SAhDvB,sCAkDc,uBAAX,KAAE3nC,KAlDL,uBAkD0C,IAAIxY,MAAJ,kDAAqDqS,EAAQN,kBAA7D,eAAqFmkB,EAAOr1B,UAlDtI,+E,sBCqBP,IAAM6V,GAAQ,IAAIhE,aAAUrT,EAAQ,KAK9BuwD,GAAa,mCAcnB,SAASC,GAAgB1zC,GACvB,OAAIA,GAAmB,aAAdA,EAAEhb,QACF,wHACEgb,GAAmB,yBAAdA,EAAEhb,QACT,2EACEgb,GAAmB,sBAAdA,EAAEhb,QACT,mGAEAgb,EAAEhb,SAAWgb,EAIT,SAAS2zC,GAAT,GAAiJ,IAAtHh7B,EAAqH,EAArHA,WAAYn0B,EAAyG,EAAzGA,SAAU0R,EAA+F,EAA/FA,QAASg5B,EAAsF,EAAtFA,YAAa7kB,EAAyE,EAAzEA,SAAU6C,EAA+D,EAA/DA,YAAa0mC,EAAkD,EAAlDA,kBAAmBC,EAA+B,EAA/BA,iBAAkBtR,EAAa,EAAbA,UAG1Ip6C,EAAU3D,EAASgQ,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOiiC,KAGtCzf,EAAmBhhB,mBAAQ,kBAAM4b,EACpCjf,QAAO,gBAAGiE,EAAH,EAAGA,KAAMxI,EAAT,EAASA,QAASsB,EAAlB,EAAkBA,QAASvB,EAA3B,EAA2BA,IAA3B,MACG,wBAATyI,GACGxI,IAAYqP,EAAQrP,SACpBsB,IAAY+mC,GACZtoC,KAASA,EAAIrB,MAAQqB,EAAIrB,KAAK6B,gBAAkB8nC,EAAY9nC,oBAG9D,CAACijB,EAAS5lB,KAAI,SAAAkQ,GAAC,OAAIA,EAAE1H,MAAI8P,KAAK,KAAM7G,EAAQrP,QAASqoC,IACpDhO,EAASzyB,mBACb,kBAAMmlD,GAxCV,SAAoBzrD,EAASuX,EAAW2K,GACtC,IAAM6W,EAAS,IAAI9B,UAAO,CACxBlpB,QAASwJ,EACTkc,SAAUzzB,EAAQ8E,GAClB4R,KAAMwL,EAAS5lB,KAAI,mBAAa0+C,GAAb,EAAGv8C,IAA2BuB,EAAQ8E,OACzD8sB,OAAQ5xB,EAAQ4xB,SAIlB,OAFAmH,EAAOqY,SAAWlvB,EAAS5lB,KAAI,SAAAkQ,GAAC,OAAIA,EAAE4kC,UAAY,KAAGxkC,QAAO,SAACxR,EAAG4M,GAAJ,OAAU5M,EAAI4M,IAAG,GAC7E+wB,EAAO4yB,WAAazpC,EAAS5lB,KAAI,SAAAkQ,GAAC,OAAIA,EAAE1H,MACjCi0B,EA+BsB6yB,CAAW5rD,EAAS+N,EAAQjJ,GAAIwiB,KAC3D,CAACmkC,EAAmB19C,EAAQjJ,GAAI9E,EAASsnB,IAG3C,OAAKtnB,GAAY+4B,EAAOriB,KAAKnb,OAGrB,cAACswD,GAAD,CACJr7B,WAAYA,EACZuI,OAAQA,EACRhrB,QAASA,EACT/N,QAASA,EACT+kB,YAAaA,EACb2mC,iBAAkBA,EAClBtR,UAAWA,IAV8B,qBAAKt1C,GAAG,kBAAR,SACzC,oBAAI3B,UAAU,QAAd,iFAaN,SAAS0oD,GAAT,GAAyH,IAAnF9yB,EAAkF,EAAlFA,OAAQhrB,EAA0E,EAA1EA,QAAS/N,EAAiE,EAAjEA,QAAS+kB,EAAwD,EAAxDA,YAAayL,EAA2C,EAA3CA,WAAYk7B,EAA+B,EAA/BA,iBAAkBtR,EAAa,EAAbA,UACzG,EAAoCv2C,mBAAS,MAA7C,mBAAO8jD,EAAP,KAAmBa,EAAnB,KACA,EAA0C3kD,oBAAS,GAAnD,mBAAOkmD,EAAP,KAAsB+B,EAAtB,KACA,EAAgCjoD,mBAlEZ,QAkEpB,mBAAO4kD,EAAP,KAAiBC,EAAjB,KACQl9C,EAAa6B,IAAb7B,SACR9G,qBAAU,WACHq0B,EAAOriB,KAAKnb,QACjBitD,EAAc,QACb,CAACzvB,EAAQyvB,IAGZ,IAAMuD,EAAgB9hD,iBAAO,MAC7B8hD,EAAcviD,QAAUuvB,EACxBr0B,qBAAU,WAER,IAAIqlD,GAEChxB,EAAOriB,KAAKnb,OAAjB,CAGA,IAAIywD,GAAY,EAGVC,EAAa,kBAAOz7B,EACtBuI,EAAOmzB,SAAS,CAAE17B,aAAYtvB,WAAOirD,YAAapzB,EAAO4jB,oBACzD5jB,EAAOqzB,kBAAkB,CAAE/xC,SAAU7B,GAAYzK,EAAQjJ,OAE1DpI,MAAK,SAAAirD,GACAqE,GAAajzB,IAAWgzB,EAAcviD,UAC1Cm+C,EAAWmB,iBAAmB,CAAE3zC,OAAQpH,EAAQN,mBAChD+6C,GAAc,SAAAc,GACZ,OAAIA,GAAkBA,EAAeC,UAAkBD,GACnD3B,EAAWsB,4BAEbtB,EAAWmB,iBACPQ,GACG7B,GAAgB6B,EAAeR,iBAAkBL,EAAUd,IAC3D2B,EAAeR,kBACfnB,EAAWsB,0BAA0B58C,MAAK,SAAA4D,GAAK,OAAIw3C,GAAgBx3C,EAAOw4C,EAAUd,OACtFA,EAAWsB,0BAA0B,IAErCtB,UAGV5rD,OAAM,SAAA8b,GACDm0C,IACJjvD,QAAQC,IAAI,mBAAoB6a,GAChCrM,EAAS,qBAAD,OAAsBqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,SAG7DowD,IACA,IAAMvT,EAAQv4B,YAAY8rC,EAjHF,MAmHxB,OAAO,WACLD,GAAY,EACZ5rC,cAAcs4B,OAEf,CAAC3f,EAAQyvB,EAAeC,EAAUj9C,EAAUuC,EAASyiB,EAAYu5B,IAEpE,IAAMsC,EAAiB9nD,uBAAY,WACjC,IAAKisB,EACH,OAAO,IAAIyG,UAAJ,2BACF8B,GADE,IAELl6B,SAAU8oD,EAAW9oD,YAKzB,IAAMytD,EAAW3E,EAAWmB,iBAC5B,EAAiCf,GAA0BuE,EAAU3E,GAA7DK,EAAR,EAAQA,SAAUvuB,EAAlB,EAAkBA,WACZ8yB,EAAc,SAAAC,GAAI,MAAI,KAAKhtD,KAAKitD,MAAMD,GAAMpsD,SAAS,KACrDssD,EAASJ,EAASn3C,SAAWpH,EAAQN,kBACvC,CAACvL,EAAeK,aAAcgqD,EAAY5E,EAAWG,YAAYW,GAAUhvB,EAAW,MAAO,MAC7F,CAAC6yB,EAAS/vD,QAAS,MAAO6V,GAAMoI,mBAAmB,WAAY,CAC/DtY,EAAeK,aACfgqD,GACGD,EAAS1E,SAAWD,EAAWE,SAASY,GAAYd,EAAWG,YAAYW,IAC1EhvB,EACAj6B,KAAKmgD,IAAI,GAAI2M,EAASr0C,cAG9B,OAAO,IAAIgf,UAAJ,2BACF8B,GADE,IAELriB,KAAK,GAAD,mBAAMqiB,EAAOriB,MAAb,CAAmBg2C,IACvB7tD,SAAU8oD,EAAW9oD,SAAWmpD,GAAYjvB,EAAOqY,UAAY,QAEhE,CAAC5gB,EAAYuI,EAAQ4uB,EAAYc,EAAU16C,EAAQN,oBAEhDk/C,EAAc,uCAAG,kCAAAvxD,EAAA,yDAChBusD,EADgB,sBACE,IAAIjsD,MAAM,sCADZ,UAGf4uD,EAAc+B,IACdhyC,EAAW7B,GAAYzK,EAAQjJ,IAC/B8sB,EAAS04B,EAAY14B,OAErBwG,EAAS2uB,GAAU,CACvBn1B,SACA5L,YAAahmB,EAAQgmB,YACrBtnB,QAASqP,EAAQrP,WAGf8xB,EAbiB,oBAiBc,kBAAtB85B,EAAY7N,MAjBJ,kCAiB8B6N,EAAYQ,SAASzwC,GAjBnD,yBAkBbiwC,EAAYS,KAAK3yB,GAlBJ,yBAmBNkyB,EAAYsC,OAAO,CAAEp8B,aAAYtvB,aAnB3B,0EAqBN0pD,GAAc,CACzBN,cAAatqD,UAAS+N,UAASqqB,SAAQuvB,aAAYc,WAAUpuC,aAtB5C,4CAAH,qDA2BdwyC,EAAsB,uCAAG,+CAAAzxD,EAAA,yDAAS4uD,EAAT,EAASA,oBACjCrC,EADwB,sBACN,IAAIjsD,MAAM,sCADJ,UAExB80B,EAFwB,sBAEN,IAAI90B,MAAM,2EAFJ,UAIvB4uD,EAAeP,GAAiBA,EAAcO,aAAgB+B,IAC9Dz6B,EAAS04B,EAAY14B,OAEM,kBAAtB04B,EAAY7N,MAPM,kCAQrB6N,EAAYQ,SAAStyC,GAAYzK,EAAQjJ,KARpB,yBAWmC3D,EAAU,GAAD,OACpEqvB,EADoE,uBAC3CuI,EAAOtF,SADoC,YACxB1lB,EAAQjJ,GADgB,SACL,CAChE8sB,SAAQlb,KAAM4zC,EAAY5zC,KAAM+lC,MAAO6N,EAAY7N,MAAO59C,SAAUyrD,EAAYzrD,SAChFqV,KAAM81C,GAAuBA,EAAoB91C,KAEjDgjB,aAAcozB,EAAYpzB,eAhBD,oBAWrB8zB,EAXqB,EAWrBA,UAAWpxC,EAXU,EAWVA,QAAS/c,EAXC,EAWDA,QAAS26C,EAXR,EAWQA,iBAQhC59B,EAnBwB,oBAoBtB/c,EApBsB,uBAoBP,IAAInB,MAAJ,kDApBO,YAqBvBmB,EAAQkJ,SAAS,6BArBM,wBAsBzByF,EAAS,0CAA2C,CAAE3P,OAAO,IAtBpC,iCAyBrB,IAAIH,MAAJ,+BAAkCmB,IAzBb,YA2BzB26C,EA3ByB,iBA4B3BsU,EAAiB,CAAEvB,UAAU,EAAMD,cAAa9S,qBA5BrB,2BA8BtBwT,EA9BsB,uBA8BL,IAAItvD,MAAJ,wDA9BK,WA+BtBsE,EAAQ2xB,iBA/Bc,uBA+BU,IAAIj2B,MAAJ,iFA/BV,WAgC3BowD,EAAiB,CAAEvB,UAAU,EAAMx7B,YAAY,IAC1Cu7B,EAAYpzB,aAjCU,kCAmCnB,IAAIn5B,SAAQ,SAAAC,GAAO,OAAIG,WAAWH,EAAS,MAnCxB,eAoCnB8uD,EAAM9C,EAAoB/6B,YAAc89B,MAAM,kBApC3B,UAqCJ70B,UAAOC,kBAAkB32B,KAAKqiB,MAAM7jB,EAAQ2xB,kBAAmBm7B,GArC3D,eAqCnB10B,EArCmB,iBAsCnBkyB,EAAYS,KAAK3yB,GAtCE,gCA0CzBkyB,EAAYU,UAAYA,EA1CC,eA4C3BV,EAAY0C,aAAehC,EA5CA,UA6CdV,EAAYsC,OAAO,CAAEp8B,aAAYtvB,aA7CnB,qFAAH,sDA+FtB2oD,EAAY9wB,EAAO4yB,YAAe,WACtCvR,IACAr1B,EAAYgU,EAAO4yB,WAAY,CAAE9uD,QAASyuD,MAGtC2B,EAAgB7mC,UAAgB,CAAED,KAAMnmB,EAAQ8E,KAAMuhB,YAE5D,OACE,sBAAKvhB,GAAG,kBAAR,UACE,qBAAKA,GAAG,WAAR,SACE,sBAAK3B,UAAU,UAAUG,QAAS82C,EAAlC,UACE,cAAC,IAAD,CAAe7yC,KAAM,KAAK,6CAI9B,sBAAKpE,UAAU,YAAf,UACE,sBAAK2B,GAAG,mBAAmB3B,UAAU,QAArC,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAf,UAAyB41B,EAAOriB,KAAKnb,OAArC,eAA2Dw9B,EAAOriB,KAAKnb,OAAS,EAAI,IAAM,GAA1F,gBAEF,sBAAK4H,UAAU,UAAf,UACE,qBAAKA,UAAS,4BAAuB41B,EAAO4yB,WAAa,GAAK,WAA9D,SACG5yB,EAAOriB,KAAKpa,KAAI,SAACmC,EAAK8B,GACrB,IAAM85C,EAAiBsN,IAAeA,EAAW/tC,SAAW+tC,EAAWuF,eAAiB3sD,EAElFyvC,EAAMxwC,KAAKC,MAAMuP,KAAKC,MAAQ,KACpC,OAAQ,cAAC,GAAD,CAGNH,OAAQkhC,EACRoK,UAAWrhB,EAAO4yB,YAAe,kBAAM5mC,EAAY,CAACgU,EAAO4yB,WAAWprD,IAAK,CAAE1D,QAASyuD,MACtF7sD,IAAKA,EAAKsP,QAASgrB,EAAOhrB,QAAS/N,QAAS+4B,EAAOtF,SACnD4mB,eAAgBA,EAChBE,iBAAkBwP,EAClBvP,oBAAqB,yEAPhB,sBAAI/7C,GAAJ,CAAS8B,IAAGqU,KAAK,WAa5B,qBAAKzR,UAAU,cAEf,qBAAKA,UAAU,mBAAf,SAEI41B,EAAO4yB,WACL,qCACE,8BAAG,cAAC,KAAD,CAAWpkD,KAAM,KAApB,gBACA,sKAGF,qCACE,sCACA,iGAOZ,sBAAKzC,GAAG,eAAe3B,UAAU,QAAjC,UACE,sBAAK2B,GAAG,oBAAR,UACE,sBAAK3B,UAAU,UAAU2B,GAAG,kBAA5B,UACE,qBAAK3B,UAAU,gBAAf,0BACA,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASypD,EAAT,QAC9C,qBAAK9pD,UAAU,UAAf,SAA2BnD,EAAQ8E,QAErC,sBAAK3B,UAAU,UAAf,eAEE,qBAAKA,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASuK,EAAQ3K,KAAjB,QAC9C,qBAAKD,UAAU,UAAf,SAA2B4K,EAAQ1K,gBAKzC,cAAC,GAAD,CACEgC,SAAU0kD,GAAiBA,EAAcO,eAAiB3C,IAAeA,EAAW/tC,SACpFgY,OAAQmH,EAAOnH,OACf+1B,WAAYA,EACZa,cAAeA,EACfz6C,QAASA,EACT06C,SAAUA,EACVC,YAAaA,OAKff,GAAcA,EAAW/tC,UAAqC,IAA1B+tC,EAAWwF,YAAwBp0B,EAAOl6B,SAC5E,sBAAKsE,UAAU,gBAAf,UACE,sBAAKA,UAAU,sBAAf,UAAqC,cAAC,IAAD,IAArC,UACA,sBAAKA,UAAU,wBAAf,yEAC+D,IAAQ41B,EAAOl6B,SAAW,KAAKgK,UAD9F,iHAMF,KAGJ,qBAAK/D,GAAG,oBAAR,SAEIi0B,EAAOnH,OAAOtvB,kBAAoBkuB,EAChC,cAACu4B,GAAD,CAAYlsD,QAAQ,+GAEpB,qBAAKsG,UAAU,UAAU2B,GAAG,UAA5B,SACE,cAAC6kD,GAAD,CACEhC,WAAYA,EACZiC,WA1JC,SAAC,GAA6B,IAA3BI,EAA0B,EAA1BA,oBACpB,IAAID,IAAiBA,EAAch7B,WAAnC,CACA+8B,EAAiB/B,GAAiB,CAAEh7B,YAAY,IAE5C/uB,EAAQgmB,aAA4C,WAA7BhmB,EAAQgmB,YAAY9e,MAC7CsE,EAAS,yDAA0D,CAAEhB,QAAS,MAGhF,IAAMmhD,EAAa5yB,EAAO4yB,YACA5yB,EAAOnH,OAAOtvB,gBACtCuqD,EAAuB,CAAE7C,wBACvB2C,KACcjwD,MAAK,SAAA0wD,GAEhBA,IAGLtB,EAAiB,SAGIsB,EAAaxzC,SAAWwzC,EAAavwD,SAAWuwD,EAAavwD,QAAQwqC,MAAM,kBAC5EskB,GAAY5mC,EAAY4mC,EAAY,CAAE/xC,QAASwzC,EAAaxzC,QAASD,OAAQyzC,EAAavR,KAAMh/C,QAASuwD,EAAavwD,UAEtIuwD,EAAaxzC,SACf8xC,EAAiB0B,EAAavR,MAC9BzB,KAEA5uC,EAAS,sBAAD,OAAuB+/C,GAAgB6B,IAAiB,CAAEvxD,OAAO,QAG5EE,OAAM,SAAA8b,GACLi0C,EAAiB,MACjB/uD,QAAQlB,MAAMgc,GACVA,GAAKA,EAAEhb,QAAQkJ,SAAS,oCAC1ByF,EAAS,0FAAD,OAA2FutB,EAAOnH,OAAOr1B,QAAzG,KAAqH,CAAEV,OAAO,IAC7Hgc,GAAKA,EAAEhb,QAAQkJ,SAAS,UAGjCyF,EAAS,2FAA4F,CAAE3P,OAAO,IAE9G2P,EAAS,kBAAD,OAAmB+/C,GAAgB1zC,IAAM,CAAEhc,OAAO,SAmH9CguD,UAAWA,EACXC,cAAe,kBAAMgC,EAAiB,OACtC/B,cAAeA,EACftB,SAAUA,iB,sBChZf,SAAS4E,GAAT,GAA6F,IAAD,EAApE9V,EAAoE,EAApEA,OAAQv5C,EAA4D,EAA5DA,QAASgC,EAAmD,EAAnDA,QAAS+hB,EAA0C,EAA1CA,YAAayO,EAA6B,EAA7BA,WAAY88B,EAAiB,EAAjBA,cAEhF9hD,EAAa6B,IAAb7B,SACR,EAAwC3H,mBAFZ,CAAE0pD,cAAc,EAAOt+B,WAAY,KAE/D,mBAAOu+B,EAAP,KAAqBC,EAArB,KACA,EAAgC5pD,oBAAS,GAAzC,mBAAOwhB,EAAP,KAAkBC,EAAlB,KAEMooC,EAAa3rC,EAAY1V,MAAK,qBAAGgV,MAAkBk2B,EAAOlzB,SAC1DspC,EAAOD,IAAuB,OAAVA,QAAU,IAAVA,GAAA,UAAAA,EAAY1rC,eAAZ,eAAqBqB,WAAmB,KAElE,IAAKk0B,IAAWv3C,EAAS,OAAQ,6BACjC,GAAIu3C,IAAWqW,uBAAYrW,EAAO94C,KAAM,OAAQ,sBAAKqG,GAAG,cAAR,UAC9C,oBAAI3B,UAAU,QAAd,kEACA,cAAC,EAAD,CAAQA,UAAU,SAASG,QAAS,kBAAMtF,EAAQ,CAAEnB,QAAS,sBAA7D,uBAGF,IAAMgxD,EAAmB,SAAAh2C,GACvB9a,QAAQlB,MAAM,gBAAiBgc,GAC3BA,GAAKA,EAAEhb,QAAQkJ,SAAS,oCAC1ByF,EAAS,0FAAD,OAA2FxL,EAAQ4xB,OAAOr1B,QAA1G,KAAsH,CAAEV,OAAO,IAEvI2P,EAAS,kBAAD,OAAmBqM,EAAEhb,SAAWgb,GAAK,CAAEhc,OAAO,KAGpDiyD,EAAe,uCAAG,WAAMC,GAAN,+BAAA3yD,EAAA,yDACjBo1B,EADiB,uBAEpBhlB,EAAS,iEAAkE,CAAE3P,OAAO,IAFhE,6BAKjB2xD,EAAav+B,WALI,uBAMpBzjB,EAAS,0CAA2C,CAAE3P,OAAO,IANzC,iCAStBypB,GAAW,GATW,SAWdxlB,EAAOi3B,qBAAUi3B,oBAASzW,EAAO94C,MAXnB,UAa4C0C,EAAS,UAEpEqvB,EAFoE,uBAE3CxwB,EAAQ8E,GAFmC,kBAEf,CACtDyyC,OAAQz3C,EACRoU,KAAM65C,IAjBU,oBAaZ/C,EAbY,EAaZA,UAAWpxC,EAbC,EAaDA,QAAS/c,EAbR,EAaQA,QAAS26C,EAbjB,EAaiBA,iBAOhC59B,EApBe,oBAqBb/c,EArBa,uBAqBE,IAAInB,MAAJ,kDArBF,eAsBdmB,EAAQkJ,SAAS,8BACnByF,EAAS,0CAA2C,CAAE3P,OAAO,IAE/D2P,EAAS,2BAAD,OAA4B3O,GAAW,CAAEhB,OAAO,IAzBtC,+BA4BhB27C,EA5BgB,oBA6BZyW,EAAW77B,OAAO,qGA7BN,uBA8BG,IAAI12B,MAAM,sCA9Bb,yBA+BZoyD,EAAgBG,GA/BJ,6CAmCfjuD,EAAQ2xB,iBAnCO,uBAmCiB,IAAIj2B,MAAJ,iFAnCjB,yBAoCCw8B,UAAOC,kBAAkB32B,KAAKqiB,MAAM7jB,EAAQ2xB,kBAAmB67B,EAAav+B,YApC7E,eAoCdmJ,EApCc,iBAqCF81B,uBAAY91B,EAAQp4B,EAAQ8E,GAAI9E,EAAQ4xB,OAAQo8B,oBAASluD,GAAOkrD,GArC9D,QAqCdzyB,EArCc,OAsCpBv6B,EAAQ,CAAE4b,SAAS,EAAMD,OAAQ4e,IACjC/sB,EAAS,wBAvCW,kDAwCTqiD,EAAiB,EAAD,IAxCP,QAyCtBvoC,GAAW,GAzCW,0DAAH,sDA4Cf6oC,EAAO,uCAAG,gCAAA/yD,EAAA,0DACV4E,EAAQ4xB,OAAOtvB,gBADL,gCAENwrD,IAFM,+CAMdxoC,GAAW,GANG,SAUN8S,EAAS2uB,GAAU,CACvBn1B,OAAQ5xB,EAAQ4xB,OAChB5L,YAAahmB,EAAQgmB,YACrBtnB,QAAS,IAKLoB,EAAOi3B,qBAAUi3B,oBAASzW,EAAO94C,MAlB3B,UAmBMyvD,uBAAY91B,EAAQp4B,EAAQ8E,GAAI9E,EAAQ4xB,OAAQo8B,oBAASluD,IAnB/D,QAmBNy4B,EAnBM,OAoBZv6B,EAAQ,CAAE4b,SAAS,EAAMD,OAAQ4e,IACjC/sB,EAAS,wBArBG,kDAsBDqiD,EAAiB,EAAD,IAtBf,QAuBdvoC,GAAW,GAvBG,0DAAH,qDA0Bb,OAAQ,sBAAKxgB,GAAG,cAAR,UACN,sBAAKA,GAAG,iBAAiB3B,UAAU,QAAnC,UACE,qBAAKA,UAAU,QAAf,kCAGA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAOm/B,IAAKlc,UAAgB,CAAED,KAAMnmB,EAAQ8E,KAAMuhB,YAAakc,IAAI,iBAChFviC,EAAQ8E,SAGd,sBAAK3B,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,0BAIA,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UAEIwqD,EACE,oBAAGxqD,UAAU,OAAO4sB,KAAM49B,EAAKvsD,IAAKsF,OAAO,SAASspB,IAAI,aAAxD,UACE,qBAAK7sB,UAAU,OAAOI,MAAO,CAAEC,gBAAgB,OAAD,OAASmqD,EAAK5wB,MAAM,GAApB,MAA9C,SACC,cAAC,IAAD,MAEC4wB,EAAKtqD,QAGT,UAVN,mCAcA,+BAAOiqD,EAAgB,EAAhB,mBAAgCA,EAAgB,EAAhD,2BAA6E,QAGtF,0BACEnqD,UAAU,eACV+D,KAAK,OACLjC,MAAOmpD,GAAiB7W,EAAO94C,KAC/B4vD,UAAU,IAGZ,qBAAKlrD,UAAU,UAAf,SACE,uBAAMgtB,SAAU,SAAAtY,GAAOA,EAAEuY,kBAAzB,UACGpwB,EAAQ4xB,OAAOtvB,iBAAoB,mCAClC,cAAC,GAAD,CACEqqB,UAAQ,EACRxjB,UAAQ,EAACqjB,UAAW,EACpBxnB,YAAY,mBACZC,MAAOuoD,EAAav+B,WACpBpqB,SAAU,SAAAI,GAAK,OAAIwoD,EAAgB,2BAAKD,GAAN,IAAoBv+B,WAAYhqB,UAItE,sBAAK9B,UAAU,UAAf,UACE,cAAC,EAAD,CACE6D,QAAM,EACN5D,KAAM,cAAC,IAAD,IACND,UAAU,SACVG,QAAS,kBAAMtF,EAAQ,CAAEnB,QAAS,sBAJpC,oBAMA,cAAC,EAAD,CAAQsG,UAAU,UAAUG,QAAS6qD,EAAS9oD,SAAUggB,EAAxD,SACGA,EAAa,qCAAE,cAAC,EAAD,IAAF,gBACX,qCAAE,cAAC,IAAD,IAAF,2BASjB,SAAS+oC,GAAiBjG,GACxB,IAAM,OAAOmG,wBAAanG,GAC1B,MAAMoG,GAAK,OAAOpG,G,uBC3KpB,SAASqG,GAAgBC,EAAYC,GAAO,IAAD,OACzCC,KAAKriB,UAAYmiB,EACjBE,KAAKpiB,IAAMmiB,EACXC,KAAKC,SAAW,GAEhBD,KAAKnrC,GAAK,SAACjiB,EAAQ8H,GACjB,EAAKulD,SAASrtD,GAAU8H,GAG1BslD,KAAKE,eAAiB,SAAC1G,GAAS,IAAD,EAE7B,KAAI,OAACA,QAAD,IAACA,GAAD,UAACA,EAAK2G,cAAN,aAAC,EAAaC,QAChB,OAAO,EAET,IAAMC,EAAiB7G,EAAI2G,OAAOC,SAAW9hD,OAAO8hD,OAC9CE,EAAcvpD,OAAOwZ,OAAOgwC,YAASnpD,SAASoiD,EAAI7gD,KAAK/F,QAE7D,OAAOytD,GAAkBC,GAG3BN,KAAKQ,iBAAmB,SAAChH,GACvB,OAAOiH,QAAQ,EAAKR,SAASzG,EAAI7gD,KAAK/F,UAGxCotD,KAAK1rB,KAAO,SAAC37B,EAAM+nD,EAAWxzD,GAC5B,IAKoB,IALdyzD,EAAaC,2BACbpH,EAAMtsD,EACR2zD,oBAAiBC,kBAAkBJ,EAAWxzD,EAAOyzD,GACrDE,oBAAiBE,aAAaL,EAAW/nD,EAAMgoD,GAE/C,EAAKhjB,UAGP,YAAKA,UAAU9iC,eAAf,mBAAwBmmD,qBAAxB,SAAuCC,YAAYzH,EAAK,KAExDprD,QAAQC,IAAI,2BAIhB2xD,KAAKkB,sBAAL,uCAA6B,WAAO1H,GAAP,qBAAA/sD,EAAA,yDAErB00D,EAAe,EAAKjB,eAAe1G,GACnC4H,EAAa,EAAKZ,iBAAiBhH,IAErC2H,IAAgBC,EALO,wBAMnB1mD,EAAU,EAAKulD,SAASzG,EAAI7gD,KAAK/F,QANd,kBASA8H,EAAQ8+C,GATR,OAYC,qBAHlBvmD,EATiB,SAarB,EAAKqhC,KAAKrhC,EAAUumD,EAAI7gD,KAAKxC,IAbR,kDAgBvB/H,QAAQlB,MAAM,cACd,EAAKonC,KAAK,KAAIpmC,QAASsrD,EAAI7gD,KAAKxC,IAAI,GAjBb,0DAA7B,kCAAA6pD,KAAA,eA4BAA,KAAKxpD,MAAQ,WAEX8H,OAAOrD,oBAAoB,UAAW,EAAKimD,wBAG7C9yD,QAAQC,IAAI,uBACZiQ,OAAOtD,iBAAiB,UAAWglD,KAAKkB,uB,aC/E3B,OAA0B,iCCUnCG,GAAmB,CAAC,sBAAuB,iBAE7CC,GAAgB,GAChBC,IAAyB,EACzBC,GAAuB,GAaZ,SAASC,GAAkBluC,EAAUmuC,EAAQp0B,EAAW8K,EAAah5B,EAASuiD,EAASC,GAClG,IAAQ/kD,EAAa6B,IAAb7B,SACFglD,EAAYvmD,iBAAO,IACzBumD,EAAUhnD,QAAQ6mD,OAASA,EAE3B3rD,qBAAU,WAENuI,OAAOwjD,aAAe,SAAAxyB,GAAG,OAAIuyB,EAAUhnD,QAAQ6mD,OAAOpyB,MACvD,IAGH,IAAMyyB,EAAmBnsD,uBAAY,YAAgE,IAA7DO,EAA4D,EAA5DA,GAAIH,EAAwD,EAAxDA,MAAOtD,EAAiD,EAAjDA,KAAMsvD,EAA2C,EAA3CA,mBAAoBl1D,EAAuB,EAAvBA,QAAS6H,EAAc,EAAdA,QAC5EghB,EAAe,IAAIwD,aAAanjB,EAAO,CACzCgsD,mBAAoBA,IAAsB,EAC1CtvD,OACA+B,KAAMwtD,KAGVtsC,EAAausC,QAAUvtD,GAAY,WAC3B7H,GAA4B,wBAAjBA,EAAQyL,MAAgC+F,OAAOwjD,aAAah1D,GAC3EwR,OAAOif,QACP5H,EAAaloB,SAEjB6zD,GAAcpvD,KAAK,CAAEiE,KAAIwf,mBAC1B,IAGHpC,EAASjW,SAAQ,SAAAxQ,GAEb,GAAKA,EAAQ6oB,cACR0rC,GAAgBjqD,SAAStK,EAAQyL,QAClC+oD,GAAc5jD,MAAK,SAAAqJ,GAAC,OAAIA,EAAE5Q,KAAOrJ,EAAQqJ,OACxCrJ,EAAQgD,IAAb,CACA,IAAMqyD,EAA0B,kBAAjBr1D,EAAQyL,KACjB6G,EAAUR,EAASlB,MAAK,SAAAG,GAAC,OAAIA,EAAE9N,UAAYjD,EAAQiD,WACnDiG,EArDe,mBAsDjBmsD,EACM,iCADA,qCAE8B/iD,EAAUA,EAAQ1K,KAAO,oBAE3DhC,EAAOyvD,EAAS,mBAAqBx5C,GAAsB,CAAC7b,EAAQgD,IAAIqR,GAAIrU,EAAQgD,IAAIwG,MAAOxJ,EAAQgD,IAAI6I,MAAO7L,EAAQiD,QAASjD,EAAQuE,SACjJ0wD,EAAiB,CACb5rD,GAAIrJ,EAAQqJ,GACZH,QACAtD,OACA5F,UACAk1D,oBAAoB,QAK5BjsD,qBAAU,WACN,IACI,IAAKu3B,EAAUnf,kBAAoBmf,EAAUliB,QACpCm2C,KACDA,IAAyB,EACzBC,GAAuBl0B,EAAUr2B,OAAOtJ,KAAI,kBAA8B,CAAEC,QAAhC,EAAGA,QAAsC0d,WAAzC,EAAYA,gBAGrCgiB,EAAUr2B,OAAO3C,QAAO,YAA8B,IAA3B1G,EAA0B,EAA1BA,QAAS0d,EAAiB,EAAjBA,WACjD82C,EAAYZ,GAAqB9jD,MAAK,SAAA4D,GAAK,OAAIA,EAAM1T,UAAYA,KACjEy0D,EAAsBD,GAAe92C,EAAa82C,EAAU92C,WA7E7D,QA8EL,OAAQ82C,GAAaC,KAGV/kD,SAAQ,YAAgD,IAA7C1P,EAA4C,EAA5CA,QAAS4Y,EAAmC,EAAnCA,OAAQ8C,EAA2B,EAA3BA,SAAUgC,EAAiB,EAAjBA,WAC3C82C,EAAYZ,GAAqB9jD,MAAK,SAAA4D,GAAK,OAAIA,EAAM1T,UAAYA,KACjE00D,EA9EA,SAACF,EAAWG,EAAej5C,GACjD,IACI,IAAMg5C,EAAiBF,EAChBI,KAAU/zD,KAAK8zD,EAAc9wD,SAAS,KAAKgxD,IAAID,KAAU/zD,KAAK2zD,EAAU92C,WAAW7Z,SAAS,MAC7F8wD,EACN,OAAOh5C,uBAAY+4C,EAAgBh5C,GACrC,MAAMJ,GACJ9a,QAAQlB,MAAM,kBAAoBgc,IAuECw5C,CAAkBN,EAAW92C,EAAYhC,GAEhEy4C,EAAiB,CACb5rD,GAAG,mBAAD,OAAqBkK,KAAKC,OAC5BtK,MAAM,GAAD,OAAKssD,EAAL,YAAuB97C,EAAvB,cACL9T,KAAK,QAAD,OAAU8T,EAAV,iCAAyC87C,EAAzC,YAA2D97C,KAGnE47C,EAAYZ,GAAoB,sBACzBA,GAAqBltD,QAAO,SAAAgN,GAAK,OAAIA,EAAM1T,UAAYA,MAD9B,CAE5B,CAAEA,UAAS0d,gBACXk2C,GAAqBtvD,KAAK,CAAEtE,UAAS0d,kBAGnD,MAAMpC,GACJ9a,QAAQlB,MAAMgc,GACdrM,EAASqM,EAAEhb,QAAUgb,EAAG,CAAEhc,OAAO,OAEtC,CAACogC,EAAWzwB,EAAUklD,IAGzBhsD,qBAAU,WACN,IAAM4sD,EAA0B,aAAfvjD,EAAQjJ,GAAoB,IAAQ,IAC/CysD,EAAmBpxC,aAAY,WACjCmwC,EACKrtD,QAAO,qBAAGkD,aACV8F,QAFL,uCAEa,+BAAA7Q,EAAA,6DAAS0E,EAAT,EAASA,KACRua,EAAW7B,GAAYzK,EAAQjJ,IADhC,kBAGuBuV,EAASm3C,sBAAsB1xD,GAHtD,kEAMDywD,EAAczwD,GACd4wD,EAAiB,CACb5rD,GAAG,gBAAD,OAAkBkK,KAAKC,OACzBtK,MAAM,+BACNtD,KAAK,+CACLiC,QAAS,kBAAM2J,OAAOrI,KAAKmJ,EAAQL,YAAY,OAAO5N,EAAM,aAX/D,kDAcD/C,QAAQlB,MAAR,MAdC,0DAFb,yDAmBDy1D,GACH,OAAO,kBAAMlxC,cAAcmxC,MAC5B,CAACjB,EAASviD,EAAS2iD,EAAkBH,IAExC7rD,qBAAU,WACNwrD,IAAyB,EACzBC,GAAuB,KACxB,CAACppB,EAAah5B,IAEjBkiD,GAAgBA,GAAchtD,QAAO,YAA2B,IAAxB6B,EAAuB,EAAvBA,GAAIwf,EAAmB,EAAnBA,aACxC,QAAKpC,EAAS7V,MAAK,SAAA1M,GAAC,OAAIA,EAAEmF,KAAOA,OAC7Bwf,EAAaloB,SACN,MCjJZ,ICsBDo0B,GAAa5iB,irBAAY6jD,eAAe,yBAA2B7jD,6BAAoC,wBAc7G,SAAS8jD,KAEP,MCtCa,SAAsB90C,GACjC,IAAQpR,EAAa6B,IAAb7B,SACFN,EAAUC,uBAEhB,EAAgCyR,EAAW,CACzCoB,IAAK,WACLC,aAAc,GACd2L,QAAS,SAAA+nC,GACP,OAAKjrC,MAAMC,QAAQgrC,GAMZA,GALL50D,QAAQlB,MAAM,8BAEP,OAPb,mBAAOQ,EAAP,KAAiBu1D,EAAjB,KAaA,EAAsCh1C,EAAW,CAC/CoB,IAAK,cACLC,aAAc,GACd0L,iBAAiB,EACjBC,QAAS,SAAAioC,GACP,OAAKA,GAAuBx1D,EAASgQ,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAO+sD,KAIjDA,EAHEx1D,EAAS,GAAKA,EAAS,GAAGyI,GAAK,MAN5C,mBAAOiiC,EAAP,KAAoB+qB,EAApB,KAYMzsB,EAAc9gC,uBAAY,SAAAwtD,GAC9BD,EAAeC,KACd,CAACD,IACErhC,EAAelsB,uBAAY,SAACsI,GAAoB,IAAf6C,EAAc,uDAAP,GAC5C,IAAM7C,EAAI/H,KAAM+H,EAAI+kB,OAAS,MAAM,IAAIl2B,MAAM,+CAE7C,IAAMs2D,EAAW31D,EAASgQ,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,GAAG7F,gBAAkB4N,EAAI/H,GAAG7F,iBAC9D+yD,EACFxmD,EAAShK,KAAKC,UAAUuwD,KAAcxwD,KAAKC,UAAUoL,GAAO,wBAA0B,mBAC7E6C,EAAKovB,OAEdtzB,EAAS,+BAAD,OAAgCqB,EAAI/H,IAApC,OAAyC+H,EAAI+kB,OAAOr1B,QAAU,0CAA4C,IAAM,CAAEiO,QAASqC,EAAI+kB,OAAOr1B,QAAU,KAAQ,MAGlK,IAAM01D,EAAc51D,EAAS0yC,QAAQijB,IACd,IAAjBC,EAAoB51D,EAASwE,KAAKgM,GACnCxQ,EAAS41D,GAAeplD,EAG7B+kD,EAAY,YAAKv1D,IAEbqT,EAAKmiB,QAAQwT,EAAYx4B,EAAI/H,IAC7BY,OAAOC,KAAKtJ,GAAUd,QACxB2P,EAAQrK,KAAK,uBAEd,CAACxE,EAAUmP,EAAU65B,EAAan6B,EAAS0mD,IAExCtsB,EAAkB/gC,uBAAY,SAAAO,GAClC,IAAKA,EAAI,MAAM,IAAIpJ,MAAM,6CAEzB,IAAMsE,EAAU3D,EAASgQ,MAAK,SAAArM,GAAO,OAAIA,EAAQ8E,KAAOA,KACxD,GAAI9E,GAAWA,EAAQ+lB,OAAS/lB,EAAQi0B,oBAAsBj0B,EAAQg4C,iBACpE,OAAOxsC,EAAS,4FAA6F,CAAE3P,OAAO,EAAMkQ,MAAO,qBAErI,IAAMmmD,EAAkB71D,EAAS4G,QAAO,SAAAjD,GAAO,OAAIA,EAAQ8E,KAAOA,KAClE8sD,EAAY,YAAIM,IAEXA,EAAgB32D,OAChB8pC,EAAY6sB,EAAgB,GAAGptD,IADPoG,EAAQrK,KAAK,kBAEzC,CAACxE,EAAU6O,EAASm6B,EAAa75B,EAAUomD,IAE9C,MAAO,CAAEv1D,WAAU0qC,cAAa1B,cAAa5U,eAAc6U,mBDhCiB6sB,CAAY/oC,IAAlF/sB,EAAR,EAAQA,SAAU0qC,EAAlB,EAAkBA,YAAa1B,EAA/B,EAA+BA,YAAa5U,EAA5C,EAA4CA,aAAc6U,EAA1D,EAA0DA,gBACpDgI,EAAchnB,GAAe,CAAEjqB,WAAUugB,WAAYwM,KAC3D,EEzCa,WAAwE,IAAD,yDAAJ,GAAI,IAAhDgpC,sBAAgD,MAA/B,WAA+B,EAClF,GAAkCx1C,EADgD,EAAnBA,YAClB,CACzCoB,IAAK,UACLC,aAAcm0C,EACdzoC,iBAAiB,EACjBC,QAAS,SAAArS,GAAS,OAAIhK,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAE5Q,KAAOyS,KAAaA,EAAY66C,KAJ/E,mBAAO76C,EAAP,KAAkB86C,EAAlB,KAOM3wC,EAAand,uBAAY,SAAA+tD,GAC3B,IAAMvkD,EAAUR,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAE5Q,KAAOwtD,GAAqB58C,EAAErS,OAASivD,GAAqB58C,EAAEhX,UAAY4zD,KAC/G,IAAKvkD,EAAS,MAAM,IAAIrS,MAAJ,4BAA+B42D,IAEnDD,EAAatkD,EAAQjJ,MACtB,CAACutD,IAEJ,MAAO,CACH3wC,aACA3T,QAASR,EAASlB,MAAK,SAAAqJ,GAAC,OAAIA,EAAE5Q,KAAOyS,KACrCkK,YAAalU,GFuB0BglD,CAAW,CAAE31C,WAAYwM,KAA9Drb,EAAR,EAAQA,QAAS2T,EAAjB,EAAiBA,WAAYD,EAA7B,EAA6BA,YACrBjW,EAAa6B,IAAb7B,SACF6Y,ED1C4B,SAAAmuC,GAChC,IAAQ5mC,EAAWlE,wBAAXkE,OACF1gB,EAAUC,uBACVsnD,EAAkBnsD,mBAAQ,kBAAM,IAAIosD,gBAAgB9mC,KAAS,CAACA,IACpE,EAAkD/nB,mBAAS4uD,EAAgBvf,IAAIsf,IAA/E,mBAAOG,EAAP,KAA0BC,EAA1B,KACMC,EAAYvsD,mBAAQ,kBAAM,IAAIosD,gBAAgBzlD,OAAOwa,SAASsI,KAAKpb,MAAM,KAAKtD,MAAM,GAAGuD,KAAK,KAAKD,MAAM,KAAK,MAAK,IAEjHm+C,EAA0BvuD,uBAAY,WACpCkuD,EAAgBM,IAAIP,KACpBC,EAAgBO,OAAOR,GACvBtnD,EAAQ64B,QAAQ,CACZnY,OAAQ6mC,EAAgBryD,gBAGjC,CAAC8K,EAASunD,EAAiBD,IAQ9B,OANA9tD,qBAAU,WACF+tD,GAAmBA,EAAgBvf,IAAIsf,GAAcI,EAAqBH,EAAgBvf,IAAIsf,IACzFK,EAAU3f,IAAIsf,IAAcI,EAAqBC,EAAU3f,IAAIsf,IACxEM,MACD,CAACA,EAAyBL,EAAiBI,EAAWL,IAElDG,ECoBKM,CAAqB,OAGnC,EAA+F1xC,GAAiB,CAC9GvhB,QAAS+mC,EACTroC,QAASqP,EAAQrP,QACjB8iB,WAAY6C,EACZ5C,cACAC,aACA9E,WAAYwM,KANNrH,EAAR,EAAQA,YAAac,EAArB,EAAqBA,QAAS0B,EAA9B,EAA8BA,WAAsB2uC,EAApD,EAA0ChxC,SAAmCixC,EAA7E,EAAgEpuC,YAShE,EGjDa,YAA6E,IAArDof,EAAoD,EAApDA,gBAAiBp2B,EAAmC,EAAnCA,QAAmC,IAA1BqlD,eAA0B,MAAhB,EAAgB,EAAbx2C,EAAa,EAAbA,WAEtE+F,EAAY1Y,iBAAO,MAEnBopD,EAAW/sD,mBAAQ,kBAAM,IAAI0I,MAAOkoC,UAAY,IAAMnpC,EAAQrP,QAAU,IAAMylC,IAAiB,CAACA,EAAiBp2B,IAEhHvC,EAAY6B,IAAZ7B,SAGDmW,EAAW1X,mBACjB0X,EAASnY,QAAU,CACjB26B,kBACAp2B,WAGF,MAAgC6O,EAAW,CACzCoB,IAlBgB,oBAmBhBC,aAAc,GACd2L,QAAS,SAAA0pC,GAAe,OAAK5sC,MAAMC,QAAQ2sC,GAAwBA,EAAL,MAHhE,mBAAOpxC,EAAP,KAAiBqxC,EAAjB,KAMM1wC,EAAUte,uBAAY,SAAAue,GAC1BswC,EAAU,GAAKr2D,QAAQC,IAAI,0BAE3B,IACE2lB,EAAUnZ,QAAU,IAAIglD,GACtB1rC,EAAcwpB,UACdxpB,EAAcypB,IACd8mB,GAEF,MAAOx7C,GAEP,OADArM,EAAS,wBAAD,OAAyBsX,EAAcypB,IAAInrC,IAA3C,aAAmDyW,EAAEhb,UACtD,KAIT8lB,EAAUnZ,QAAQga,GAAG0rC,WAAQsE,aAAa,WACxC,MAAO,CACLC,YAAa9xC,EAASnY,QAAQ26B,gBAC9Bp2B,QAAS4T,EAASnY,QAAQuE,QAAQjJ,GAClCpG,QAASijB,EAASnY,QAAQuE,QAAQrP,QAClCg1D,OAAQ,CAAC/xC,EAASnY,QAAQ26B,iBAC1BwvB,UAAW,MAmCfhxC,EAAUnZ,QAAQga,GAAG0rC,WAAQ0E,QAA7B,uCAAsC,WAAOzL,GAAP,uBAAA/sD,EAAA,yDACpCg4D,EAAU,GAAKr2D,QAAQC,IAAI,yBAA0BmrD,GADjB,OAG/BA,QAH+B,IAG/BA,GAH+B,UAG/BA,EAAK7gD,YAH0B,aAG/B,EAAWvF,OAHoB,sBAI5B,IAAIrG,MAAM,uBAJkB,UAM9B6F,EAAS4mD,EAAI7gD,KAAKvF,OAAO2X,KACzBm6C,EAAS1L,EAAI7gD,KAAKvF,OAAOA,OAEzBsY,EAAW7B,GAAYmJ,EAASnY,QAAQuE,QAAQjJ,IAEvC,aAAXvD,EAXgC,iCAYnB8Y,EAASX,KAAKm6C,EAAO,GAAIA,EAAO,IAAI93D,OAAM,SAAAC,GACvD,MAAMA,KAb0B,OAYlC2d,EAZkC,kCAed,mBAAXpY,EAfyB,kCAgBnB8Y,EAASy5C,WAAWD,EAAO,GAAIA,EAAO,IAAI93D,OAAM,SAAAC,GAC7D,MAAMA,KAjB0B,QAgBlC2d,EAhBkC,kCAmBd,oBAAXpY,EAnByB,kCAoBnB8Y,EAAS05C,iBAAiBh4D,OAAM,SAAAC,GAC7C,MAAMA,KArB0B,QAoBlC2d,EApBkC,kCAuBd,yBAAXpY,GAAgD,uBAAXA,EAvBZ,qBAwB9BsyD,EAAO,GAxBuB,kCAyBjBx5C,EAAS25C,yBAAyBH,EAAO,IAAI93D,OAAM,SAAAC,GAChE,MAAMA,KA1BwB,QAyBhC2d,EAzBgC,gDA6BjBU,EAAS45C,SAASJ,EAAO,IAAI93D,OAAM,SAAAC,GAChD,MAAMA,KA9BwB,QA6BhC2d,EA7BgC,0CAiCd,6BAAXpY,EAjCyB,kCAkCnB8Y,EAAS65C,eAAeL,EAAO,IAAI93D,OAAM,SAAAC,GACtD,MAAMA,KAnC0B,QAkClC2d,EAlCkC,kCAqCd,gBAAXpY,EArCyB,kCAsCnB8Y,EAASwwC,QAAQgJ,EAAO,GAAIA,EAAO,IAAI93D,OAAM,SAAAC,GAC1D,MAAMA,KAvC0B,QAsClC2d,EAtCkC,kCAyCd,yBAAXpY,EAzCyB,kCA0CnB8Y,EAAS45C,SAASJ,EAAO,GAAIA,EAAO,IAAI93D,OAAM,SAAAC,GAC3D,MAAMA,KA3C0B,QA0ClC2d,EA1CkC,kCA6Cd,8BAAXpY,EA7CyB,kCA8CnB8Y,EAASm3C,sBAAsBqC,EAAO,IAAI93D,OAAM,SAAAC,GAC7D,MAAMA,KA/C0B,QA8ClC2d,EA9CkC,kCAkDd,kBAAXpY,GAAyC,gCAAXA,EAlDL,wBAoDlC4mD,EAAI7gD,KAAKvF,OAAOoyD,IAAMN,EAAO,GApDK,UAqD5BO,EAAuBjM,GAAKpsD,OAAM,SAAAC,GACtC,MAAMA,KAtD0B,mCAwDd,kBAAXuF,EAxDyB,kCAyDnB8yD,EAAmBlM,GAAKpsD,OAAM,SAAAC,GAC3C,MAAMA,KA1D0B,QAyDlC2d,EAzDkC,qCA6D5B,IAAIje,MAAM,wBAA0B6F,GA7DR,iCA+D7BoY,GA/D6B,4CAAtC,uDAkEAgJ,EAAUnZ,QAAQga,GAAG0rC,WAAQoF,kBAAkB,SAACnM,GAC9CiM,EAAuBjM,MAGzB,IAAMiM,EAAyB,SAACjM,GAAS,IAAD,EACtCiL,EAAU,GAAKr2D,QAAQC,IAAI,wBAAyBmrD,GAEpD,IAAM7gD,EAAI,OAAG6gD,QAAH,IAAGA,OAAH,EAAGA,EAAK7gD,KAClB,GAAKA,EAAL,CAKA,IAAM6sD,EAAG,OAAG7sD,QAAH,IAAGA,GAAH,UAAGA,EAAMvF,cAAT,aAAG,EAAcoyD,IAC1B,UAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAK54D,OAAT,CACE,IAAK,IAAIgF,KAAK4zD,EACPA,EAAI5zD,GAAGnD,OAAM+2D,EAAI5zD,GAAGnD,KAAOukB,EAASnY,QAAQ26B,iBAZf,eAmB7B9hB,GACP,IACM5mB,EAAU,CACdqJ,GAFS,MAAQwC,EAAKxC,GAAK,IAAMud,EAGjCkyC,UAAWpM,EAAI7gD,KAAKxC,GACpBoC,KAAM,sBACNob,QAAS6xC,EAAI54D,OAAS,EACtBkD,IAAK01D,EAAI9xC,GACT3jB,QAASijB,EAASnY,QAAQuE,QAAQrP,QAClCsB,QAAS2hB,EAASnY,QAAQ26B,iBAG5BovB,GAAY,SAAAiB,GAAY,OAAIA,EAAanoD,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOrJ,EAAQqJ,MAAM0vD,EAA9C,sBAAiEA,GAAjE,CAA+E/4D,QAZ7G,IAAK,IAAI4mB,KAAM8xC,EAAM,EAAZ9xC,QAJPtlB,QAAQlB,MAAM,uCAVdkB,QAAQlB,MAAM,gBA8BZw4D,EAAqB,SAAClM,GAAS,IAAD,EAClCiL,EAAU,GAAKr2D,QAAQC,IAAI,6BAA8BmrD,GAEzD,IAAM7gD,EAAI,OAAG6gD,QAAH,IAAGA,OAAH,EAAGA,EAAK7gD,KAClB,GAAKA,EAAL,CAKA,IAAMxC,EAAK,MAAQwC,EAAKxC,GAClBjI,EAAO,OAAGyK,QAAH,IAAGA,GAAH,UAAGA,EAAMvF,cAAT,aAAG,EAAclF,QAC9B,GAAKA,EAAL,CAKA,IAAMpB,EAAU,CACdqJ,KACAyvD,UAAWpM,EAAI7gD,KAAKxC,GACpBoC,KAAM,gBACNzI,IAAK5B,EACL6B,QAASijB,EAASnY,QAAQuE,QAAQrP,QAClCsB,QAAS2hB,EAASnY,QAAQ26B,iBAG5BovB,GAAY,SAAAiB,GAAY,OAAIA,EAAanoD,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOrJ,EAAQqJ,MAAM0vD,EAA9C,sBAAiEA,GAAjE,CAA+E/4D,YAbzGsB,QAAQlB,MAAM,2CAPdkB,QAAQlB,MAAM,gBAuBlB8mB,EAAUnZ,QAAQga,GAAG0rC,WAAQ52B,aAAa,SAAC6vB,GAAD,OAASkM,EAAmBlM,MAEtExlC,EAAUnZ,QAAQga,GAAG0rC,WAAQuF,kBAA7B,uCAAgD,WAAOtM,GAAP,mBAAA/sD,EAAA,6DACvCs5D,EAAcvM,EAAI7gD,KAAKvF,OAAvB2yD,WACDr6C,EAAW7B,GAAYmJ,EAASnY,QAAQuE,QAAQjJ,IAFR,kBAI1BuV,EAAS65C,eAAeQ,GAJE,cAItCp2D,EAJsC,yBAMrCA,GANqC,uCAQ5CvB,QAAQlB,MAAM,+BAAiC64D,GAC/C33D,QAAQC,IAAR,MAT4C,kBAUrC,IAVqC,yDAAhD,yDAaC,CAACq2D,EAAU7nD,EAAU4nD,EAASG,IAG3BhvC,EAAahgB,uBAAY,WAAO,IAAD,EACnC6uD,EAAU,GAAKr2D,QAAQC,IAAI,+BAC3B,UAAA2lB,EAAUnZ,eAAV,SAAmBrE,UAClB,CAACiuD,IAqCJ,MAAO,CACLlxC,WACA6C,YApCkB,SAACxC,EAAKyC,GAAgB,IAAD,iBACvB9C,EAASjf,QAAO,SAAAuJ,GAAC,OAAI+V,EAAIxc,SAASyG,EAAE1H,QADb,IACvC,2BAA0D,CAAC,IAAlDm5B,EAAiD,QACxD,IAAKA,EAAI3b,SAAW2b,EAAIn5B,GAAGmgB,SAAS,MAAO,CACzC,IAAM0vC,EAAY,CAChB7vD,GAAIm5B,EAAIs2B,UACR36C,QAAS,KACTiiC,KAAM,KACNhgD,MAAO,MAEJmpB,EAGOA,EAAWpL,SAIrB+6C,EAAU/6C,SAAU,EACpB+6C,EAAU9Y,KAAO72B,EAAWrL,OAC5Bg7C,EAAUD,WAAa1vC,EAAWrL,SALlCg7C,EAAU94D,MAAQmpB,EAAWnoB,QAC7B83D,EAAU/6C,SAAU,IAJpB+6C,EAAU94D,MAAQ,qBAClB84D,EAAU/6C,SAAU,GASjB+I,EAAUnZ,SAKbzM,QAAQC,IAAI,eAAgB23D,GAC5BhyC,EAAUnZ,QAAQy5B,KAAK0xB,EAAW12B,EAAIs2B,UAAWI,EAAU94D,QAH3DkB,QAAQlB,MAAM,mCAvBmB,8BA+BvC03D,GAAY,SAAAiB,GAAY,OAAIA,EAAavxD,QAAO,SAAAuJ,GAAC,OAAK+V,EAAIxc,SAASyG,EAAE1H,WAMrE+d,UACA0B,cH/NyHqwC,CAAc,CACvIzwB,gBAAiB4C,EACjBh5B,QAASA,EACT6O,WAAYwM,KAHIyrC,EAAlB,EAAQ3yC,SAAuC4yC,EAA/C,EAAkC/vC,YAAyConB,EAA3E,EAAkEtpB,QAAoCupB,EAAtG,EAA0F7nB,WAQ1F,EAAgD1gB,mBAAS,IAAzD,mBAAOkxD,EAAP,KAAyBC,EAAzB,KAIM9yC,EAAW5b,mBACf,iBAAM,sBAAIyuD,GAAJ,YAAyB7B,GAAzB,YAAwC2B,IAC3C5xD,QAAO,gBAAGjD,EAAH,EAAGA,QAAH,OAAiB3D,EAASgQ,MAAK,qBAAGvH,KAAgB9E,UAC5D,CAACkzD,EAAY6B,EAAkBF,EAAgBx4D,IAE3C0oB,EAAc,SAACxC,EAAKyC,GACxBmuC,EAAc5wC,EAAKyC,GACnB8vC,EAAkBvyC,EAAKyC,GACvBgwC,GAAoB,SAAAC,GAAI,OAAIA,EAAKhyD,QAAO,SAAAuJ,GAAC,OAAK+V,EAAIxc,SAASyG,EAAE1H,WAIzDm3B,EAAYvf,GAAa,CAC7BC,eAAgB5O,EAAQjJ,GACxB9E,QAAS+mC,EACTnqB,WAAYwM,KAGRgb,EIxFO,SAAwBxnB,GACnC,MAA4CA,EAAW,CAAEoB,IAAK,kBAA9D,mBAAQulB,EAAR,KAAuB2xB,EAAvB,KAWA,MAAO,CACH3xB,gBACArY,iBAPqB,SAACjmB,GAAD,OAAWs+B,EACpB,kBAAVt+B,GAAsBA,EAAMwT,WAAW,MAAQxT,EAAM8+B,QAAQ,MAAO,KAAO,KACjF9+B,GAMIigC,mBALuB,SAACz5B,GAAD,OAAa83B,EAAgB,qBAAKpgC,UAAU,kBAAf,SAAkCsI,IAAiBA,GAMvGu7B,kBAbsB,WACtBkuB,GAAkB3xB,KJoFJ4xB,CAAe/rC,IAG7B9B,EAAmBhhB,mBAAQ,kBAAM4b,EACpCjf,QAAO,gBAAGiE,EAAH,EAAGA,KAAMxI,EAAT,EAASA,QAASsB,EAAlB,EAAkBA,QAAlB,MACG,wBAATkH,GACGxI,IAAYqP,EAAQrP,SACpBsB,IAAY+mC,OACd,CAAC7kB,EAAUnU,EAAQrP,QAASqoC,IACjC,EAAwCljC,oBAAS,iBAAO,CAAEuxD,UAAW9tC,EAAiB/rB,WAAtF,mBAAO85D,EAAP,KAAqBC,EAArB,KACA5wD,qBACE,kBAAM4wD,EAAgB,CAAEF,UAAW9tC,EAAiB/rB,WACpD,CAAC+rB,EAAiB/rB,SAEpB,IAGMg6D,EAAmBjvD,mBAAQ,kBAAM4b,EACpCjf,QAAO,gBAAGiE,EAAH,EAAGA,KAAMlH,EAAT,EAASA,QAAT,OAAiC,kBAATkH,GAAqC,aAATA,IACvDlH,IAAY+mC,OACd,CAAC7kB,EAAU6kB,IAiBhB,EAA8BljC,mBAAS,IAAvC,mBAAOysD,EAAP,KAAgBkF,EAAhB,KAuBApF,GAAiBluC,GAAU,SAAAzmB,GACzB4pC,EAAY5pC,EAAQuE,SACpB0hB,EAAWjmB,EAAQiD,SACnB42D,GAAgB,SAAA7wD,GAAK,kCAAUA,GAAV,IAAiB2wD,SAAS,SAC9Cn5B,EAAW8K,EAAah5B,EAASuiD,GAdd,SAAAmF,GAAM,OAAID,GAAW,SAAAlF,GACzC,IAAMnP,EAAKmP,EAAQjkD,MAAK,SAAA80C,GAAE,OAAIA,EAAGrhD,OAAS21D,KAE1C,OADAtU,EAAGh7C,WAAY,EACT,GAAN,mBACKmqD,EAAQrtD,QAAO,SAAAk+C,GAAE,OAAIA,EAAGrhD,OAAS21D,MADtC,CAEEtU,UAWJ95B,GAAoB,CAClBC,mBACAC,iBAAkB8tC,EAAaD,QAC/B5tC,cAAejjB,uBAAY,kBAAM+wD,EAAgB,CAAEF,SAAS,MAAS,MAGvE,MAAoCvxD,oBAAS,kBAAMmL,KAAKC,SAAxD,mBAAOwpC,GAAP,KAAmBzC,GAAnB,KACAtxC,qBAAU,WACHsK,KAAKC,MAAQwpC,GAAc,KAAMzC,GAAchnC,KAAKC,OACzD,IAAMypC,EAAQv6C,YAAW,kBAAM63C,GAAchnC,KAAKC,SAAQ,KAC1D,OAAO,kBAAM1Q,aAAam6C,MACzB,CAACD,KACJ,IACMlS,GAAcnhB,GADAoL,IAAcuW,EAAf,UAAiCvW,GAAjC,iCAAoEuW,EAApE,uBAA8F0R,IAAe,MAGhI,OAAQ,qCACN,cAAC,SAAD,CACE57C,QAAS,SAAC4qB,EAAUzU,GAClB,MAAe,QAAXA,IA3DJqiD,EAAaD,SACfE,EAAgB,CAAEF,SAAS,KACpB,IAELG,EAAiBh6D,SACnBwpB,EAAY,CAACwwC,EAAiB,GAAGzwD,IAAK,CAAEjI,QAAS,gDAC1C,SAyDN04D,EAAiBh6D,QAAW,cAAC,GAAD,CAC7BwrC,YAAaA,EACb/mC,QAAS3D,EAASgQ,MAAK,SAAAG,GAAC,OAAIA,EAAE1H,KAAOiiC,KACrCwQ,OAAQge,EAAiB,GACzBjI,cAAeiI,EAAiBh6D,OAChCwmB,YAAaA,EACbyO,WAAYA,GACZxyB,QAAS,SAAA03D,GAAO,OAAI3wC,EAAY,CAACwwC,EAAiB,GAAGzwD,IAAK4wD,MAG3DL,EAAaD,QACZ,cAAC,GAAD,CACI/4D,SAAUA,EACV0qC,YAAaA,EACbh5B,QAASA,EACTmU,SAAUoF,EACVvC,YAAaA,EACbyL,WAAYA,GACZ4pB,UAAW,kBAAMkb,EAAgB,CAAEF,SAAS,KAC5C3J,kBAAmB4J,EAAa5J,kBAChCC,iBAtEiB,SAAA5rD,GAClBA,GAIL01D,GAAW,SAAAlF,GAAO,4BAAQA,GAAR,CAAiB,CAAEnqD,WAAW,EAAOrG,aACvD0L,EACE,kHAGC,CAAEpK,IAAK2M,EAAQL,YAAY,OAAO5N,EAAM0K,QAAS,QARlDgB,EAAS,yDAA0D,CAAEhB,QAAS,UAsEzE,6BAGP,eAAC,SAAD,WACE,cAAC,QAAD,CAAO/J,KAAK,eAAZ,SACE,cAAC,GAAD,CAAY+vB,WAAYA,GAAYC,aAAcA,MAGpD,cAAC,QAAD,CAAOhwB,KAAK,eAAZ,SACE,cAAC,GAAD,CAAY+vB,WAAYA,GAAYC,aAAcA,MAGpD,cAAC,QAAD,CAAOhwB,KAAK,UAAZ,SACE,cAAC,GAAD,CACE4mC,MAAO,CAAEjmC,IAAK,WACd/E,SAAUA,EACV0qC,YAAaA,EACbuG,YAAaA,EACbrR,UAAWA,EACXoJ,YAAaA,EACbC,gBAAiBA,EACjB7jB,YAAaA,EACb1T,QAASA,EACT2T,WAAYA,EACZ2Y,WA3JW,SAAA4D,GAAG,OAAI+2B,GAAoB,SAAAC,GAAI,4BAAQA,GAAR,CAAch3B,QA4JxDlc,YAAaA,EAEbc,QAASA,EACT0B,WAAYA,EAEZ4nB,cAAeA,EACfC,iBAAkBA,EAElB5b,WAAYA,GAEZlJ,iBAAkBA,EAClB8P,aApIa,SAAA2B,GAAM,OAAIu8B,EAAgB,CAAEF,SAAS,EAAM3J,kBAAmB1yB,KAqI3EtI,aAAcA,EACd8V,YAAaA,GACbnC,YAAaA,MAKjB,cAAC,QAAD,CAAO3jC,KAAK,IAAZ,SACE,cAAC,WAAD,CAAUqP,GAAIi3B,EAAc,oBAAsB,yBAQ3C,SAAS4uB,KACtB,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAACjE,GAAD,UApOVvzD,YAAW,WAGTpB,QAAQC,IAAI,sGACZD,QAAQlB,MAAM,iEACdkB,QAAQlB,MAAM,yDACdkB,QAAQlB,MAAM,8DACdkB,QAAQlB,MAAM,0DACdkB,QAAQlB,MAAM,6DACdkB,QAAQC,IAAI,2JACX,KKtCH,IAYe44D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBp5D,MAAK,YAAkD,IAA/Cq5D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF5sD,SAAS6sD,eAAe,SAM1BX,M","file":"static/js/main.52055d61.chunk.js","sourcesContent":["import TransportWebHID from '@ledgerhq/hw-transport-webhid'\nimport AppEth from '@ledgerhq/hw-app-eth'\nimport { serialize } from '@ethersproject/transactions'\n\nconst EIP_155_CONSTANT = 35\n\nconst ethUtil = require('ethereumjs-util')\nconst HDNode = require('hdkey')\n\nlet connectedDevices = null\n\nexport const PARENT_HD_PATH = \"44'/60'/0'/0\"\n\nasync function getTransport() {\n  connectedDevices = await TransportWebHID.list()\n  if (connectedDevices.length && connectedDevices[0].opened) {\n    return new TransportWebHID(connectedDevices[0])\n  } else {\n    try {\n      return await TransportWebHID.request()\n    } catch (e) {\n      throw new Error('Could not request WebHID ledger')\n    }\n  }\n}\n\n\nexport async function ledgerGetAddresses() {\n  const returnData = {\n    error: null,\n    addresses: []\n  }\n\n  const transport = await getTransport().catch(err => {\n    returnData.error = err\n  })\n  if (!transport) return returnData\n\n  const accountsData = await getAccounts(transport)\n\n  transport.close()\n\n  if (accountsData.error) {\n    returnData.error = accountsData.error\n  } else {\n    returnData.addresses = accountsData.accounts.map(a => a.address)\n  }\n\n  return returnData\n}\n\nasync function getAccounts(transport) {\n  const parentKeyDerivationPath = `m/${PARENT_HD_PATH}`\n  const returnData = {\n    error: null,\n    accounts: []\n  }\n  let ledgerResponse\n  try {\n    ledgerResponse = await getAddressInternal(transport, parentKeyDerivationPath).then(o => o).catch(err => {\n      if (err.statusCode === 25871 || err.statusCode === 27404) {\n        returnData.error = 'Please make sure your ledger is unlocked and running the Ethereum app. ' + err.message\n      } else {\n        returnData.error = 'Could not get address from ledger : ' + err\n      }\n    })\n  } catch (e) {\n    console.log(e)\n  }\n\n  if (!ledgerResponse) {\n    return returnData\n  }\n\n  const hdKey = new HDNode()\n  hdKey.publicKey = Buffer.from(ledgerResponse.publicKey, 'hex')\n  hdKey.chainCode = Buffer.from(ledgerResponse.chainCode, 'hex')\n  const mainAddress = addressOfHDKey(hdKey)\n\n  const initialDerivedKeyInfo = {\n    hdKey,\n    address: mainAddress,\n    derivationPath: parentKeyDerivationPath,\n    baseDerivationPath: PARENT_HD_PATH,\n  }\n\n  // currently we can't get addrs to match with what appears in MM/Ledger live so only one is derived\n  returnData.accounts = calculateDerivedHDKeyInfos(initialDerivedKeyInfo, 1)\n  return returnData\n}\n\n\nasync function getAddressInternal(transport, parentKeyDerivationPath) {\n  let timeoutHandle\n  const appEth = new AppEth(transport)\n\n  const ledgerTimeout = new Promise((resolve, reject) => {\n    timeoutHandle = setTimeout(() => {\n      return reject(new Error('Device took too long to respond...'))\n    }, 10000)\n  })\n\n  return Promise.race([\n    appEth.getAddress(parentKeyDerivationPath, false, true),\n    ledgerTimeout\n  ]).then((res) => {\n    clearTimeout(timeoutHandle)\n    return res\n  })\n}\n\nexport async function ledgerSignTransaction(txn, chainId) {\n  const transport = await getTransport().catch(err => {\n    throw err\n  })\n\n  const fromAddr = txn.from\n\n  const unsignedTxObj = {\n    ...txn,\n    gasLimit: txn.gasLimit || txn.gas,\n    chainId: chainId\n  }\n  delete unsignedTxObj.from\n  delete unsignedTxObj.gas\n\n  let serializedUnsigned = serialize(unsignedTxObj)\n  const accountsData = await getAccounts(transport)\n  if (accountsData.error) {\n    throw new Error(accountsData.error)\n  }\n\n  //Managing only 1 addr for now\n  const address = accountsData.accounts[0].address\n\n  let serializedSigned\n  if (address.toLowerCase() === fromAddr.toLowerCase()) {\n    let rsvResponse\n    try {\n      rsvResponse = await new AppEth(transport).signTransaction(accountsData.accounts[0].derivationPath, serializedUnsigned.substr(2))\n    } catch (e) {\n      throw new Error('Could not sign transaction ' + e)\n    }\n\n    const intV = parseInt(rsvResponse.v, 16)\n    const signedChainId = Math.floor((intV - EIP_155_CONSTANT) / 2)\n\n    if (signedChainId !== chainId) {\n      throw new Error('Invalid returned V 0x' + rsvResponse.v)\n    }\n\n    delete unsignedTxObj.v\n    serializedSigned = serialize(unsignedTxObj, {\n      r: '0x' + rsvResponse.r,\n      s: '0x' + rsvResponse.s,\n      v: intV\n    })\n  } else {\n    throw new Error('Incorrect address. Are you using the correct account/ledger?')\n  }\n\n  transport.close()\n\n  return serializedSigned\n}\n\nexport async function ledgerSignMessage(hash, signerAddress) {\n  const transport = await getTransport().catch(err => {\n    throw err\n  })\n\n  const accountsData = await getAccounts(transport)\n  if (accountsData.error) {\n    throw new Error(accountsData.error)\n  }\n\n  //TODO for multiple accs?\n  const account = accountsData.accounts[0]\n\n  let signedMsg\n  if (account.address.toLowerCase() === signerAddress.toLowerCase()) {\n    try {\n      const rsvReply = await new AppEth(transport).signPersonalMessage(account.derivationPath, hash.substr(2))\n      signedMsg = '0x' + rsvReply.r + rsvReply.s + rsvReply.v.toString(16)\n    } catch (e) {\n      throw new Error('Signature denied ' + e.message)\n    }\n  } else {\n    throw new Error('Incorrect address. Are you using the correct account/ledger?')\n  }\n  transport.close()\n  return signedMsg\n}\n\nfunction calculateDerivedHDKeyInfos(initialDerivedKeyInfo, count) {\n  const derivedKeys = []\n  for (let i = 0; i < count; i++) {\n\n    const fullDerivationPath = `m/${initialDerivedKeyInfo.baseDerivationPath}/${i}`\n    const path = `m/${i}`\n    const hdKey = initialDerivedKeyInfo.hdKey.derive(path)\n    const address = addressOfHDKey(hdKey)\n    const derivedKey = {\n      address,\n      hdKey,\n      baseDerivationPath: initialDerivedKeyInfo.baseDerivationPathh,\n      derivationPath: fullDerivationPath,\n    }\n\n    derivedKeys.push(derivedKey)\n  }\n  return derivedKeys\n}\n\nexport function addressOfHDKey(hdKey) {\n  const shouldSanitizePublicKey = true\n  const derivedPublicKey = hdKey.publicKey\n  const ethereumAddressUnprefixed = ethUtil\n    .publicToAddress(derivedPublicKey, shouldSanitizePublicKey)\n    .toString('hex')\n  return ethUtil.addHexPrefix(ethereumAddressUnprefixed).toLowerCase()\n}\n","export const fetch = require('node-fetch')\n\nexport async function fetchPost (url, body) {\n\tconst r = await fetch(url, {\n\t\theaders: { 'content-type': 'application/json' },\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(body)\n\t})\n\treturn r.json()\n}\n\nexport const fetchGet = async url => {\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.status !== 200) throw new Error('Failed to fetch')\n  return response.json()\n}\n\nexport async function fetchCaught (url, params) {\n    let resp\n    try {\n      resp = await fetch(url, params)\n    } catch (e) {\n      console.error(e)\n      return { errMsg: `Unexpected error: ${e && e.message}` }\n    }\n    let body\n    try {\n      body = await resp.json()\n    } catch(e) {\n      console.error(e)\n      return { errMsg: `Unexpected error: ${resp.status}, ${e && e.message}`, resp }\n    }\n    return { body, resp, errMsg: '' }\n}","// NOTE: This is a compromise, but we can afford it cause QuickAccs require a secondary key\n// Consider making it more\nconst SCRYPT_ITERATIONS = 131072 / 8\n\n// NOTE: those should only apply to new accounts, never for existing accounts, since some existing accounts may be on older versions of those\nconst accountPresets = {\n    salt: '0x0000000000000000000000000000000000000000000000000000000000000001',\n    identityFactoryAddr: '0xBf07a0Df119Ca234634588fbDb5625594E2a5BCA',\n    baseIdentityAddr: '0x2A2b85EB1054d6f0c6c2E37dA05eD3E5feA684EF',\n    quickAccManager: '0xfF3f6D14DF43c112aB98834Ee1F82083E07c26BF',\n    feeCollector: '0x942f9CE5D9a33a82F88D233AEb3292E680230348',\n    quickAccTimelock: 259200, // 3 days\n    encryptionOpts: { scrypt: { N: SCRYPT_ITERATIONS } }\n}\nexport default accountPresets","import './AddressList.scss'\n\nimport { MdOutlineDelete } from 'react-icons/md'\n\nconst AddressList = ({ noAccounts, addresses, onSelectAddress, removeAddress }) => {\n    const items = addresses.filter(({ isAccount }) => !(isAccount && noAccounts))\n\n    return (\n        <div className=\"address-list\">\n            {\n                !items.length ?\n                    <div className=\"placeholder\">Your Address Book is empty</div>\n                    :\n                    items.map(({ isAccount, icon, name, address }) => (\n                        <div className=\"item\" key={address + name}>\n                            <div className=\"inner\" onClick={() => onSelectAddress && onSelectAddress(address)}>\n                                <div className=\"icon\" style={{ backgroundImage: `url(${icon})`}}></div>\n                                <div className=\"details\">\n                                    <label>{ name }</label>\n                                    <div className=\"address\">{ address }</div>\n                                </div>\n                            </div>\n                            {\n                                !isAccount ? \n                                    <div className=\"button\" onClick={() => removeAddress(name, address)}>\n                                        <MdOutlineDelete/>\n                                    </div>\n                                    :\n                                    null\n                            }\n                        </div>\n                    ))\n            }\n        </div>\n    )\n}\n\nexport default AddressList","import './AddressBook.scss'\n\nimport { FaAddressCard } from 'react-icons/fa'\nimport { MdOutlineAdd, MdClose } from 'react-icons/md'\nimport { Button, DropDown, TextInput } from 'components/common'\nimport { useCallback, useEffect, useState } from 'react'\nimport AddressList from './AddressList/AddressList'\n\nconst AddressBook = ({ addresses, addAddress, removeAddress, newAddress, onClose, onSelectAddress }) => {\n    const [address, setAddress] = useState('')\n    const [name, setName] = useState('')\n    const [isOpen, setOpenMenu] = useState(false)\n    const [openAddAddress, setOpenAddAddress] = useState(false)\n\n    const selectAddress = address => {\n        onSelectAddress && onSelectAddress(address)\n        setOpenMenu(false)\n    }\n    \n    const isAddAddressFormValid = address.length && name.length && /^0x[a-fA-F0-9]{40}$/.test(address)\n    const onAddAddress = useCallback(() => {\n        setOpenMenu(false)\n        setOpenAddAddress(false)\n        addAddress(name, address)\n    }, [name, address, addAddress])\n\n    const onDropDownChange = useCallback(state => {\n        setOpenMenu(state)\n        if (!state) {\n            setName('')\n            setAddress('')\n        }\n    }, [])\n\n    useEffect(() => !isOpen && onClose ? onClose() : null, [isOpen, onClose])\n\n    useEffect(() => {\n        if (newAddress) {\n            setAddress(newAddress)\n            setOpenMenu(true)\n            setOpenAddAddress(true)\n        }\n    }, [newAddress])\n\n    return (\n        <DropDown title={<><FaAddressCard/>Address Book</>} className=\"address-book\" open={isOpen} onChange={onDropDownChange}>\n            <div className=\"heading\">\n                <div className=\"title\">\n                    <FaAddressCard/> Address Book\n                </div>\n                {\n                    !openAddAddress ?\n                        <div className=\"button\" onClick={() => setOpenAddAddress(true)}>\n                            <MdOutlineAdd/>\n                        </div>\n                        :\n                        <div className=\"button\" onClick={() => setOpenAddAddress(false)}>\n                            <MdClose/>\n                        </div>\n                }\n            </div>\n            {\n                openAddAddress ?\n                    <div id=\"add-address\" className=\"content\">\n                        <div className=\"fields\">\n                            <TextInput autoComplete=\"nope\" placeholder=\"Name\" value={name} onInput={value => setName(value)}/>\n                            <TextInput autoComplete=\"nope\" placeholder=\"Address\" value={address} onInput={value => setAddress(value)}/>\n                        </div>\n                        <Button clear small disabled={!isAddAddressFormValid} onClick={onAddAddress}>\n                            <MdOutlineAdd/> Add Address\n                        </Button>\n                    </div>\n                    :\n                    !addresses.length ?\n                        <div className=\"content\">\n                            Your Address Book is empty.\n                        </div>\n                        :\n                        <div className=\"content\">\n                            <AddressList\n                                addresses={addresses}\n                                onSelectAddress={selectAddress}\n                                removeAddress={removeAddress}\n                            />\n                        </div>\n            }\n        </DropDown>\n    )\n}\n\nexport default AddressBook","import { names, tokens } from 'consts/humanizerInfo'\n\nconst isValidAddress = address => /^0x[a-fA-F0-9]{40}$/.test(address)\n\nconst isKnownTokenOrContract = address => {\n    const addressToLowerCase = address.toLowerCase()\n    const tokensAddresses = Object.keys(tokens)\n    const contractsAddresses = Object.keys(names)\n    return tokensAddresses.includes(addressToLowerCase) || contractsAddresses.includes(addressToLowerCase)\n}\n\nexport {\n    isValidAddress,\n    isKnownTokenOrContract\n}","import './AddressWarning.scss'\n\nimport { MdOutlineAdd } from 'react-icons/md'\nimport { Checkbox } from 'components/common'\nimport { useEffect, useMemo, useState } from 'react'\nimport { isValidAddress, isKnownTokenOrContract } from 'lib/address';\n\nconst AddressWarning = ({ address, onChange, onAddNewAddress, isKnownAddress }) => {\n    const [confirmed, setConfirmed] = useState(false)\n    const unknownWarning = useMemo(() => isValidAddress(address) && !isKnownAddress(address), [address, isKnownAddress])\n    const smartContractWarning = useMemo(() => isKnownTokenOrContract(address), [address])\n\n    useEffect(() => {\n        if (onChange) onChange(confirmed)\n    }, [confirmed, onChange])\n\n    return (\n        <>\n            {\n                !smartContractWarning && unknownWarning ?\n                    <div id=\"unknown-address-warning\">\n                        <Checkbox\n                            label=\"Confirm sending to a previously unknown address\"\n                            checked={confirmed}\n                            onChange={({ target }) => setConfirmed(target.checked)}\n                        />\n                        <div className=\"button\" onClick={onAddNewAddress}>\n                            <MdOutlineAdd/>\n                            Add it to the address book\n                        </div>\n                    </div>\n                    :\n                    null\n            }\n        </>\n    )\n}\n\nexport default AddressWarning","import './Button.scss'\n\nconst Button = ({ children, className, small, mini, icon, iconAfter, disabled, onClick, red, danger, clear, border, title, type }) => {\n    return (\n        <button\n            onClick={(...args) => !disabled && onClick && onClick.apply(this, args)}\n            className={`buttonComponent ${className} ${small ? 'small' : ''} ${mini ? 'mini' : ''} ${danger || red ? 'danger' : ''} ${clear ? 'clear' : ''} ${border ? 'border' : ''} ${disabled ? 'disabled' : ''}`}\n            // disabled={disabled} // causing pointer-events to not trigger \n            title={title}\n            // used with <form>\n            type={type}\n        >\n            { icon ? <div className=\"icon-button\">{ icon }</div> : null }\n            { children }\n            { iconAfter ? <div className=\"icon-button\">{ iconAfter }</div> : null }\n        </button>\n    )\n}\n\nexport default Button\n","import './Chart.scss';\n\nimport DonutChart from \"react-donut-chart\";\nimport { useState } from 'react';\n\nconst Chart = ({ data, size }) => {\n    const [hoveredItem, setHoveredItem] = useState({});\n\n    const colors = [\n        \"#AA6AFF\",\n        \"#80FFDB\",\n        \"#8088FF\",\n        \"#E680FF\",\n        \"#A5FF80\",\n        \"#E6FF80\",\n        \"#FFC480\",\n        \"#FF8080\",\n    ];\n    \n    const strokeColor = \"transparent\";\n    const innerRadius = 0.5;\n    const selectedOffset = 0.05;\n\n    const onMouseEnter = (item) => {\n        setHoveredItem(item.label);\n    };\n\n    const onClick = (item, toggled) => {\n        if (toggled) {\n            console.log(item);\n        }\n    };\n\n    const sortData = data => {\n        return data.sort((a, b) => b.value - a.value);\n    };\n\n    const getItemColor = index => {\n        const colorCount = colors.length - 1;\n        return index > colorCount ? colors[index - (colors.length * Math.trunc(index / colors.length))] : colors[index];\n    };\n\n    return (\n        <div className=\"chart\">\n            <DonutChart\n                className=\"donut\"\n                height={size}\n                width={size}\n                onMouseEnter={(item) => onMouseEnter(item)}\n                data={sortData(data)}\n                colors={colors}\n                startAngle={-90}\n                strokeColor={strokeColor}\n                innerRadius={innerRadius}\n                selectedOffset={selectedOffset}\n                legend={false}\n                onClick={(item, toggled) => onClick(item, toggled)}\n            />\n            <div className=\"legend\" style={{maxHeight: size}}>\n                {\n                    data.map((item, i) => (\n                        <div className={`item ${hoveredItem === item.label ? 'active' : ''}`} key={`item-${i}`}>\n                            <div className=\"color\" style={{backgroundColor: getItemColor(i)}}/>\n                            <label>{ item.label }</label>\n                            <div className=\"separator\"></div>\n                            <div className=\"percent\">\n                                { parseFloat(item.value).toFixed(2) }%\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Chart;","import React, { forwardRef } from 'react';\nimport './Checkbox.scss'\n\nconst Checkbox = forwardRef((props, ref) => {\n    const inputElem =  (\n        <input type=\"checkbox\" checked={props.checked} required={props.required} onChange={props.onChange} ref={ref}/>\n    )\n\n    return props.label ? (<label className={`checkbox-container ${props.disabled ? 'disabled': ''}`}>\n        {inputElem}\n        <div className=\"checkbox-mark\"></div>\n        <div className=\"checkbox-label\">{props.label}</div>\n    </label>) : (<>\n        {inputElem}\n        <div className=\"checkbox-mark\"></div>\n    </>)\n})\n\nexport { Checkbox as default }","import { useEffect } from 'react';\n\nexport default function useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = (event) => {\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n                handler(event);\n            };\n            document.addEventListener(\"mousedown\", listener);\n            document.addEventListener(\"touchstart\", listener);\n                return () => {\n                    document.removeEventListener(\"mousedown\", listener);\n                    document.removeEventListener(\"touchstart\", listener);\n                };\n        },\n        [ref, handler]\n    );\n}","import './DropDown.scss'\n\nimport { useEffect, useRef, useState } from 'react';\nimport { BsChevronDown } from 'react-icons/bs'\nimport { CSSTransition } from 'react-transition-group';\nimport useOnClickOutside from 'hooks/onClickOutside';\n\nexport default function DropDown({ children, id, icon, className, title, badge, open, closeOnClick, onChange, onOpen, onClose, style }) {\n    const ref = useRef();\n    const transitionRef = useRef();\n    const [isMenuOpen, setMenuOpen] = useState(false);\n\n    useEffect(() => setMenuOpen(open), [open]);\n    useEffect(() => onChange && onChange(isMenuOpen), [onChange, isMenuOpen]);\n    useEffect(() => !isMenuOpen && onClose && onClose(), [isMenuOpen, onClose]);\n    useEffect(() => isMenuOpen && onOpen && onOpen(), [isMenuOpen, onOpen])\n    useOnClickOutside(ref, () => setMenuOpen(false));\n\n    return (\n        <div id={id} style={style} className={`dropdown ${className}`} ref={ref}>\n            <div className=\"content\" onClick={() => setMenuOpen(!isMenuOpen)}>\n                {\n                    icon ?\n                        <div className=\"icon\" style={{backgroundImage: `url(${icon})`}} />\n                        :\n                        null\n                }\n                <div className=\"title\">{ title }</div>\n                {\n                    badge ? \n                        <div className=\"badge\">\n                            { badge > 9 ? '9+' : badge }\n                        </div>\n                        :\n                        null\n                }\n                <div className=\"separator\"></div>\n                <div className={`handle ${isMenuOpen ? 'open' : ''}`}>\n                    <BsChevronDown size={20}></BsChevronDown>\n                </div>\n            </div>\n            <CSSTransition unmountOnExit in={isMenuOpen} timeout={200} classNames=\"fade\" nodeRef={transitionRef}>\n                <div className=\"menu\" ref={transitionRef} onClick={closeOnClick ? () => setMenuOpen(false) : null}>\n                    { children }\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}","import './Loading.scss';\n\nimport { AiOutlineLoading } from 'react-icons/ai';\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <div className=\"icon\">\n                <AiOutlineLoading size={35}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;","import './Loading.scss';\n\nconst AmbireLoading = () => {\n    return (\n        <div className=\"ambire-loading-animation-128\">\n        </div>\n    );\n};\n\nexport default AmbireLoading;","import './Loading.scss';\n\nconst Skeleton = ({children}) => {\n    return (\n        <div className=\"Skeleton\">\n            <div className=\"\">\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Skeleton;","import './ToastProvider.scss';\n\nimport React, { createRef, useState, useCallback, useEffect } from \"react\";\nimport { MdOutlineClose } from 'react-icons/md';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useHistory } from 'react-router-dom'\n\nconst ToastContext = React.createContext(null);\n\nlet id = 0\n\nconst ToastProvider = ({ children }) => {\n    const history = useHistory()\n    const [toasts, setToasts] = useState([]);\n\n    const removeToast = useCallback(id => {\n        setToasts(toasts => toasts.filter(t => t.id !== id));\n    }, []);\n\n    const addToast = useCallback((content, options) => {\n        const defaultOptions = {\n            timeout: 8000,\n            error: false,\n            position: 'center',\n            sticky: false,\n            badge: null,\n            onClick: null,\n            url: null,\n            route: null,\n        }\n\n        const toast = {\n            id: id++,\n            content,\n            ref: createRef(),\n            ...defaultOptions,\n            ...options\n        }\n        \n        setToasts(toasts => [\n            ...toasts,\n            toast\n        ]);\n\n        !toast.sticky && setTimeout(() => removeToast(toast.id), toast.timeout)\n\n        return toast.id;\n    }, [setToasts, removeToast]);\n\n    const updateToastsPositions = useCallback(() => {\n        toasts\n            .filter(({ sticky }) => !sticky)\n            .forEach(({ id, ref }) => {\n                const toastElement = ref.current\n                if (!toastElement) return\n\n                let bottomToasts = []\n                for (let i = id; i <= toasts[toasts.length - 1].id; i++) {\n                    const element = toasts.filter(({ sticky }) => !sticky).find(({ id }) => id === i)\n                    if (element) bottomToasts.push(element)\n                }\n\n                const style = getComputedStyle(toastElement)\n                const marginBottom = parseInt(style.marginBottom)\n\n                const x = (document.body.clientWidth / 2) - (toastElement.clientWidth / 2)\n                const y = bottomToasts.map(({ ref }) => ref.current && ref.current.offsetHeight).reduce((acc, curr) => acc + curr + marginBottom, 0)\n                toastElement.style.transform = `translate(${x}px, -${y}px)`\n            })\n    }, [toasts])\n\n    useEffect(() => updateToastsPositions(), [toasts, updateToastsPositions])\n    useEffect(() => {\n        const onResize = () => updateToastsPositions()\n        window.addEventListener('resize', onResize, false);\n        return () => window.removeEventListener('resize', onResize, false);\n    }, [updateToastsPositions])\n\n    const onToastClick = (id, onClick, url, route) => {\n        if (url) window.open(url, '_blank')\n        else if (route) history.push(route)\n        onClick ? onClick() : removeToast(id)\n    }\n    \n    return (\n        <ToastContext.Provider\n            value={{\n                addToast,\n                removeToast\n            }}\n        >\n            <div id=\"toast-container\" className={!toasts.length ? 'hide' : ''}>\n                <TransitionGroup className=\"transition-group\">\n                {\n                    toasts.map(({ id, ref, url, route, error, sticky, badge, position, content, onClick }) => (\n                        <CSSTransition timeout={200} classNames=\"slide-fade\" key={id} nodeRef={ref}>\n                            <div className={`toast ${error ? 'error' : ''} ${sticky ? 'sticky' : ''} ${position ? position : ''}`} ref={ref}>\n                                <div className=\"inner\" onClick={() => onToastClick(id, onClick, url, route)}>\n                                    { badge ? <div className=\"badge\">{ badge }</div> : null }\n                                    { content }\n                                </div>\n                                {\n                                    sticky ? \n                                        <div className=\"close\" onClick={() => removeToast(id)}>\n                                            <MdOutlineClose/>\n                                        </div>\n                                        :\n                                        null\n                                }\n                            </div>\n                        </CSSTransition>\n                    ))\n                }\n                </TransitionGroup>\n            </div>\n            { children }\n        </ToastContext.Provider>\n    );\n};\n\nexport { ToastContext };\nexport default ToastProvider;","import { useContext } from 'react';\nimport { ToastContext } from 'components/ToastProvider/ToastProvider';\n\nconst useToasts = () => {\n    return useContext(ToastContext);\n};\n\nexport { useToasts };","const networks = [{\n\t\tid: 'ethereum',\n\t\tchainId: 1,\n\t\t//rpc: 'https://mainnet.infura.io/v3/3d22938fd7dd41b7af4197752f83e8a1',\n\t\t//rpc: 'https://morning-wild-water.quiknode.pro/66011d2c6bdebc583cade5365086c8304c13366c/',\n\t\trpc: 'https://mainnet.infura.io/v3/d4319c39c4df452286d8bf6d10de28ae',\n\t\tnativeAssetSymbol: 'ETH',\n\t\tname: 'Ethereum',\n\t\ticon: '/resources/networks/ethereum.png',\n\t\texplorerUrl: 'https://etherscan.io'\n\t},  {\n\t\tid: 'polygon',\n\t\tchainId: 137,\n\t\trpc: 'https://polygon-rpc.com/rpc',\n\t\tnativeAssetSymbol: 'MATIC',\n\t\tname: 'Polygon',\n\t\ticon: '/resources/networks/polygon.png',\n\t\texplorerUrl: 'https://polygonscan.com'\n\t}, {\n\t\tid: 'avalanche',\n\t\tchainId: 43114,\n\t\trpc: 'https://api.avax.network/ext/bc/C/rpc',\n\t\tnativeAssetSymbol: 'AVAX',\n\t\tname: 'Avalanche',\n\t\ticon: '/resources/networks/avalanche.png',\n\t\texplorerUrl: 'https://snowtrace.io'\n\t}, {\n\t\t// to match the zapper ID\n\t\tid: 'binance-smart-chain',\n\t\tchainId: 56,\n\t\trpc: 'https://bsc-dataseed1.defibit.io',\n\t\tnativeAssetSymbol: 'BNB',\n\t\tname: 'Binance Smart Chain',\n\t\ticon: '/resources/networks/bsc.png',\n\t\texplorerUrl: 'https://bscscan.com'\n\t}, {\n\t\tid: 'fantom',\n\t\tchainId: 250,\n\t\trpc: 'https://rpc.ftm.tools',\n\t\tnativeAssetSymbol: 'FTM',\n\t\tname: 'Fantom Opera',\n\t\ticon: '/resources/networks/fantom.png',\n\t\texplorerUrl: 'https://ftmscan.com'\n\t}/*, {\n\t\tid: 'arbitrum',\n\t\tchainId: 42161,\n\t\trpc: 'https://arb1.arbitrum.io/rpc',\n\t\tnativeAssetSymbol: 'AETH',\n\t\tname: 'Arbitrum',\n\t\ticon: '/resources/networks/arbitrum.svg',\n\t\texplorerUrl: 'https://arbiscan.io'\n}*/]\n\nexport default networks\n","export const RAMP_HOST_API_KEY = process.env.REACT_APP_RAMP_HOST_API_KEY;\nexport const PAYTRIE_PARTNER_URL = process.env.REACT_APP_PAYTRIE_PARTNER_URL;\nexport const TRANSAK_API_KEY = process.env.REACT_APP_TRANSAK_API_KEY;\nexport const TRANSAK_ENV = process.env.REACT_APP_TRANSAK_ENV;\nexport const ZAPPER_API_KEY = process.env.REACT_APP_ZAPPER_API_KEY;\nexport const ZAPPER_API_ENDPOINT = process.env.REACT_APP_ZAPPER_API_ENDPOINT;\nexport const SUSHI_SWAP_FRAME = process.env.REACT_APP_SUSHI_SWAP_FRAME_URL;\nexport const VELCRO_API_ENDPOINT = process.env.REACT_APP_VELCRO_API_ENDPOINT;","// List of all supported protocols by networks: https://api.zapper.fi/v1/protocols/balances/supported?api_key=5d1237c2-3840-4733-8e92-c5a58fe81b88\n\nconst suportedProtocols = [\n    {\n        network: 'ethereum',\n        protocols: ['1inch', 'aave-v2', 'alchemix', 'badger', 'balancer-v2', 'compound', 'cream', 'curve', 'sushiswap', 'uniswap-v2', 'uniswap-v3', 'nft'],\n        balancesProvider: 'velcro',\n        nftsProvider: 'velcro'\n    },\n    {\n        network: 'polygon',\n        protocols: ['aave-v2', 'quickswap', 'sushiswap', 'nft'],\n        balancesProvider: 'velcro',\n        nftsProvider: 'velcro'\n    },\n    {\n        network: 'avalanche',\n        protocols: ['aave-v2'],\n        balancesProvider: 'velcro'\n    },\n    {\n        network: 'binance-smart-chain',\n        protocols: ['pancakeswap'],\n        balancesProvider: 'velcro'\n    },\n    {\n        network: 'fantom',\n        protocols: [],\n\tbalancesProvider: 'velcro'\n    }/*,\n    {\n        network: 'arbitrum',\n        protocols: [],\n        balancesProvider: 'velcro'\n    }*/\n]\n\nexport default suportedProtocols\n","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { nativeToken, token } from 'lib/humanReadableTransactions'\n\nconst iface = new Interface(abis.UniV2Router)\nconst recipientText = (recipient, txnFrom, extended = false) => recipient.toLowerCase() === txnFrom.toLowerCase()\n  ? !extended ? ``: [] : !extended ? ` and send it to ${recipient}` : ['and send it to', { type: 'address', address: recipient }]\n\nconst deadlineText = (deadlineSecs, mined) => {\n  if (mined) return ''\n  const minute = 60000\n  const deadline = deadlineSecs * 1000\n  const diff = deadline - Date.now()\n  if (diff < 0 && diff > -minute*2) return `, expired just now`\n  // Disabled this: this is a bit of a hack cause we don't want it to show for mined txns\n  // we don't really need it for pending ones, simply because we'll show the big error message instead\n  //if (diff < 0) return `, expired ${Math.floor(-diff / minute)} minutes ago`\n  if (diff < 0) return ''\n  if (diff < minute) return `, expires in less than a minute`\n  if (diff < 10*minute) return `, expires in ${Math.floor(diff / minute)} minutes`\n  return ''\n}\n\nconst toExtended = (fromToken, toToken, recipient, expires, atLeast = true) => {\n  const upTo = !atLeast ? ['up to'] : []\n  return [[\n    'Swap',\n    ...upTo,\n    {\n      type: 'token',\n      ...fromToken\n    },\n    atLeast ? 'for at least' : 'for',\n    {\n      type: 'token',\n      ...toToken\n    },\n    ...recipient,\n    expires\n  ]]\n}\n\nconst uniV2Mapping = {\n  // ordered in the same order as the router\n  [iface.getSighash('swapExactTokensForTokens')]: (txn, network, opts = {}) => {\n    const [ amountIn, amountOutMin, path, to, deadline ] = iface.parseTransaction(txn).args\n    const outputAsset = path[path.length - 1]\n    return !opts.extended ? \n      [`Swap ${token(path[0], amountIn)} for at least ${token(outputAsset, amountOutMin)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(token(path[0], amountIn, true), token(outputAsset, amountOutMin, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined))\n  },\n  [iface.getSighash('swapTokensForExactTokens')]: (txn, network, opts = {}) => {\n    const [ amountOut, amountInMax, path, to, deadline ] = iface.parseTransaction(txn).args\n    const outputAsset = path[path.length - 1]\n    return !opts.extended ?\n      [`Swap up to ${token(path[0], amountInMax)} for ${token(outputAsset, amountOut)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(token(path[0], amountInMax, true), token(outputAsset, amountOut, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined), false)\n  },\n  [iface.getSighash('swapExactETHForTokens')]: (txn, network, opts = {}) => {\n    const { args, value } = iface.parseTransaction(txn)\n    const [ amountOutMin, path, to, deadline ] = args\n    const outputAsset = path[path.length - 1]\n    return !opts.extended ?\n      [`Swap ${nativeToken(network, value)} for at least ${token(outputAsset, amountOutMin)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(nativeToken(network, value, true), token(outputAsset, amountOutMin, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined))\n  },\n  [iface.getSighash('swapTokensForExactETH')]: (txn, network, opts = {}) => {\n    const [ amountOut, amountInMax, path, to, deadline ] = iface.parseTransaction(txn).args\n    return !opts.extended ? \n      [`Swap up to ${token(path[0], amountInMax)} for ${nativeToken(network, amountOut)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(token(path[0], amountInMax, true), nativeToken(network, amountOut, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined), false)\n  },\n  [iface.getSighash('swapExactTokensForETH')]: (txn, network, opts = {}) => {\n    const [ amountIn, amountOutMin, path, to, deadline ] = iface.parseTransaction(txn).args\n    return !opts.extended ?\n      [`Swap ${token(path[0], amountIn)} for at least ${nativeToken(network, amountOutMin)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(token(path[0], amountIn, true), nativeToken(network, amountOutMin, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined))\n  },\n  [iface.getSighash('swapETHForExactTokens')]: (txn, network, opts = {}) => {\n    const { args, value } = iface.parseTransaction(txn)\n    const [ amountOut, path, to, deadline ] = args\n    const outputAsset = path[path.length - 1]\n    return !opts.extended ? \n      [`Swap up to ${nativeToken(network, value)} for ${token(outputAsset, amountOut)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n      : toExtended(nativeToken(network, value, true), token(outputAsset, amountOut, true), recipientText(to, txn.from, true), deadlineText(deadline, opts.mined), false)\n  },\n  // Liquidity\n  [iface.getSighash('addLiquidity')]: (txn, network, opts = {}) => {\n    const [tokenA, tokenB, amountADesired, amountBDesired, /*amountAMin*/, /*amountBMin*/, to, deadline] =  iface.parseTransaction(txn).args\n    return [`Add liquidity: ${token(tokenA, amountADesired)} and ${token(tokenB, amountBDesired)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n  },\n  [iface.getSighash('addLiquidityETH')]: (txn, network, opts = {}) => {\n    const { args, value } = iface.parseTransaction(txn)\n    const [token, amountTokenDesired, /*amountTokenMin*/, /*amountETHMin*/, to, deadline] = args\n    return [`Add liquidity: ${token(token, amountTokenDesired)} and ${nativeToken(network, value)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n  },\n  [iface.getSighash('removeLiquidity')]: (txn, network, opts = {}) => {\n    const [tokenA, tokenB, /*liquidity*/, amountAMin, amountBMin, to, deadline] =  iface.parseTransaction(txn).args\n    return [`Remove liquidity: at least ${token(tokenA, amountAMin)} and ${token(tokenB, amountBMin)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n  },\n  [iface.getSighash('removeLiquidityETH')]: (txn, network, opts = {}) => {\n    const [token, /*liquidity*/, amountTokenMin, amountETHMin, to, deadline] =  iface.parseTransaction(txn).args\n    return [`Remove liquidity: at least ${token(token, amountTokenMin)} and ${nativeToken(network, amountETHMin)}${recipientText(to, txn.from)}${deadlineText(deadline, opts.mined)}`]\n  },\n  // NOTE: We currently do not support *WithPermit functions cause they require an ecrecover signature\n  // Uniswap will detect we don't support it cause it will fail on requesting eth_signTypedData_v4\n}\n\nconst ifaceV3 = new Interface(abis.UniV3Router)\nconst parsePath = pathBytes => {\n    // some decodePacked fun\n    // can we do this with Ethers AbiCoder? probably not\n    let path = []\n    // address, uint24\n    for (let i = 2; i < pathBytes.length; i += 46) {\n      path.push('0x' + pathBytes.substr(i, 40))\n    }\n    return path\n}\n\nconst uniV3Mapping = {\n  [ifaceV3.getSighash('multicall')]: (txn, network) => {\n    const args = ifaceV3.parseTransaction(txn).args\n    const calls = args[args.length - 1]\n    // @TODO: Multicall that outputs ETH should be detected as such and displayed as one action\n    // the current verbosity of \"Swap ..., unwrap WETH to ETH\" will be a nice pedantic quirk\n    const parsed = calls.map(data => {\n      const sigHash = data.slice(0, 10)\n      const humanizer = uniV3Mapping[sigHash]\n      return humanizer ? humanizer({ ...txn, data }, network) : null\n    }).flat().filter(x => x)\n    return parsed.length ? parsed : [`Unknown Uni V3 interaction`]\n  },\n  // NOTE: selfPermit is not supported cause it requires an ecrecover signature\n  [ifaceV3.getSighash('exactInputSingle')]: (txn, network, opts = {}) => {\n    const [ params ] = ifaceV3.parseTransaction(txn).args\n    // @TODO: consider fees\n    return [`Swap ${token(params.tokenIn, params.amountIn)} for at least ${token(params.tokenOut, params.amountOutMinimum)}${recipientText(params.recipient, txn.from)}${deadlineText(params.deadline, opts.mined)}`]\n  },\n  [ifaceV3.getSighash('exactInput')]: (txn, network, opts = {}) => {\n    const [ params ] = ifaceV3.parseTransaction(txn).args\n    const path = parsePath(params.path)\n    return [`Swap ${token(path[0], params.amountIn)} for at least ${token(path[path.length - 1], params.amountOutMinimum)}${recipientText(params.recipient, txn.from)}${deadlineText(params.deadline, opts.mined)}`]\n  },\n  [ifaceV3.getSighash('exactOutputSingle')]: (txn, network, opts = {}) => {\n    const [ params ] = ifaceV3.parseTransaction(txn).args\n    return [`Swap up to ${token(params.tokenIn, params.amountInMaximum)} for ${token(params.tokenOut, params.amountOut)}${recipientText(params.recipient, txn.from)}${deadlineText(params.deadline, opts.mined)}`]\n  },\n  [ifaceV3.getSighash('exactOutput')]: (txn, network, opts = {}) => {\n    const [ params ] = ifaceV3.parseTransaction(txn).args\n    const path = parsePath(params.path)\n    return [`Swap up to ${token(path[0], params.amountInMaximum)} for ${token(path[path.length - 1], params.amountOut)}${recipientText(params.recipient, txn.from)}${deadlineText(params.deadline, opts.mined)}`]\n  },\n  [ifaceV3.getSighash('unwrapWETH9')]: (txn, network) => {\n    const [ amountMin, recipient ] = ifaceV3.parseTransaction(txn).args\n    return [`Unwrap at least ${nativeToken(network, amountMin)}${recipientText(recipient, txn.from)}`]\n  },\n}\n\nconst ifaceV32 = new Interface(abis.UniV3Router2)\nconst uniV32Mapping = {\n  [ifaceV32.getSighash('multicall(uint256,bytes[])')]: (txn, network, opts = {}) => {\n    const [deadline, calls] = ifaceV32.parseTransaction(txn).args\n    // @TODO: Multicall that outputs ETH should be detected as such and displayed as one action\n    // the current verbosity of \"Swap ..., unwrap WETH to ETH\" will be a nice pedantic quirk\n    const parsed = calls.map(data => {\n      const sigHash = data.slice(0, 10)\n      const humanizer = uniV32Mapping[sigHash]\n      return humanizer ? humanizer({ ...txn, data }, network) : null\n    }).flat().filter(x => x)\n    return (parsed.length ? parsed : [`Unknown Uni V3 interaction`])\n      // the .slice(2) is needed cause usuall this returns something like \", expires\"... and we concat all actions with \", \" anyway\n      .concat([deadlineText(deadline.toNumber(), opts.mined).slice(2)]).filter(x => x)\n  },\n  // NOTE: selfPermit is not supported cause it requires an ecrecover signature\n  [ifaceV32.getSighash('exactInputSingle')]: (txn, network) => {\n    const [ params ] = ifaceV32.parseTransaction(txn).args\n    // @TODO: consider fees\n    return [`Swap ${token(params.tokenIn, params.amountIn)} for at least ${token(params.tokenOut, params.amountOutMinimum)}${recipientText(params.recipient, txn.from)}`]\n  },\n  [ifaceV32.getSighash('exactInput')]: (txn, network) => {\n    const [ params ] = ifaceV32.parseTransaction(txn).args\n    const path = parsePath(params.path)\n    return [`Swap ${token(path[0], params.amountIn)} for at least ${token(path[path.length - 1], params.amountOutMinimum)}${recipientText(params.recipient, txn.from)}`]\n  },\n  [ifaceV32.getSighash('exactOutputSingle')]: (txn, network) => {\n    const [ params ] = ifaceV32.parseTransaction(txn).args\n    return [`Swap up to ${token(params.tokenIn, params.amountInMaximum)} for ${token(params.tokenOut, params.amountOut)}${recipientText(params.recipient, txn.from)}`]\n  },\n  [ifaceV32.getSighash('exactOutput')]: (txn, network) => {\n    const [ params ] = ifaceV32.parseTransaction(txn).args\n    const path = parsePath(params.path)\n    return [`Swap up to ${token(path[0], params.amountInMaximum)} for ${token(path[path.length - 1], params.amountOut)}${recipientText(params.recipient, txn.from)}}`]\n  },\n  [ifaceV32.getSighash('swapTokensForExactTokens')]: (txn, network) => {\n    // NOTE: is amountInMax set when dealing with ETH? it should be... cause value and max are not the same thing\n    const { amountOut, amountInMax, path, to } = ifaceV32.parseTransaction(txn).args\n    return [`Swap up to ${token(path[0], amountInMax)} for ${token(path[path.length - 1], amountOut)}${recipientText(to, txn.from)}}`]\n  },\n  [ifaceV32.getSighash('swapExactTokensForTokens')]: (txn, network) => {\n    // NOTE: is amountIn set when dealing with ETH?\n    const { amountIn, amountOutMin, path, to } = ifaceV32.parseTransaction(txn).args\n    return [`Swap ${token(path[0], amountIn)} for at least ${token(path[path.length - 1], amountOutMin)}${recipientText(to, txn.from)}`]\n  },\n  [ifaceV32.getSighash('unwrapWETH9(uint256)')]: (txn, network) => {\n    const [ amountMin ] = ifaceV32.parseTransaction(txn).args\n    return [`Unwrap at least ${nativeToken(network, amountMin)}`]\n  },\n  [ifaceV32.getSighash('unwrapWETH9(uint256,address)')]: (txn, network) => {\n    const [ amountMin, recipient ] = ifaceV32.parseTransaction(txn).args\n    return [`Unwrap at least ${nativeToken(network, amountMin)}${recipientText(recipient, txn.from)}`]\n  },\n}\n\n\nconst mapping = { ...uniV2Mapping, ...uniV3Mapping, ...uniV32Mapping }\nexport default mapping","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { token, getName } from 'lib/humanReadableTransactions'\nimport { constants } from 'ethers'\n\nconst iface = new Interface(abis.ERC20)\n\nconst ERC20Mapping = {\n  [iface.getSighash('approve')]: (txn, network, { extended = false }) => {\n    const [ approvedAddress, amount ] = iface.parseTransaction(txn).args\n    const name = getName(approvedAddress, network)\n    const tokenName = getName(txn.to, network)\n    if (amount.eq(0)) return !extended ? [`Revoke approval for ${name} to use ${tokenName}`] : [[\n      'Revoke',\n      'approval for',\n      {\n        type: 'address',\n        address: approvedAddress,\n        name\n      },\n      'to use',\n      {\n        type: 'token',\n        ...token(txn.to, amount, true)\n      }\n    ]]\n\n    if (extended) return [[\n      'Approve',\n      {\n        type: 'address',\n        address: approvedAddress,\n        name\n      },\n      `to use${amount.eq(constants.MaxUint256) ? ' your' : ''}`,\n      {\n        type: 'token',\n        ...token(txn.to, amount, true)\n      }\n    ]]\n\n    if (amount.eq(constants.MaxUint256)) return [`Approve ${name} to use your ${tokenName}`]\n    return [`Approve ${name} to use ${token(txn.to, amount)}`]\n  },\n  [iface.getSighash('transfer')]: (txn, network, { extended }) => {\n    const [ to, amount ] = iface.parseTransaction(txn).args\n    const name = getName(to, network)\n    \n    if (extended) return [[\n      'Send',\n      {\n        type: 'token',\n        ...token(txn.to, amount, true)\n      },\n      'to',\n      {\n        type: 'address',\n        address: to,\n        name\n      }\n    ]]\n  \n    return [`Send ${token(txn.to, amount)} to ${to === name ? to : name+' ('+to+')'}`]\n  },\n  /*\n  // HACK: since this conflicts with ERC721 in terms of sigHash, but ERC721 is more likely to use this function from a user perspective, do not define this one\n  [iface.getSighash('transferFrom')]: (txn, network) => {\n    const [ from, to, amount ] = iface.parseTransaction(txn).args\n    return [`Send ${token(txn.to, amount)} from ${getName(from, network)} to ${getName(to, network)}`]\n  },*/\n}\nexport default ERC20Mapping\n","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { token } from 'lib/humanReadableTransactions'\n\nconst iface = new Interface(abis.AaveLendingPoolV2)\nconst onBehalfText = (onBehalf, txnFrom) => onBehalf.toLowerCase() !== txnFrom.toLowerCase()\n  ? ' on behalf of '+onBehalf\n  : ''\n\nconst toExtended = (action, word, token, txn, onBehalf) => {\n  return [[\n    action,\n    {\n      type: 'token',\n      ...token\n    },\n    word,\n    {\n      type: 'address',\n      address: txn.to,\n      name: 'Aave Lending Pool'\n    },\n    onBehalf ? onBehalfText(onBehalf, txn.from) : ''\n  ]]\n}\n\nconst AaveMapping = {\n  [iface.getSighash('deposit')]: (txn, network, { extended }) => {\n    const [ asset, amount, onBehalf ] = iface.parseTransaction(txn).args\n    if (extended) return toExtended('Deposit', 'to', token(asset, amount, true), txn, onBehalf)\n    return [`Deposit ${token(asset, amount)} to Aave lending pool${onBehalfText(onBehalf, txn.from)}`]\n  },\n  [iface.getSighash('withdraw')]: (txn, network, { extended }) => {\n    const [ asset, amount, onBehalf ] = iface.parseTransaction(txn).args\n    if (extended) return toExtended('Withdraw', 'from', token(asset, amount, true), txn, onBehalf)\n    return [`Withdraw ${token(asset, amount)} from Aave lending pool${onBehalfText(onBehalf, txn.from)}`]\n  },\n  [iface.getSighash('repay')]: (txn, network, { extended }) => {\n    const [ asset, amount, onBehalf ] = iface.parseTransaction(txn).args\n    if (extended) return toExtended('Repay', 'to', token(asset, amount, true), txn, onBehalf)\n    return [`Repay ${token(asset, amount)} to Aave lending pool${onBehalfText(onBehalf, txn.from)}`]\n  },\n  [iface.getSighash('borrow')]: (txn, network, { extended }) => {\n    const [ asset, amount ] = iface.parseTransaction(txn).args\n    if (extended) return toExtended('Borrow', 'from', token(asset, amount, true), txn)\n    return [`Borrow ${token(asset, amount)} from Aave lending pool`]\n  },\n}\nexport default AaveMapping","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { getName } from 'lib/humanReadableTransactions'\n\nconst iface = new Interface(abis.ERC721)\nconst fromText = (from, txnFrom) => from.toLowerCase() !== txnFrom.toLowerCase() ? ` from ${from}` : ''\n\nconst toExtended = (tokenId, from, to, txn, network) => [[\n  'Send',\n  {\n    type: 'erc721',\n    address: txn.to,\n    network: network.id,\n    id: tokenId,\n    name: `Token #${tokenId.toString(10)}${fromText(from, txn.from)}`,\n  },\n  'to',\n  {\n    type: 'address',\n    address: to,\n    name: getName(to, network)\n  }\n]]\n\nconst ERC721Mapping = {\n  [iface.getSighash('transferFrom')]: (txn, network, { extended = false }) => {\n    const [ from, to, tokenId ] = iface.parseTransaction(txn).args\n    return !extended ? [`Send token #${tokenId.toString(10)}${fromText(from, txn.from)} to ${getName(to, network)}`]\n    : toExtended(tokenId, from, to, txn, network)\n  },\n  [iface.getSighash('safeTransferFrom(address,address,uint256)')]: (txn, network, { extended = false }) => {\n    const [ from, to, tokenId ] = iface.parseTransaction(txn).args\n    return !extended ? [`Send token #${tokenId.toString(10)}${fromText(from, txn.from)} to ${getName(to, network)}`]\n    : toExtended(tokenId, from, to, txn, network)\n  }\n}\nexport default ERC721Mapping","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { nativeToken } from 'lib/humanReadableTransactions'\n\nconst toExtended = (action, network, amount) => {\n  return [[\n      action,\n      {\n        type: 'token',\n        ...nativeToken(network, amount, true)\n      }\n    ]]\n}\n\nconst iface = new Interface(abis.WETH)\nconst WETHMapping = {\n  [iface.getSighash('deposit')]: (txn, network, { extended = false }) => {\n    const { value } = iface.parseTransaction(txn)\n    return !extended ? [`Wrap ${nativeToken(network, value)}`] : toExtended('Wrap', network, value)\n  },\n  [iface.getSighash('withdraw')]: (txn, network, { extended = false }) => {\n    const [ amount ] = iface.parseTransaction(txn).args\n    return !extended ? [`Unwrap ${nativeToken(network, amount)}`] : toExtended('Unwrap', network, amount)\n  },\n}\nexport default WETHMapping","const privilegesOptions = {\n  true: '0x0000000000000000000000000000000000000000000000000000000000000001',\n  false: '0x0000000000000000000000000000000000000000000000000000000000000000',\n}\nexport default privilegesOptions\n","import { Interface } from 'ethers/lib/utils'\nimport { getName } from 'lib/humanReadableTransactions'\nimport accountPresets from 'consts/accountPresets'\nimport privilegesOptions from 'consts/privilegesOptions'\n\nconst iface = new Interface(require('adex-protocol-eth/abi/Identity5.2'))\n\nconst IdentityMapping = {\n  [iface.getSighash('setAddrPrivilege')]: (txn, network) => {\n    const [ addr, privLevel ] = iface.parseTransaction(txn).args\n    const name = getName(addr, network)\n    const isQuickAccManager = addr.toLowerCase() === accountPresets.quickAccManager.toLowerCase()\n    if (privLevel === privilegesOptions.false) {\n      if (isQuickAccManager) return [`Revoke email/password access`]\n      else return [`Revoke access for signer ${name}`]\n    } else if (privLevel === privilegesOptions.true) {\n      if (isQuickAccManager) return [`INVALID PROCEDURE - DO NOT SIGN`]\n      return [`Authorize signer ${name}`]\n    } else {\n      if (isQuickAccManager) return [`Add a new email/password signer`]\n      return [`Set special authorization for ${name}`]\n    }\n  }\n}\nexport default IdentityMapping\n","import { Interface, getAddress, hexConcat } from 'ethers/lib/utils'\nimport { generateAddress2 } from 'ethereumjs-util'\n\n// the factory can be used for deploying contracts from Ambire\nconst iface = new Interface(require('adex-protocol-eth/abi/IdentityFactory'))\n\nconst FactoryMapping = {\n  [iface.getSighash('deploy')]: (txn, network) => {\n    const [ code, salt ] = iface.parseTransaction(txn).args\n    const addr = getAddress('0x' + generateAddress2(txn.to, hexConcat([salt]), code).toString('hex'))\n    return [`Deploy contract with address ${addr}`]\n  }\n}\nexport default FactoryMapping\n","import { abis, yearnVaults, tesseractVaults } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { token } from 'lib/humanReadableTransactions'\n\nconst iface = new Interface(abis.YearnVault)\n\nconst vaultNames = { ethereum: 'Yearn', polygon: 'Tesseract' }\nconst tokenPrefixes = { ethereum: 'y', polygon: 'tv' }\n// add 'y' or 'tv' prefix, eg '10 USDC' will become '10 yUSDC' to signify vault tokens\nconst addTokenPrefix = (token, network) => token.split(' ').map((x, i) => i === 1 ? tokenPrefixes[network]+x : x).join(' ')\nconst getVaultInfo = ({ to }) => yearnVaults.find(x => x.addr === to) || tesseractVaults.find(x => x.addr === to)\n\nconst toExtendedRich = (action, word, vaultInfo, amount) => [[\n  action,\n  {\n    type: 'token',\n    ...token(vaultInfo.baseToken, amount, true)\n  },\n  word,\n  {\n    type: 'address',\n    name: vaultInfo.name,\n    address: vaultInfo.addr\n  }\n]]\n\nconst toExtended = (action, word, network, amount) => [[\n  action,\n  {\n    type: 'token',\n    symbol: 'units',\n    amount: amount.toString()\n  },\n  word,\n  {\n    type: 'address',\n    name: vaultNames[network.id]\n  }\n]]\n\nconst YearnTesseractMapping = {\n  [iface.getSighash('deposit(uint256,address)')]: (txn, network, { extended = false }) => {\n    const [ amount ] = iface.parseTransaction(txn).args\n    const vaultInfo = getVaultInfo(txn)\n    if (vaultInfo) return !extended ? [`Deposit ${token(vaultInfo.baseToken, amount)} to ${vaultInfo.name}`] : toExtendedRich('Deposit', 'to', vaultInfo, amount)\n    return !extended ? [`Deposit ${amount} units to ${vaultNames[network.id]}`] : toExtended('Deposit', 'to', network, amount)\n  },\n  [iface.getSighash('withdraw(uint256,address)')]: (txn, network, { extended = false }) => {\n    const [ amount ] = iface.parseTransaction(txn).args\n    const vaultInfo = getVaultInfo(txn)\n    if (vaultInfo) return !extended ? [`Withdraw ${addTokenPrefix(token(vaultInfo.baseToken, amount), network.id)} from ${vaultInfo.name}`] : toExtendedRich('Withdraw', 'from', vaultInfo, amount)\n    return !extended ? [`Withdraw ${amount} units from ${vaultNames[network.id]}`] : toExtended('Withdraw', 'from', network, amount)\n  },\n}\nexport default YearnTesseractMapping","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport { formatNativeTokenAddress, token } from 'lib/humanReadableTransactions'\nimport networks from 'consts/networks'\n\nconst MovrAnyswapInterface = new Interface(abis.MovrAnyswap)\nconst MovrRouterInterface = new Interface(abis.MovrRouter)\n\nconst getNetwork = (chainId, extended = false) => {\n  const network = networks.find(n => n.chainId === Number(chainId))\n  return !extended ? network.name : network\n}\n\nconst toExtended = (fromToken, network, toToken) => {\n  return [[\n    'Transfer',\n    {\n      type: 'token',\n      ...fromToken\n    },\n    'to',\n    {\n      type: 'network',\n      ...network\n    },\n    'for',\n    {\n      type: 'token',\n      ...toToken\n    }\n  ]]\n}\n\nconst MovrMapping = {\n  [MovrAnyswapInterface.getSighash('outboundTransferTo')]: (txn, network, { extended = false }) => {\n    const { middlewareInputToken, amount, tokenToBridge, toChainId } = MovrAnyswapInterface.parseTransaction(txn).args[0]\n    return !extended ?\n      [`Transfer ${token(middlewareInputToken, amount)} to ${getNetwork(toChainId)} for ${token(tokenToBridge)}`]\n      : toExtended(token(middlewareInputToken, amount, true), getNetwork(toChainId, true), token(tokenToBridge, null, true))\n  },\n  [MovrRouterInterface.getSighash('outboundTransferTo')]: (txn, network, { extended = false }) => {\n    const { middlewareRequest, amount, bridgeRequest, toChainId } = MovrRouterInterface.parseTransaction(txn).args[0]\n    const { inputToken } = middlewareRequest\n    const { inputToken: outputToken } = bridgeRequest\n    return !extended ?\n      [`Transfer ${token(formatNativeTokenAddress(inputToken), amount)} to ${getNetwork(toChainId)} for ${token(formatNativeTokenAddress(outputToken))}`]\n      : toExtended(token(formatNativeTokenAddress(inputToken), amount, true), getNetwork(toChainId, true), token(formatNativeTokenAddress(outputToken), null, true))\n  },\n}\nexport default MovrMapping","import { Interface } from 'ethers/lib/utils'\nimport WALLETSupplyControllerABI from 'consts/WALLETSupplyControllerABI'\n\nconst iface = new Interface(WALLETSupplyControllerABI)\n\nconst toExtended = (isExtended, action) => {\n  return isExtended ? [[ action ]] : [action]\n}\n\nconst WALLETSupplyControllerMapping = {\n  [iface.getSighash('claim')]: (txn, network, { extended = false }) => {\n    return toExtended(extended, 'claim rewards')\n  },\n  [iface.getSighash('mintVesting')]: (txn, network, { extended = false }) => {\n    return toExtended(extended, 'claim vested tokens')\n  },\n}\nexport default WALLETSupplyControllerMapping\n","import { abis } from 'consts/humanizerInfo'\nimport { Interface } from 'ethers/lib/utils'\nimport humanizers from './'\n\nconst iface = new Interface(abis.Batcher)\n\nconst AmbireBatcher = {\n  [iface.getSighash('batchCall')]: (txn, network, opts) => {\n    const { txns } = iface.parseTransaction(txn).args\n    const { to, value, data, from } = txns[txns.length - 1]\n    const sigHash = data.slice(0, 10)\n    const humanizer = humanizers[sigHash]\n    return humanizer({ to, value, data, from }, network, opts)\n  },\n}\nexport default AmbireBatcher","import UniRouters from './UniRouters'\nimport ERC20 from './ERC20'\nimport AaveLendingPoolV2 from './AaveLendingPoolV2'\nimport ERC721 from './ERC721'\nimport WETH from './WETH'\nimport AmbireIdentity from './AmbireIdentity'\nimport AmbireFactory from './AmbireFactory'\nimport YearnTesseractVault from './YearnTesseractVault'\nimport Movr from './Movr'\nimport WALLETSupplyController from './WALLETSupplyController'\nimport AmbireBatcher from './AmbireBatcher'\n\nconst all = {\n\t...UniRouters,\n\t...AaveLendingPoolV2,\n\t...ERC20,\n\t...ERC721,\n\t...WETH,\n\t...AmbireIdentity,\n\t...AmbireFactory,\n\t...YearnTesseractVault,\n\t...Movr,\n\t...WALLETSupplyController,\n\t...AmbireBatcher\n}\nexport default all","import { formatUnits } from 'ethers/lib/utils'\nimport { constants } from 'ethers'\nimport { names, tokens } from 'consts/humanizerInfo'\nimport networks from 'consts/networks'\nimport humanizers from './humanizers'\n\n// address (lwoercase) => name\nconst knownAliases = {}\n// address (lowercase) => [symbol, decimals]\nconst knownTokens = {}\n\nexport const formatNativeTokenAddress = address => address.toLowerCase() === `0x${'e'.repeat(40)}` ? `0x${'0'.repeat(40)}` : address.toLowerCase()\n\nexport function getTransactionSummary(txn, networkId, accountAddr, opts = {}) {\n    const [to, value, data = '0x'] = txn\n    const network = networks.find(x => x.id === networkId || x.chainId === networkId)\n    if (!network) return 'Unknown network (unable to parse)'\n\n    if (to === '0x' || !to) {\n        return 'Deploy contract'\n    }\n\n    const tokenInfo = tokens[to.toLowerCase()]\n    const name = names[to.toLowerCase()]\n\n    if (data === '0x' && to.toLowerCase() === accountAddr.toLowerCase()) {\n        // Doesn't matter what the value is, this is always a no-op\n        return !opts.extended ? `Transaction cancellation` : [[\n            'Cancel',\n            'transaction'\n        ]]\n    }\n\n    let callSummary, sendSummary\n    if (parseInt(value) > 0) sendSummary = !opts.extended ? `send ${nativeToken(network, value)} to ${name || to}` : [\n        'Send',\n        {\n            type: 'token',\n            ...nativeToken(network, value, true),\n        },\n        'to',\n        {\n            type: 'address',\n            address: to,\n            name\n        }\n    ]\n\n    if (data !== '0x') {\n        callSummary = !opts.extended ? `Unknown interaction with ${name || (tokenInfo ? tokenInfo[0] : to)}` : [\n            'unknown',\n            'interaction with',\n            {\n                type: 'address',\n                address: to,\n                name: name || (tokenInfo && tokenInfo[0])\n            }\n        ]\n\n        const sigHash = data.slice(0, 10)\n        const humanizer = humanizers[sigHash]\n        if (humanizer) {\n            try {\n                const actions = humanizer({ to, value, data, from: accountAddr }, network, opts)\n                return opts.extended === true ? actions : actions.join(', ')\n            } catch (e) {\n                callSummary += ' (unable to parse)'\n                console.error('internal tx humanization error', e)\n            }\n        }\n    }\n\n    const filteredSummary = [callSummary, sendSummary].filter(x => x)\n    return !opts.extended ? filteredSummary.join(', ') : filteredSummary\n}\n\n// Currently takes network because one day we may be seeing the same addresses used on different networks\nexport function getName(addr, network) {\n    const address = addr.toLowerCase()\n    if (knownAliases[address]) return knownAliases[address]\n    return names[address] || (tokens[address] ? tokens[address][0] + ' token' : null) || addr\n}\n\nexport function token(addr, amount, extended = false) {\n    const address = addr.toLowerCase()\n    const assetInfo = tokens[address] || knownTokens[address]\n\n    if (assetInfo) {\n        const extendedToken = {\n            address,\n            symbol: assetInfo[0],\n            decimals: assetInfo[1],\n            amount: null\n        }\n\n        if (!amount) return !extended ? assetInfo[0] : extendedToken\n\n        if (constants.MaxUint256.eq(amount)) return !extended ? `maximum ${assetInfo[0]}` : {\n            ...extendedToken,\n            amount: -1\n        }\n    \n        return !extended ? `${formatUnits(amount, assetInfo[1])} ${assetInfo[0]}` : {\n            ...extendedToken,\n            amount: formatUnits(amount, assetInfo[1])\n        }\n    } else {\n        return !extended ? `${formatUnits(amount, 0)} units of unknown token` : {\n            address,\n            symbol: null,\n            decimals: null,\n            amount: formatUnits(amount, 0)\n        }\n    }\n}\n\nexport function nativeToken(network, amount, extended = false) {\n    const extendedNativeToken = {\n        address: `0x` + '0'.repeat(40),\n        symbol: 'unknown native token',\n        decimals: 18,\n    }\n\n    // All EVM chains use a 18 decimal native asset\n    if (network) {\n        return !extended ? `${formatUnits(amount, 18)} ${network.nativeAssetSymbol}` : {\n            ...extendedNativeToken,\n            symbol: network.nativeAssetSymbol,\n            amount: formatUnits(amount, 18)\n        }\n    } else {\n        return !extended ? `${formatUnits(amount, 18)} unknown native token` : {\n            ...extendedNativeToken,\n            amount: formatUnits(amount, 18)\n        }\n    }\n}\n\nexport function setKnownAddresses(addrs) {\n    addrs.forEach(({ address, name }) => knownAliases[address.toLowerCase()] = name)\n}\n\nexport function setKnownTokens(tokens) {\n    tokens.forEach(({ address, symbol, decimals }) => knownTokens[address.toLowerCase()] = [symbol, decimals])\n}\n\nexport function isKnown(txn, from) {\n    if (txn[0] === from) return true\n    const address = txn[0].toLowerCase()\n    return !!(knownAliases[address] || names[address] || tokens[address] || knownTokens[address])\n}\n\nexport {\n    knownAliases,\n    knownTokens\n}\n\n// @TODO\n// export function getMethodName(txn)","import networks from 'consts/networks'\nimport { providers } from 'ethers'\n\n// Cache provider instances by a network id\n// For instance: { 'ethereum': new providers.StaticJsonRpcProvider }\nconst providersByNetwork = {}\n\nexport function getProvider (networkId) {\n  const network = networks.find(({ id }) => id === networkId)\n  if (!network) throw new Error(`getProvider called with non-existent network: ${networkId}`)\n\n  // If the provider instance is already created, just reuse the cached instance,\n  // instead of creating the same object again.\n  if (providersByNetwork[networkId]) return providersByNetwork[networkId]\n\n  const { id: name, chainId } = network\n  const url = network.rpc\n\n  if (url.startsWith('wss:')) {\n    providersByNetwork[networkId] = new providers.WebSocketProvider(url, { name, chainId })\n  }\n  else {\n    providersByNetwork[networkId] = new providers.StaticJsonRpcProvider(url, { name, chainId })\n  }\n\n  return providersByNetwork[networkId]\n}\n\n","import { ethers } from 'ethers'\nimport oracle from 'adex-protocol-eth/abi/RemainingBalancesOracle.json'\nimport tokenList from 'consts/tokenList.json'\nimport { getProvider } from 'lib/provider'\n\nconst { Interface, AbiCoder, formatUnits, hexlify, isAddress } = ethers.utils\nconst RemainingBalancesOracle = new Interface(oracle)\nconst SPOOFER = '0x0000000000000000000000000000000000000001'\nconst blockTag = 'pending'\nconst remainingBalancesOracleAddr = '0xF1628de74193Dde3Eed716aB0Ef31Ca2b6347eB1'\n\nasync function getTokenListBalance ({walletAddr, tokens, network, updateBalance}) {\n  let result = await call({ walletAddr, tokens, network })\n  if (result.success) {\n    const newBalance = tokens.map(t => {\n      const newTokenBalance = result.data.filter(r => r.address === t.address && parseFloat(r.balance) > 0)[0]\n      return (newTokenBalance ? {\n        type: \"base\",\n        network: network,\n        address: newTokenBalance.address,\n        decimals: newTokenBalance.decimals,\n        symbol: newTokenBalance.symbol,\n        price: newTokenBalance.price || 0,\n        balance: Number(newTokenBalance.balance),\n        balanceRaw: newTokenBalance.balanceRaw,\n        updateAt: (new Date()).toString(),\n        balanceUSD: Number(parseFloat(newTokenBalance.price * newTokenBalance.balance || 0).toFixed(2)),\n        tokenImageUrl: newTokenBalance.tokenImageUrl || `https://storage.googleapis.com/zapper-fi-assets/tokens/${network}/${newTokenBalance.address}.png`\n      } : t)\n    }).filter (t => t && t.balance) //&& parseFloat(t.balance) > 0\n    if (updateBalance && typeof updateBalance === 'function') updateBalance(newBalance)\n    return newBalance\n  } else {\n    console.error(result.message, result.data)\n    return tokens\n  }\n}\n\n//ToDo check for missing data and double check for incompleted returns\nasync function call ({ walletAddr, tokens, network }) {\n  if (!isAddress(walletAddr)) return {success: false, data: walletAddr, message:`Wallet address is not valide eth address`}\n  const provider = getProvider(network)\n  const coder = new AbiCoder()\n  const args = [\n    // identityFactoryAddr\n    '0xBf07a0Df119Ca234634588fbDb5625594E2a5BCA',\n    // bytecode dummy.sol\n    '0x6080604052348015600f57600080fd5b50604880601d6000396000f3fe6080604052348015600f57600080fd5b5000fea2646970667358221220face6a0e4f251ee8ded32eb829598230ad218691166fa0a46bc85583c202c60c64736f6c634300080a0033',\n    // salt\n    '0x0000000000000000000000000000000000000000000000000000000000000001',\n    // txns\n    [['0x0000000000000000000000000000000000000000', '0x0', '0x0000000000000000000000000000000000000000']],\n    '0x000000000000000000000000000000000000000000000000000000000000000000',\n    walletAddr,\n    tokens.map(x => x.address)\n  ]\n  const txParams = {\n    from: SPOOFER,\n    to: remainingBalancesOracleAddr,\n    data: RemainingBalancesOracle.encodeFunctionData('getRemainingBalances', args)\n  }\n  const callResult = await provider.call(txParams, blockTag)\n  if (isErr(callResult)) throw new Error(`probably one ot following tokens is not ERC20 and missing balanceOf()`)\n  const balances = coder.decode(['uint[]'], callResult)[0]\n  const result = tokens.map((x, i) => ({ ...x, balanceRaw: balances[i].toString(), balance: parseFloat(formatUnits(balances[i], x.decimals)).toFixed(10) }))\n  return { success: true, data: result }\n}\n\n// Signature of Error(string)\nconst ERROR_SIG = '0x08c379a0'\n// Signature of Panic(uint256)\nconst PANIC_SIG = '0x4e487b71'\n\nfunction isErr (hex) {\n\treturn hex.startsWith(ERROR_SIG) || hex.startsWith(PANIC_SIG)\n}\n\nasync function getErrMsg (provider, txParams, blockTag) {\n\t// .call always returisErrns a hex string with ethers\n\ttry {\n\t\t// uncomment if you need HEVM debugging\n\t\t// console.log(`hevm exec --caller ${txParams.from} --address ${txParams.to} --calldata ${txParams.data} --gas 1000000 --debug --rpc ${provider.connection.rpc} ${!isNaN(blockTag) && blockTag ? '--block '+blockTag : ''}`)\n\t\tconst returnData = await provider.call(txParams, blockTag)\n    if (returnData.startsWith(PANIC_SIG)) return returnData.slice(10)\n\t\treturn returnData.startsWith(ERROR_SIG)\n\t\t\t? (new AbiCoder()).decode(['string'], '0x' + returnData.slice(10))[0]\n\t\t\t: returnData\n\t} catch (e) {\n\t\t// weird infura case\n\t\tif (e.code === 'UNPREDICTABLE_GAS_LIMIT' && e.error) return e.error.message.slice(20)\n\t\tif (e.code === 'CALL_EXCEPTION') return 'no error string, possibly insufficient amount or wrong SmartWallet sig'\n\t\tif (e.code === 'INVALID_ARGUMENT') return `unable to deserialize: ${hexlify(e.value)}`\n\t\tthrow e\n\t}\n}\n\nfunction checkTokenList (list) {\n  return list.filter(t => {\n    return isAddress(t.address)\n  })\n}\n\nexport {\n    call,\n    tokenList,\n    getErrMsg,\n    checkTokenList,\n    getTokenListBalance\n}","import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { ZAPPER_API_KEY } from 'config';\nimport { fetchGet } from 'lib/fetch';\nimport { ZAPPER_API_ENDPOINT } from 'config'\nimport supportedProtocols from 'consts/supportedProtocols';\nimport { useToasts } from 'hooks/toasts'\nimport { setKnownAddresses, setKnownTokens } from 'lib/humanReadableTransactions';\nimport { VELCRO_API_ENDPOINT } from 'config'\nimport { getTokenListBalance, tokenList, checkTokenList } from 'lib/balanceOracle'\n\nconst getBalances = (apiKey, network, protocol, address, provider) => fetchGet(`${provider === 'velcro' ? VELCRO_API_ENDPOINT : ZAPPER_API_ENDPOINT}/protocols/${protocol}/balances?addresses[]=${address}&network=${network}&api_key=${apiKey}&newBalances=true`)\n\nlet hidden, visibilityChange;\nif (typeof document.hidden !== 'undefined') {\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n} else if (typeof document.msHidden !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n} else if (typeof document.webkitHidden !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n}\nlet lastOtherProcolsRefresh = null\n\n// use Balance Oracle\nfunction paginateArray(input, limit) {\n    let pages = []\n    let from = 0\n    for (let i = 1; i <= Math.ceil(input.length / limit); i++) {\n        pages.push(input.slice(from, i * limit))\n        from += limit\n    }\n    return pages\n}\nasync function supplementTokensDataFromNetwork({ walletAddr, network, tokensData, extraTokens, updateBalance }) {\n    if (!walletAddr || walletAddr===\"\" || !network || !network === \"\" ) return []\n    if (!tokensData || !tokensData[0]) tokensData = checkTokenList(tokensData || []) //tokensData check and populate for test if undefind\n    if (!extraTokens || !extraTokens[0]) extraTokens = checkTokenList(extraTokens || [])  //extraTokens check and populate for test if undefind\n\n    // concat predefined token list with extraTokens list (extraTokens are certainly ERC20)\n    const fullTokenList = [ ...new Set(\n        tokenList[network] ? tokenList[network].concat(extraTokens) : [...extraTokens]\n    )]\n    const tokens = fullTokenList.map(t => {\n      return tokensData.find(td => td.address === t.address) || t\n    })\n    const tokensNotInList = tokensData.filter(td => {\n      return !tokens.some(t => t.address === td.address)\n    })\n\n    // tokensNotInList: call separately to prevent errors from non-erc20 tokens\n    // NOTE about err handling: errors are caught for each call in balanceOracle, and we retain the original token entry, which contains the balance\n    const calls = paginateArray(tokens, 100).concat(paginateArray(tokensNotInList, 100))\n\n    const tokenBalances = (await Promise.all(calls.map(callTokens => {\n        return getTokenListBalance({ walletAddr, tokens: callTokens, network, updateBalance })\n    }))).flat().filter(t => {\n        return extraTokens.some(et => t.address === et.address) ? true : (parseFloat(t.balance) > 0)\n    })\n    return tokenBalances\n  }\n\n\nexport default function usePortfolio({ currentNetwork, account, useStorage }) {\n    const { addToast } = useToasts()\n\n    const currentAccount = useRef();\n    const [isBalanceLoading, setBalanceLoading] = useState(true);\n    const [areProtocolsLoading, setProtocolsLoading] = useState(true);\n\n    const [tokensByNetworks, setTokensByNetworks] = useState([])\n    const [otherProtocolsByNetworks, setOtherProtocolsByNetworks] = useState([])\n\n    const [balance, setBalance] = useState({\n        total: {\n            full: 0,\n            truncated: 0,\n            decimals: '00'\n        },\n        tokens: []\n    });\n    const [otherBalances, setOtherBalances] = useState([]);\n    const [tokens, setTokens] = useState([]);\n    const [protocols, setProtocols] = useState([]);\n    const [collectibles, setCollectibles] = useState([]);\n    const [extraTokens, setExtraTokens] = useStorage({ key: 'extraTokens', defaultValue: [] });\n\n    const getExtraTokensAssets = useCallback((account, network) => extraTokens\n        .filter(extra => extra.account === account && extra.network === network)\n        .map(extraToken => ({\n            ...extraToken,\n            type: 'base',\n            price: 0,\n            balanceUSD: 0,\n            isExtraToken: true\n        }))\n    , [extraTokens])\n\n    const fetchSupplementTokenData = useCallback(async (updatedTokens) => {\n        const currentNetworkTokens = updatedTokens.find(({ network }) => network === currentNetwork) || { network: currentNetwork, meta: [], assets: [] }\n\n        const extraTokensAssets = getExtraTokensAssets(account, currentNetwork)\n        try {\n            const rcpTokenData = await supplementTokensDataFromNetwork({\n                walletAddr: account,\n                network: currentNetwork,\n                tokensData: currentNetworkTokens ? currentNetworkTokens.assets.filter(({ isExtraToken }) => !isExtraToken) : [], // Filter out extraTokens\n                extraTokens: extraTokensAssets\n            })\n\n            currentNetworkTokens.assets = rcpTokenData\n\n            setTokensByNetworks(tokensByNetworks => [\n                ...tokensByNetworks.filter(({ network }) => network !== currentNetwork),\n                currentNetworkTokens\n            ])\n\n            setBalanceLoading(false)\n        } catch(e) {\n            console.error('supplementTokensDataFromNetwork failed', e)\n        }\n    }, [getExtraTokensAssets, account, currentNetwork])\n\n    const fetchTokens = useCallback(async (account, currentNetwork = false) => {\n        try {\n            const networks = currentNetwork ? [supportedProtocols.find(({ network }) => network === currentNetwork)] : supportedProtocols\n\n            let failedRequests = 0\n            const requestsCount = networks.length\n\n            const updatedTokens = (await Promise.all(networks.map(async ({ network, balancesProvider }) => {\n                try {\n                    const balance = await getBalances(ZAPPER_API_KEY, network, 'tokens', account, balancesProvider)\n                    if (!balance) return null\n\n                    const { meta, products } = Object.values(balance)[0]\n\n                    const extraTokensAssets = getExtraTokensAssets(account, network) // Add user added extra token to handle\n                    const assets = [\n                        ...products.map(({ assets }) => assets.map(({ tokens }) => tokens)).flat(2),\n                        ...extraTokensAssets\n                    ]\n\n                    return {\n                        network,\n                        meta,\n                        assets\n                    }\n                } catch(e) {\n                    console.error('Balances API error', e)\n                    failedRequests++\n                }\n            }))).filter(data => data)\n            const updatedNetworks = updatedTokens.map(({ network }) => network)\n\n            // Prevent race conditions\n            if (currentAccount.current !== account) return\n\n            setTokensByNetworks(tokensByNetworks => ([\n                ...tokensByNetworks.filter(({ network }) => !updatedNetworks.includes(network)),\n                ...updatedTokens\n            ]))\n\n            if (!currentNetwork) fetchSupplementTokenData(updatedTokens)\n\n            if (failedRequests >= requestsCount) throw new Error('Failed to fetch Tokens from API')\n            return true\n        } catch (error) {\n            console.error(error)\n            addToast(error.message, { error: true })\n            return false\n        }\n    }, [getExtraTokensAssets, fetchSupplementTokenData, addToast])\n\n    const fetchOtherProtocols = useCallback(async (account, currentNetwork = false) => {\n        try {\n            const protocols = currentNetwork ? [supportedProtocols.find(({ network }) => network === currentNetwork)] : supportedProtocols\n\n            let failedRequests = 0\n            const requestsCount = protocols.reduce((acc, curr) => curr.protocols.length + acc, 0)\n            if (requestsCount === 0) return true\n            const updatedProtocols = (await Promise.all(protocols.map(async ({ network, protocols, nftsProvider }) => {\n                const all = (await Promise.all(protocols.map(async protocol => {\n                    try {\n                        const balance = await getBalances(ZAPPER_API_KEY, network, protocol, account, protocol === 'nft' ? nftsProvider : null)\n                        return balance ? Object.values(balance)[0] : null\n                    } catch(e) {\n                        console.error('Balances API error', e)\n                        failedRequests++\n                    }\n                }))).filter(data => data).flat()\n\n                return all.length ? {\n                    network,\n                    protocols: all\n                        .map(({ products }) =>\n                            products.map(({ label, assets }) =>\n                                ({ label, assets: assets.map(({ tokens }) => tokens).flat(1) })\n                            )\n                        )\n                        .flat(2)\n                } : null\n            }))).filter(data => data)\n            const updatedNetworks = updatedProtocols.map(({ network }) => network)\n\n            // Prevent race conditions\n            if (currentAccount.current !== account) return\n\n            setOtherProtocolsByNetworks(protocolsByNetworks => ([\n                ...protocolsByNetworks.filter(({ network }) => !updatedNetworks.includes(network)),\n                ...updatedProtocols\n            ]))\n\n            lastOtherProcolsRefresh = Date.now()\n            if (failedRequests >= requestsCount) throw new Error('Failed to fetch other Protocols from API')\n            return true\n        } catch (error) {\n            console.error(error)\n            addToast(error.message, { error: true })\n            return false\n        }\n    }, [addToast])\n\n    const refreshTokensIfVisible = useCallback(() => {\n        if (!account) return\n        if (!document[hidden] && !isBalanceLoading) fetchTokens(account, currentNetwork)\n    }, [isBalanceLoading, account, fetchTokens, currentNetwork])\n\n    const requestOtherProtocolsRefresh = async () => {\n        if (!account) return\n        if ((Date.now() - lastOtherProcolsRefresh) > 30000 && !areProtocolsLoading) await fetchOtherProtocols(account, currentNetwork)\n    }\n\n    // Make humanizer 'learn' about new tokens and aliases\n    const updateHumanizerData = tokensByNetworks => {\n        const tokensList = Object.values(tokensByNetworks).map(({ assets }) => assets).flat(1)\n        const knownAliases = tokensList.map(({ address, symbol }) => ({ address, name: symbol}))\n        setKnownAddresses(knownAliases)\n        setKnownTokens(tokensList)\n    }\n\n    const onAddExtraToken = extraToken => {\n        const { address, name, symbol } = extraToken\n        if (extraTokens.map(({ address }) => address).includes(address)) return addToast(`${name} (${symbol}) is already added to your wallet.`)\n        if (Object.values(tokenList).flat(1).map(({ address }) => address).includes(address)) return addToast(`${name} (${symbol}) is already handled by your wallet.`)\n        if (tokens.map(({ address }) => address).includes(address)) return addToast(`You already have ${name} (${symbol}) in your wallet.`)\n\n        const updatedExtraTokens = [\n            ...extraTokens,\n            {\n                ...extraToken,\n                coingeckoId: null\n            }\n        ]\n\n        setExtraTokens(updatedExtraTokens)\n        addToast(`${name} (${symbol}) token added to your wallet!`)\n    }\n\n    const onRemoveExtraToken = address => {\n        const token = extraTokens.find(t => t.address === address)\n        if (!token) return addToast(`${address} is not present in your wallet.`)\n\n        const updatedExtraTokens = extraTokens.filter(t => t.address !== address)\n\n        setExtraTokens(updatedExtraTokens)\n        addToast(`${token.name} (${token.symbol}) was removed from your wallet.`)\n    }\n\n    // Fetch balances and protocols on account change\n    useEffect(() => {\n        currentAccount.current = account\n\n        async function loadBalance() {\n            if (!account) return\n            setBalanceLoading(true)\n            if (await fetchTokens(account)) setBalanceLoading(false)\n        }\n\n        async function loadProtocols() {\n            if (!account) return\n            setProtocolsLoading(true)\n            if (await fetchOtherProtocols(account)) setProtocolsLoading(false)\n        }\n\n        loadBalance()\n        loadProtocols()\n    }, [account, fetchTokens, fetchOtherProtocols])\n\n    // Update states on network, tokens and ohterProtocols change\n    useEffect(() => {\n        try {\n            const tokens = tokensByNetworks.find(({ network }) => network === currentNetwork)\n            if (tokens) setTokens(tokens.assets)\n\n            const balanceByNetworks = tokensByNetworks.map(({ network, meta, assets }) => {\n                const totalUSD = assets.reduce((acc, curr) => acc + curr.balanceUSD, 0)\n                const balanceUSD = totalUSD + meta.find(({ label }) => label === 'Debt')?.value\n                if (!balanceUSD) return {\n                    network,\n                    total: {\n                        full: 0,\n                        truncated: 0,\n                        decimals: '00'\n                    }\n                }\n\n                const [truncated, decimals] = Number(balanceUSD.toString()).toFixed(2).split('.')\n                return {\n                    network,\n                    total: {\n                        full: balanceUSD,\n                        truncated: Number(truncated).toLocaleString('en-US'),\n                        decimals\n                    }\n                }\n            })\n\n            const balance = balanceByNetworks.find(({ network }) => network === currentNetwork)\n            if (balance) {\n                setBalance(balance)\n                setOtherBalances(balanceByNetworks.filter(({ network }) => network !== currentNetwork))\n            }\n\n            updateHumanizerData(tokensByNetworks)\n\n            const otherProtocols = otherProtocolsByNetworks.find(({ network }) => network === currentNetwork)\n            if (tokens && otherProtocols) {\n                setProtocols([\n                    {\n                        label: 'Tokens',\n                        assets: tokens.assets\n                    },\n                    ...otherProtocols.protocols.filter(({ label }) => label !== 'NFTs')\n                ])\n                setCollectibles(otherProtocols.protocols.find(({ label }) => label === 'NFTs')?.assets || [])\n            }\n        } catch(e) {\n            console.error(e);\n            addToast(e.message | e, { error: true })\n        }\n    }, [currentNetwork, tokensByNetworks, otherProtocolsByNetworks, addToast])\n\n    // Refresh tokens on network change\n    useEffect(() => {\n        refreshTokensIfVisible()\n    }, [currentNetwork, refreshTokensIfVisible])\n\n    // Refresh balance every 80s if visible\n    // NOTE: this must be synced (a multiple of) supplementing, otherwise we can end up with weird inconsistencies\n    useEffect(() => {\n        const refreshInterval = setInterval(refreshTokensIfVisible, 90000)\n        return () => clearInterval(refreshInterval)\n    }, [refreshTokensIfVisible])\n\n    // Refresh balance every 150s if hidden\n    useEffect(() => {\n        const refreshIfHidden = () => document[hidden] && !isBalanceLoading\n            ? fetchTokens(account, currentNetwork)\n            : null\n        const refreshInterval = setInterval(refreshIfHidden, 150000)\n        return () => clearInterval(refreshInterval)\n    }, [account, currentNetwork, isBalanceLoading, fetchTokens])\n\n    // Get supplement tokens data every 20s\n    useEffect(() => {\n        const refreshInterval = setInterval(() => fetchSupplementTokenData(tokensByNetworks), 20000)\n        return () => clearInterval(refreshInterval)\n    }, [fetchSupplementTokenData, tokensByNetworks])\n\n    // Refresh balance when window is focused\n    useEffect(() => {\n        document.addEventListener(visibilityChange, refreshTokensIfVisible, false);\n        return () => document.removeEventListener(visibilityChange, refreshTokensIfVisible, false);\n    }, [refreshTokensIfVisible])\n\n    return {\n        isBalanceLoading,\n        areProtocolsLoading,\n        balance,\n        otherBalances,\n        tokens,\n        extraTokens,\n        protocols,\n        collectibles,\n        requestOtherProtocolsRefresh,\n        onAddExtraToken,\n        onRemoveExtraToken\n        //updatePortfolio//TODO find a non dirty way to be able to reply to getSafeBalances from the dapps, after the first refresh\n    }\n}\n","export function isFirefox() {\n  return typeof (navigator) !== 'undefined' && navigator.userAgent.toLowerCase().includes('firefox')\n}\n","import { useCallback, useEffect, useReducer, useRef } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport { isFirefox } from 'lib/isFirefox'\n\nimport WalletConnectCore from '@walletconnect/core'\nimport * as cryptoLib from '@walletconnect/iso-crypto'\n\nconst noop = () => null\nconst noopSessionStorage = { setSession: noop, getSession: noop, removeSession: noop }\n\nconst STORAGE_KEY = 'wc1_state'\nconst SUPPORTED_METHODS = ['eth_sendTransaction', 'gs_multi_send', 'personal_sign', 'eth_sign']\nconst SESSION_TIMEOUT = 10000\n\nconst getDefaultState = () => ({ connections: [], requests: [] })\n\nlet connectors = {}\nlet connectionErrors = []\n\n// Offline check: if it errored recently\nconst timePastForConnectionErr = 90 * 1000\nconst checkIsOffline = uri => {\n    const errors = connectionErrors.filter(x => x.uri === uri)\n    return errors.find(({ time } = {}) => time > (Date.now() - timePastForConnectionErr))\n    //return errors.length > 1 && errors.slice(-2)\n    //    .every(({ time } = {}) => time > (Date.now() - timePastForConnectionErr))\n}\n\nexport default function useWalletConnect ({ account, chainId, initialUri, allNetworks, setNetwork, useStorage }) {\n    const { addToast } = useToasts()\n\n    // This is needed cause of the WalletConnect event handlers\n    const stateRef = useRef()\n    stateRef.current = { account, chainId }\n\n    const [stateStorage, setStateStorage] = useStorage({ key: STORAGE_KEY })\n\n    const [state, dispatch] = useReducer((state, action) => {\n        if (action.type === 'updateConnections') return { ...state, connections: action.connections }\n        if (action.type === 'connectedNewSession') {\n            return {\n                ...state,\n                connections: [...state.connections, { uri: action.uri, session: action.session, isOffline: false }]\n            }\n        }\n        if (action.type === 'disconnected') {\n            return {\n                ...state,\n                connections: state.connections.filter(x => x.uri !== action.uri)\n            }\n        }\n        if (action.type === 'batchRequestsAdded') {\n            if (state.requests.find(({ id }) => id === action.batchRequest.id + ':0')) return { ...state }\n\n            const newRequests = []\n            for (let ix in action.batchRequest.txns) {\n                newRequests.push({\n                    ...action.batchRequest,\n                    type: 'eth_sendTransaction',\n                    isBatch: true,\n                    id: action.batchRequest.id + ':' + ix,\n                    account,\n                    txn: {\n                        ...action.batchRequest.txns[ix],\n                        from: account\n                    }\n                })\n            }\n\n            return { ...state, requests: [...state.requests, ...newRequests] }\n        }\n        if (action.type === 'requestAdded') {\n            if (state.requests.find(({ id }) => id === action.request.id)) return { ...state }\n            return { ...state, requests: [...state.requests, action.request] }\n        }\n        if (action.type === 'requestsResolved') {\n            return {\n                ...state,\n                requests: state.requests.filter(x => !action.ids.includes(x.id))\n            }\n        }\n        return { ...state }\n    }, null, () => {\n        if (!stateStorage) return getDefaultState()\n        try {\n            return {\n                ...getDefaultState(),\n                ...stateStorage\n            }\n        } catch(e) {\n            console.error(e)\n            return getDefaultState()\n        }\n    })\n\n    // Side effects that will run on every state change/rerender\n    const maybeUpdateSessions = () => {\n        // restore connectors and update the ones that are stale\n        let updateConnections = false\n        state.connections.forEach(({ uri, session, isOffline }) => {\n            if (connectors[uri]) {\n                const connector = connectors[uri]\n                const session = connector.session\n                if (session.accounts[0] !== account || session.chainId !== chainId || checkIsOffline(uri) !== isOffline) {\n                    // NOTE: in case isOffline is different, we do not need to do this, but we're gonna leave that just in case the session is outdated anyway\n                    connector.updateSession({ accounts: [account], chainId })\n                    updateConnections = true\n                }\n            }\n        })\n\n        setStateStorage(state)\n\n        if (updateConnections) dispatch({\n            type: 'updateConnections',\n            connections: state.connections\n                .filter(({ uri }) => connectors[uri])\n                .map(({ uri }) => ({ uri, session: connectors[uri].session, isOffline: checkIsOffline(uri) }))\n        })\n    }\n    useEffect(maybeUpdateSessions, [account, chainId, state, setStateStorage])\n    // we need this so we can invoke the latest version from any event handler\n    stateRef.current.maybeUpdateSessions = maybeUpdateSessions\n\n    // New connections\n    const connect = useCallback(connectorOpts => {\n        if (connectors[connectorOpts.uri]) {\n            addToast('dApp already connected')\n            return connectors[connectorOpts.uri]\n        }\n        let connector\n        try {\n            connector = connectors[connectorOpts.uri] = new WalletConnectCore({\n                connectorOpts,\n                cryptoLib,\n                sessionStorage: noopSessionStorage\n            })\n        } catch(e) {\n            console.error(e)\n            addToast(`Unable to connect to ${connectorOpts.uri}: ${e.message}`, { error: true })\n            return null\n        }\n\n        const onError = err => {\n            addToast(`WalletConnect error: ${(connector.session && connector.session.peerMeta && connector.session.peerMeta.name)} ${err.message || err}`, { error: true })\n            console.error('WalletConnect error', err)\n        }\n\n        let sessionStart\n        let sessionTimeout\n        if (!connector.session.peerMeta) sessionTimeout = setTimeout(() => {\n            const suggestion = /https:\\/\\/bridge.walletconnect.org/g.test(connector.session.bridge)\n                // @TODO: 'or try an alternative connection method' when we implement one\n                ? 'this dApp is using an old version of WalletConnect - please tell them to upgrade!'\n                : 'perhaps the link has expired? Refresh the dApp and try again.'\n            if (!connector.session.peerMeta) addToast(`Unable to get session from dApp - ${suggestion}`, { error: true })\n        }, SESSION_TIMEOUT)\n\n        connector.on('session_request', (error, payload) => {\n            if (error) {\n                onError(error)\n                return\n            }\n\n            // Clear the \"dApp tool too long to connect\" timeout\n            clearTimeout(sessionTimeout)\n\n            if (connector.session.peerMeta.url.includes('bridge.avax.network')) {\n                const message = 'Avalanche Bridge does not currently support smart wallets.'\n                connector.rejectSession({ message })\n                addToast(message, { error: true })\n                return\n            }\n\n            // sessionStart is used to check if dApp disconnected immediately\n            sessionStart = Date.now()\n            connector.approveSession({\n                accounts: [stateRef.current.account],\n                chainId: stateRef.current.chainId,\n            })\n            // It's safe to read .session right after approveSession because 1) approveSession itself normally stores the session itself\n            // 2) connector.session is a getter that re-reads private properties of the connector; those properties are updated immediately at approveSession\n            dispatch({ type: 'connectedNewSession', uri: connectorOpts.uri, session: connector.session })\n\n            addToast('Successfully connected to '+connector.session.peerMeta.name)\n        })\n\n        connector.on('transport_error', (error, payload) => {\n            console.error('WalletConnect transport error', payload)\n            connectionErrors.push({ uri: connectorOpts.uri, event: payload.event, time: Date.now() })\n            // Keep the last 690 only\n            connectionErrors = connectionErrors.slice(-690)\n            stateRef.current.maybeUpdateSessions()\n        })\n\n        connector.on('call_request', (error, payload) => {\n            if (error) {\n                onError(error)\n                return\n            }\n            // @TODO: refactor into wcRequestHandler\n            // Opensea \"unlock currency\" hack; they use a stupid MetaTransactions system built into WETH on Polygon\n            // There's no point of this because the user has to sign it separately as a tx anyway; but more importantly,\n            // it breaks Ambire and other smart wallets cause it relies on ecrecover and does not depend on EIP1271\n            if (payload.method === 'eth_signTypedData') {\n                // @TODO: try/catch the JSON parse?\n                const signPayload = JSON.parse(payload.params[1])\n                if (signPayload.primaryType === 'MetaTransaction') {\n                    payload = {\n                        ...payload,\n                        method: 'eth_sendTransaction',\n                        params: [{\n                            to: signPayload.domain.verifyingContract,\n                            from: signPayload.message.from,\n                            data: signPayload.message.functionSignature, // @TODO || data?\n                            value: signPayload.message.value || '0x0'\n                        }]\n                    }\n                }\n            }\n            if (payload.method === 'gs_multi_send' || payload.method === 'ambire_sendBatchTransaction') {\n                dispatch({ type: 'batchRequestsAdded', batchRequest: {\n                        id: payload.id,\n                        type: payload.method,\n                        wcUri: connectorOpts.uri,\n                        txns: payload.params,\n                        chainId: connector.session.chainId,\n                        account: connector.session.accounts[0],\n                        notification: true\n                    } })\n                return\n            }\n            //FutureProof? WC does not implement it yet\n            if (payload.method === 'wallet_switchEthereumChain') {\n                const supportedNetwork = allNetworks.find(a => a.chainId === parseInt(payload.params[0].chainId, 16))\n\n                if (supportedNetwork) {\n                    setNetwork(supportedNetwork.chainId)\n                    connector.approveRequest({ id: payload.id, result: { chainId: supportedNetwork.chainId }})\n                } else {\n                    //Graceful error for user\n                    addToast(`dApp asked to switch to an unsupported chain: ${payload.params[0]?.chainId}`, { error: true })\n                    connector.rejectRequest({ id: payload.id, error: { message: 'Unsupported chain' }})\n                }\n            }\n            if (!SUPPORTED_METHODS.includes(payload.method)) {\n                const isUniIgnorable = payload.method === 'eth_signTypedData_v4'\n                    && connector.session.peerMeta\n                    && connector.session.peerMeta.name.includes('Uniswap')\n                // @TODO: if the dapp is in a \"allow list\" of dApps that have fallbacks, ignore certain messages\n                // eg uni has a fallback for eth_signTypedData_v4\n                if (!isUniIgnorable) addToast(`dApp requested unsupported method: ${payload.method}`, { error: true })\n                connector.rejectRequest({ id: payload.id, error: { message: 'METHOD_NOT_SUPPORTED: ' + payload.method }})\n                return\n            }\n            const wrongAcc = (\n                payload.method === 'eth_sendTransaction' && payload.params[0] && payload.params[0].from\n                && payload.params[0].from.toLowerCase() !== connector.session.accounts[0].toLowerCase()\n            ) || (\n                payload.method === 'eth_sign' && payload.params[1]\n                && payload.params[1].toLowerCase() !== connector.session.accounts[0].toLowerCase()\n            )\n            if (wrongAcc) {\n                addToast(`dApp sent a request for the wrong account: ${payload.params[0].from}`, { error: true })\n                connector.rejectRequest({ id: payload.id, error: { message: 'Sent a request for the wrong account' }})\n                return\n            }\n            dispatch({ type: 'requestAdded', request: {\n                id: payload.id,\n                type: payload.method,\n                wcUri: connectorOpts.uri,\n                txn: payload.method === 'eth_sign' ? payload.params[1] : payload.params[0],\n                chainId: connector.session.chainId,\n                account: connector.session.accounts[0],\n                notification: true\n            } })\n        })\n\n        connector.on('disconnect', (error, payload) => {\n            if (error) {\n                onError(error)\n                return\n            }\n\n            clearTimeout(sessionTimeout)\n            // NOTE the dispatch() will cause double rerender when we trigger a disconnect,\n            // cause we will call it once on disconnect() and once when the event arrives\n            // we can prevent this by checking if (!connectors[...]) but we'd rather stay safe and ensure\n            // the connection is removed\n            dispatch({ type: 'disconnected', uri: connectorOpts.uri })\n            connectors[connectorOpts.uri] = null\n\n            // NOTE: this event might be invoked 2 times when the dApp itself disconnects\n            // currently we don't dedupe that\n            if (sessionStart && (Date.now() - sessionStart) < SESSION_TIMEOUT) {\n                addToast('dApp disconnected immediately - perhaps it does not support the current network?', { error: true })\n            } else {\n                addToast(`${connector.session.peerMeta.name} disconnected: ${payload.params[0].message}`)\n            }\n        })\n\n        connector.on('error', onError)\n\n        return connector\n    }, [addToast, allNetworks, setNetwork])\n\n    const disconnect = useCallback(uri => {\n        // connector might not be there, either cause we disconnected before,\n        // or cause we failed to connect in the first place\n        if (connectors[uri]) {\n            connectors[uri].killSession()\n            connectors[uri] = null\n        }\n        dispatch({ type: 'disconnected', uri })\n    }, [])\n\n    const resolveMany = (ids, resolution) => {\n        state.requests.forEach(({ id, wcUri, isBatch }) => {\n            if (ids.includes(id)) {\n                const connector = connectors[wcUri]\n                if (!connector) return\n                if (!isBatch || id.endsWith(':0')) {\n                    let realId = isBatch ? id.substr(0, id.lastIndexOf(':')) : id\n                    if (resolution.success) connector.approveRequest({ id: realId, result: resolution.result })\n                    else connector.rejectRequest({ id: realId, error: { message: resolution.message } })\n                }\n            }\n        })\n        dispatch({ type: 'requestsResolved', ids })\n    }\n\n    // Side effects on init\n    useEffect(() => {\n        state.connections.forEach(({ uri, session }) => {\n            if (!connectors[uri]) connect({ uri, session })\n        })\n    // we specifically want to run this only once despite depending on state\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [connect])\n\n    // Initialization effects\n    useEffect(() => runInitEffects(connect, account, initialUri, addToast), [connect, account, initialUri, addToast])\n\n    return {\n        connections: state.connections,\n        requests: state.requests,\n        resolveMany,\n        connect, disconnect\n    }\n}\n\n// Initialization side effects\n// Connect to the URL, read from clipboard, etc.\nfunction runInitEffects(wcConnect, account, initialUri, addToast) {\n    if (initialUri) {\n        if (account) wcConnect({ uri: initialUri })\n        else addToast('WalletConnect dApp connection request detected, please create an account and you will be connected to the dApp.', { timeout: 15000 })\n    }\n\n    // hax\n    window.wcConnect = uri => wcConnect({ uri })\n\n    // @TODO on focus and on user action\n    const clipboardError = e => console.log('non-fatal clipboard/walletconnect err:', e.message)\n    const tryReadClipboard = async () => {\n        if (!account) return\n        if (isFirefox()) return\n        try {\n            const clipboard = await navigator.clipboard.readText()\n            if (clipboard.startsWith('wc:') && !connectors[clipboard]) wcConnect({ uri: clipboard })\n        } catch(e) { clipboardError(e) }\n    }\n\n    tryReadClipboard()\n    window.addEventListener('focus', tryReadClipboard)\n    return () => window.removeEventListener('focus', tryReadClipboard)\n}\n","import { useEffect, useCallback, useState, useRef } from 'react'\nimport { fetchCaught } from 'lib/fetch'\n\n// 250ms after we've triggered a load of another URL, we will clear the data\n//  so that the component that uses this hook cann display the loading spinner\nconst RESET_DATA_AFTER = 250\n\nexport default function useRelayerData(url) {\n  const [isLoading, setLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [err, setErr] = useState(null)\n  const prevUrl = useRef('')\n\n  const updateData = useCallback(async () => {\n    const { resp, body, errMsg } = await fetchCaught(url)\n\n    if (resp && resp.status === 200) {\n      return body\n    } else {\n      console.log('relayerData error', { resp, body, errMsg })\n      throw new Error(errMsg || `status code ${resp && resp.status}`)\n    }\n  }, [url])\n\n  useEffect(() => {\n    if (!url) return\n\n    // Data reset: if some time passes before we load the next piece of data, and the URL is different,\n    // we will reset the data so that the UI knows to display a loading indicator\n    let resetDataTimer = null\n    const stripQuery = x => x.split('?')[0]\n    if (stripQuery(prevUrl.current) !== stripQuery(url)) {\n      resetDataTimer = setTimeout(() => setData(null), RESET_DATA_AFTER)\n    }\n    prevUrl.current = url\n\n    let unloaded = false\n    setLoading(true)\n    setErr(null)\n    updateData()\n      .then(data => !unloaded && prevUrl.current === url && setData(data))\n      .catch(e => !unloaded && setErr(e.message || e))\n      .then(() => {\n        clearTimeout(resetDataTimer)\n        !unloaded && setLoading(false)\n      })\n    return () => {\n      unloaded = true\n      clearTimeout(resetDataTimer)\n    }\n  }, [url, updateData])\n\n  return { data, isLoading, errMsg: err }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useToasts } from './toasts'\nimport * as blockies from 'blockies-ts'\nimport { isValidAddress, isKnownTokenOrContract } from 'lib/address'\nimport { setKnownAddresses } from 'lib/humanReadableTransactions'\nimport { sha256 } from 'ethers/lib/utils'\n\nconst accountType = ({ email, signerExtra }) => {\n    const walletType = signerExtra && signerExtra.type === 'ledger' ? 'Ledger' : signerExtra && signerExtra.type === 'trezor' ? 'Trezor' : 'Web3'\n    return email ? `Ambire account for ${email}` : `Ambire account (${walletType})`\n}\nconst toIcon = seed => blockies.create({ seed }).toDataURL()\n\nconst useAddressBook = ({ accounts, useStorage }) => {\n    const { addToast } = useToasts()\n    const [storageAddresses, setStorageAddresses] = useStorage({ key: 'addresses', defaultValue: [] })\n\n    const addressList = useMemo(() => {\n        try {\n            const addresses = storageAddresses\n            if (!Array.isArray(addresses)) throw new Error('Address Book: incorrect format')\n            return [\n                ...accounts.map(account => ({\n                    isAccount: true,\n                    name: accountType(account),\n                    address: account.id,\n                    icon: toIcon(account.id)\n                })),\n                ...addresses.map(entry => ({\n                    ...entry,\n                    icon: toIcon(entry.address)\n                }))\n            ]\n        } catch (e) {\n            console.error('Address Book parsing failure', e)\n            return []\n        }\n    }, [accounts, storageAddresses])\n\n    const [addresses, setAddresses] = useState(() => addressList)\n\n    const updateAddresses = useCallback(addresses => {\n        setAddresses(addresses.map(entry => ({\n            ...entry,\n            icon: toIcon(entry.address)\n        })))\n        setStorageAddresses(addresses.filter(({ isAccount }) => !isAccount))\n    }, [setAddresses, setStorageAddresses])\n\n    const isKnownAddress = useCallback(address => [\n        ...addresses.map(({ address }) => sha256(address)),\n        ...accounts.map(({ id }) => sha256(id))\n    ].includes(sha256(address)), [addresses, accounts])\n\n    const addAddress = useCallback((name, address) => {\n        if (!name || !address) throw new Error('Address Book: invalid arguments supplied')\n        if (!isValidAddress(address)) throw new Error('Address Book: invalid address format')\n        if (isKnownTokenOrContract(address)) return addToast('The address you\\'re trying to add is a smart contract.', { error: true })\n\n        const newAddresses = [\n            ...addresses,\n            {\n                name,\n                address\n            }\n        ]\n\n        updateAddresses(newAddresses)\n\n        addToast(`${address} added to your Address Book.`)\n    }, [addresses, addToast, updateAddresses])\n\n    const removeAddress = useCallback((name, address) => {\n        if (!name || !address) throw new Error('Address Book: invalid arguments supplied')\n        if (!isValidAddress(address)) throw new Error('Address Book: invalid address format')\n\n        const newAddresses = addresses\n            .filter(a => !(a.name === name && a.address === address))\n\n        updateAddresses(newAddresses)\n\n        addToast(`${address} removed from your Address Book.`)\n    }, [addresses, addToast, updateAddresses])\n\n    useEffect(() => { setAddresses(addressList) }, [accounts, addressList])\n\n    // a bit of a 'cheat': update the humanizer with the latest known addresses\n    // this is breaking the react patterns cause the humanizer has a 'global' state, but that's fine since it simply constantly learns new addr aliases,\n    // so there's no 'inconsistent state' there, the more the better\n    useEffect(() => setKnownAddresses(addresses), [addresses])\n\n    return {\n        addresses,\n        addAddress,\n        removeAddress,\n        isKnownAddress\n    }\n}\n\nexport default useAddressBook\n","import { useEffect, useCallback, useMemo } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport { useToasts} from './toasts'\n\nlet documentTitle = document.title\nlet flashingTitleInterval = null\nlet stickyIds = []\n\nconst showFlashingTitle = () => {\n    let count = 0\n    clearInterval(flashingTitleInterval)\n    flashingTitleInterval = setInterval(() => {\n        document.title = (count % 2 === 0 ? '⚠️' : '🔥') + ' PENDING SIGNING REQUEST'\n        count++\n    }, 500)\n}\n\nconst removeFlashingTitle = () => {\n    clearInterval(flashingTitleInterval)\n    document.title = documentTitle\n}\n\nconst useAttentionGrabber = ({ eligibleRequests, isSendTxnShowing, onSitckyClick }) => {\n    const location = useLocation()\n    const { addToast, removeToast } = useToasts()\n\n    const removeStickyToasts = useCallback(() => stickyIds.forEach(id => removeToast(id)), [removeToast])\n    const isRouteWallet = useMemo(() => location.pathname.startsWith('/wallet'), [location.pathname])\n    \n    useEffect(() => {\n        if (eligibleRequests.length && isRouteWallet) {\n            if (isSendTxnShowing) removeStickyToasts()\n            else {\n                stickyIds.push(addToast('Transactions waiting to be signed', {\n                    position: 'right',\n                    sticky: true,\n                    badge: eligibleRequests.length,\n                    onClick: () => onSitckyClick()\n                }))\n            }\n\n            !(window.Notification && Notification.permission !== 'denied') ? showFlashingTitle() : removeFlashingTitle()\n        } else {\n            removeStickyToasts()\n            removeFlashingTitle()\n        }\n\n        return () => clearInterval(flashingTitleInterval)\n    }, [removeStickyToasts, eligibleRequests, isSendTxnShowing, onSitckyClick, addToast, removeToast, isRouteWallet])\n}\n\nexport default useAttentionGrabber\n\n","import { createContext, useCallback, useState } from 'react'\nimport './ModalProvider.scss'\n\nconst ModalContext = createContext(null)\n\nconst ModalProvider = ({ children }) => {\n    const [modal, setModal] = useState(null)\n    \n    const showModal = useCallback((element, opts = { disableClose: false }) => setModal({element, opts}), [])\n    const hideModal = useCallback(() => setModal(null), [])\n    \n    return (\n        <ModalContext.Provider value={{ showModal, hideModal }}>\n            { \n                modal ? \n                    <div id=\"modal-container\">\n                        <div className=\"backdrop\" onClick={modal.opts.disableClose ? null : hideModal }></div>\n                        { modal.element }\n                    </div>\n                    :\n                    null\n            }\n            { children }\n        </ModalContext.Provider>\n    )\n}\n\nexport { ModalContext }\nexport default ModalProvider","import { useContext } from 'react'\nimport { ModalContext } from 'components/ModalProvider/ModalProvider'\n\nconst useModals = () => useContext(ModalContext)\nexport default useModals","import { useEffect, useState } from 'react'\nimport { isFirefox } from 'lib/isFirefox'\nimport { useLocalStorage } from 'hooks'\n\nconst onPermissionChange = async (name, listener) => {\n    try {\n        const status = await navigator.permissions.query({ name })\n        status.onchange = () => listener(status.state === 'granted')\n        return status.state === 'granted'\n    } catch(e) {\n        console.error(e);\n        return false\n    }\n}\n\nconst usePermissions = () => {\n    const [arePermissionsLoaded, setPermissionsLoaded] = useState(false)\n    const [isClipboardGranted, setClipboardGranted] = useState(false)\n    const [isNoticationsGranted, setNotificationsGranted] = useState(false)\n    const [modalHidden, setModalHidden] = useLocalStorage({ key: 'permissionsModalHidden' })\n\n    const checkForPermissions = async () => {\n\tif (isFirefox()) {\n\t\tsetClipboardGranted(false)\n\t} else {\n\t\tconst clipboardState = await onPermissionChange('clipboard-read', state => setClipboardGranted(state))\n\t\tsetClipboardGranted(clipboardState)\n\t}\n\n        const notificationsState = await onPermissionChange('notifications', state => setNotificationsGranted(state))\n        setNotificationsGranted(notificationsState)\n\n        setPermissionsLoaded(true)\n    }\n\n    useEffect(() => checkForPermissions(), [])\n\n    return {\n        isClipboardGranted,\n        isNoticationsGranted,\n        arePermissionsLoaded,\n        modalHidden,\n        setModalHidden\n    }\n}\n\nexport default usePermissions\n","import { useCallback, useState } from \"react\"\n\ninterface Storage {\n  getItem(key: string): string | null;\n  setItem(key: string, value: string): void;\n  removeItem(key: string): void;\n}\n\ntype HookProps = {\n  storage: Storage;\n  key: string;\n  defaultValue?: any;\n  isStringStorage?: boolean;\n  setInit?: (item: any) => any;\n}\n\nconst setInitDefault = (item: any) : any => item\n\n/**\n * The main role of this hook is to hide the Storage provider we are using under the hood (AsyncStorage/localStorage).\n * This will allow us to share code between mobile/web.\n *\n * @param storage - Object implementing Storage interface. For instance, localStorage.\n * @param key - Storage item key name.\n * @param defaultValue - Default value to be used, in the case the Storage item is not set. If we don't pass it - it will default to null.\n * @param isStringStorage - Flag for disabling parsing and item stringifying. If it's enabled, we will treat whatever is in the storage as a string.\n * @param setInit - In some advanced cases, we need to perform additional logic for setting the defaultValue, based on the Storage item parsed value.\n * setInit function will provide us quick access to the parsed Storage item and based on its value we can return the needed default/init value of the hook.\n */\nexport default function useStorage({\n  storage,\n  key,\n  defaultValue = null,\n  isStringStorage = false,\n  setInit = setInitDefault,\n}: HookProps): [any, (item: any) => void, () => void]  {\n  const [item, set] = useState(() => {\n    // In case the item is not set in the storage, we just fall back to `defaultValue`\n    if (!storage.getItem(key)) return setInit(defaultValue)\n\n    if (isStringStorage) return setInit(storage.getItem(key))\n\n    // Here we are going to keep the parsed item value.\n    // If the parsing failed, we just fall back to `defaultValue`.\n    let parsedItem\n\n    try {\n      parsedItem = JSON.parse(storage.getItem(key)!)\n    } catch (e) {\n      console.error(`Storage item parsing failure. Item key: ${key}`, e)\n\n      parsedItem = defaultValue\n    }\n\n    return setInit(parsedItem)\n  })\n\n  const setItem = useCallback((value: any): void => {\n    set((prevState:any) => {\n      const itemValue = typeof value === 'function' ? value(prevState) : value\n\n      if (isStringStorage && typeof itemValue !== 'string') {\n        throw new Error(`Wrong item type. We expect a string to be passed, but got ${typeof itemValue}!`)\n      }\n\n      storage.setItem(key, isStringStorage ? itemValue : JSON.stringify(itemValue))\n\n      return itemValue\n    })\n  }, [storage, key, isStringStorage])\n\n  const removeItem = useCallback((): void => {\n    storage.removeItem(key)\n    set(null)\n  }, [storage, key])\n\n  return [item, setItem, removeItem]\n}\n","import useStorage from \"./useStorage\";\n\nexport default function useLocalStorage({ key, defaultValue, isStringStorage, setInit }) {\n  return useStorage({ storage: localStorage, key, defaultValue, isStringStorage, setInit })\n}\n","import './Modal.scss'\n\nimport { MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\n\nconst Modal = ({ children, id, title, buttons, isCloseBtnShown = true, onClose, topLeft }) => {\n    const { hideModal } = useModals()\n\n    const onCloseModal = () => {\n        hideModal()\n        onClose && onClose()\n    }\n\n    return (\n        <div id={id} className={`modal ${buttons ? 'buttons' : ''}`}>\n            <div className=\"heading\">\n                <div className=\"title\"  style={topLeft ? { maxWidth: '360px' } : {}}>{ title }</div>\n                {topLeft && <div className=\"top-left\">{ topLeft }</div>}\n                {isCloseBtnShown ? (<div className=\"close\" onClick={onCloseModal}>\n                    <MdClose/>\n                </div>) : <></>}\n            </div>\n            <div className=\"content\">{ children }</div>\n            { buttons ? \n                <div className=\"buttons\">{ buttons }</div>\n            : null}\n        </div>\n    )\n}\n\nexport default Modal\n","import './Radios.scss'\n\nimport { useState } from 'react'\n\nconst Radios = ({ radios, defaultValue, onChange }) => {\n    const [currentValue, setCurrentValue] = useState(defaultValue || null)\n\n    const onSelect = value => {\n        setCurrentValue(value)\n        onChange && onChange(value)\n    }\n\n    return (\n        <div className=\"radios-container\">\n            {\n                radios.map(({label, value, disabled }, i) => (\n                    <div className={`radio-container ${value === currentValue ? 'active' : ''} ${disabled ? 'disabled' : ''}`} key={`radio-${i}`} onClick={() => !disabled && onSelect(value)}>\n                        <div className=\"radio\"></div>\n                        <label>{ label }</label>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Radios","import { useCallback, useEffect, useState } from 'react'\nimport './Segments.scss'\n\nconst Segments = ({ small, defaultValue, segments, onChange, hidePrivateValue }) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const setSegment = useCallback(value => {\n        setValue(value)\n        onChange(value)\n    }, [onChange])\n\n    useEffect(() => {\n        setSegment(defaultValue)\n    }, [defaultValue, setSegment])\n\n    return (\n        <div className={`segments ${small ? 'small': ''}`}>\n            {\n                segments.map(segment => (\n                    <div className={`segment ${segment.value === value ? 'active' : ''}`} key={segment.value} onClick={() => setSegment(segment.value)}>\n                        {\n                            segment.icon ?\n                                <div className=\"icon\">{ segment.icon }</div>\n                                :\n                                null\n                        }\n                        { segment.value }\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Segments","import './Select.scss';\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { BsChevronDown } from 'react-icons/bs'\nimport { CSSTransition } from 'react-transition-group';\nimport useOnClickOutside from 'hooks/onClickOutside';\nimport { TextInput } from 'components/common';\nimport { MdOutlineClose } from 'react-icons/md';\n\nconst Select = ({ children, native, monospace, searchable, disabled, label, defaultValue, items, onChange }) => {\n    const ref = useRef();\n    const hiddenTextInput = useRef();\n    const transitionRef = useRef();\n    const [isOpen, setOpen] = useState();\n    const [search, setSearch] = useState('');\n    const [selectedItem, setSelectedItem] = useState({\n        label: null,\n        value: null,\n        icon: null,\n    });\n\n    const filteredItems = search.length ? items.filter(({ label }) => label.toLowerCase().includes(search.toLowerCase())) : items\n\n    const selectItem = useCallback(item => {\n        setOpen(false)\n        setSearch('')\n        setSelectedItem(item);\n        onChange(item.value);\n    }, [onChange])\n\n    useEffect(() => {\n        const item = items.find(item => item.value === defaultValue) || items[0]\n        if (item && (selectedItem.value !== item.value)) selectItem(item)\n    }, [items, defaultValue, selectedItem, selectItem])\n\n    useEffect(() => {\n        if (!items.length) return setSelectedItem({})\n    }, [items])\n\n    useEffect(() => {\n        if (isOpen && searchable) {\n            hiddenTextInput.current.focus()\n            setSearch('')\n        }\n    }, [isOpen, searchable])\n\n    useOnClickOutside(ref, () => setOpen(false));\n\n    return (\n        !native ? \n            <div className={`select ${monospace ? 'monospace': ''} ${disabled ? 'disabled' : ''} ${searchable ? 'searchable' : ''}`} ref={ref}>\n                {\n                    label ? \n                        <label>{ label }</label>\n                        :\n                        null\n                }\n                {\n                    selectedItem ? \n                        <div className=\"select-container\">\n                            <div className=\"select-input\" onClick={() => setOpen(!isOpen)}>\n                                { selectedItem.icon ? <div className=\"icon\" style={{backgroundImage: `url(${selectedItem.icon})`}}/> : null }\n                                <div className=\"label\">{ selectedItem.label || selectedItem.value }</div>\n                                <div className=\"separator\"></div>\n                                <div className={`handle ${isOpen ? 'open' : ''}`}>\n                                    <BsChevronDown size={20}></BsChevronDown>\n                                </div>\n                            </div>\n                            {\n                                <CSSTransition unmountOnExit in={isOpen} timeout={200} classNames=\"fade\" nodeRef={transitionRef}>\n                                    <div className=\"select-menu\" ref={transitionRef}>\n                                        {\n                                            searchable ? \n                                                <TextInput\n                                                    className=\"select-search-input\"\n                                                    disabled={disabled}\n                                                    placeholder=\"Search\"\n                                                    value={search}\n                                                    ref={hiddenTextInput}\n                                                    buttonLabel={search.length ? <MdOutlineClose/> : null}\n                                                    onInput={value => setSearch(value)}\n                                                    onButtonClick={() => setSearch('')}\n                                                />\n                                                :\n                                                null\n                                        }\n                                        {\n                                            filteredItems.map(item => (\n                                                <div className={`option ${item.value === selectedItem.value ? 'active' : ''}`} key={item.value} onClick={() => selectItem(item)}>\n                                                    { item.icon ? <div className=\"icon\" style={{backgroundImage: `url(${item.icon})`}}/> : null }\n                                                    <div className=\"label\">{ item.label || item.value }</div>\n                                                </div>\n                                            ))\n                                        }\n                                        { children }\n                                    </div>\n                                </CSSTransition>\n                            }\n                        </div>\n                        :\n                        null\n                }\n            </div>\n            :\n            <select className=\"select\" disabled={disabled} onChange={ev => onChange(ev.target.value)} defaultValue={defaultValue}>\n                {\n                    items.map(item => (\n                        <option key={item.value} value={item.value}>\n                            { item.label || item.value }\n                        </option>\n                    ))\n                }\n            </select>\n    );\n};\n\nexport default Select;","import './TextInput.scss'\n\nimport { forwardRef } from 'react';\nimport { MdContentCopy } from 'react-icons/md';\nimport { useToasts } from 'hooks/toasts';\n\nconst TextInput = forwardRef(({ value, className, title, pattern, autoComplete, required, minLength, maxLength, placeholder, info, label, buttonLabel, password, disabled, copy, small, onInput, onChange, onButtonClick, style }, ref) => {\n    const { addToast } = useToasts();\n\n    const onClick = async () => {\n        await navigator.clipboard.writeText(value);\n        addToast(\"Copied to clipboard!\");\n    };\n\n    return (\n        <div className={`text-input ${copy ? 'copy' : ''} ${small ? 'small' : ''} ${className}`}>\n            {\n                label ?\n                    <label>{ label }</label>\n                    :\n                    null\n            }\n            <div className=\"text-input-container\" onClick={copy ? onClick : null}>\n                <input\n                    value={value}\n                    title={title}\n                    pattern={pattern}\n                    autoComplete={autoComplete}\n                    required={required}\n                    minLength={minLength}\n                    maxLength={maxLength}\n                    type={password ? 'password' : 'text'}\n                    placeholder={placeholder}\n                    disabled={copy || disabled}\n                    onInput={ev => onInput && onInput(ev.target.value)}\n                    onChange={ev => onChange && onChange(ev.target.value)}\n                    ref={ref}\n                    style={style}\n                />\n                {\n                    copy ?\n                        <div className=\"button\">\n                            <MdContentCopy size={20}/>\n                        </div>\n                        :\n                        null\n                }\n                {\n                    buttonLabel ?\n                        <div className=\"button\" onClick={onButtonClick}>\n                            { buttonLabel }\n                        </div>\n                        :\n                        null\n                }\n            </div>\n            {\n                info ?\n                    <div className=\"info\">\n                        { info }\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    )\n})\n\nexport default TextInput","import './NumberInput.scss'\n\nconst NumberInput = ({ disabled, precision, label, value, button, onButtonClick, onInput }) => {\n    const onInputValue = ({ target }) => {\n        if (!onInput) return\n        if (!target.value.length) return onInput('')\n\n        const afterDecimals = target.value.split('.')[1] \n        if (afterDecimals && afterDecimals.length > precision) return\n\n        const isIntOrFloat = /^[0-9]+\\.{0,1}[0-9]*$/g.test(target.value)\n        isIntOrFloat && onInput(target.value)\n    }\n\n    return (\n        <div className={`number-input ${disabled ? 'disabled' : ''}`}>\n            {\n                label ?\n                    <label>{ label }</label>\n                    :\n                    null\n            }\n            <div className=\"input\">\n                <input\n                    type=\"text\"\n                    disabled={disabled}\n                    value={value}\n                    onInput={onInputValue}\n                />\n                {\n                    button ?\n                        <div className=\"button\" onClick={onButtonClick}>\n                            { button }\n                        </div>\n                        :\n                        null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NumberInput","import './PasswordInput.scss'\n\nimport { forwardRef, useState } from 'react'\nimport { MdOutlineRemoveRedEye, MdRemoveRedEye } from 'react-icons/md'\n\nconst PasswordInput = forwardRef(({ label, placeholder, autoComplete, peakPassword, disabled, value, onInput, onChange }, ref) => {\n    const [showPassword, setShowPassword] = useState()\n\n    return (\n        <div className=\"password-input\">\n            {\n                label ?\n                    <label>{ label }</label>\n                    :\n                    null\n            }\n            <div className=\"input-container\">\n                <input\n                    value={value}\n                    autoComplete={autoComplete}\n                    type={!showPassword ? 'password' : 'text'}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    onInput={ev => onInput && onInput(ev.target.value)}\n                    onChange={ev => onChange && onChange(ev.target.value)}\n                    ref={ref}\n                />\n                {\n                    peakPassword ?\n                        !showPassword ?\n                            <div className=\"button\" onClick={() => setShowPassword(true)}>\n                                <MdOutlineRemoveRedEye size={20}/>\n                            </div>\n                            :\n                            <div className=\"button\" onClick={() => setShowPassword(false)}>\n                                <MdRemoveRedEye size={20}/>\n                            </div>\n                        :\n                        null\n                }\n            </div>\n        </div>\n    )\n})\n\nexport default PasswordInput","import './Toggle.scss'\n\nconst Toggle = ({ defaultChecked, checked, onChange }) => {\n    return (\n        <label className=\"toggle\">\n            <input type=\"checkbox\" defaultChecked={defaultChecked} checked={checked} onChange={onChange}/>\n            <span className=\"slider\"></span>\n        </label>\n    )\n}\n\nexport default Toggle","import { useState } from 'react';\nimport './ToolTip.scss'\n\nconst ToolTip = ({ children, label, disabled, className }) => {\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0})\n\n    const screenBorder = 300\n    const margin = 15\n    const onMouseMove = ({ clientY, clientX }) => {\n        if (clientX > window.innerWidth - screenBorder) clientX = clientX - screenBorder\n        setMousePosition({ x: clientX + margin, y: clientY + margin })\n    }\n\n    return (\n        <div\n            className={`tooltip ${className ? className : ''}`}\n            onMouseMove={onMouseMove}\n        >\n            { children }\n            {\n                !disabled ? \n                    <div className=\"tooltip-label\" style={{top: mousePosition.y, left: mousePosition.x}}>{ label }</div>\n                    :\n                    null\n            }\n        </div>\n    )\n}\n\nexport default ToolTip\n","import './NoFundsPlaceholder.scss'\n\nimport { GiReceiveMoney } from 'react-icons/gi'\nimport { NavLink } from 'react-router-dom'\nimport { Button } from 'components/common'\n\nconst NoFundsPlaceholder = () => {\n    return (\n        <div id=\"no-funds-placeholder\">\n            <label>You don't have any funds on this account.</label>\n            <NavLink to=\"/wallet/deposit\">\n                <Button small icon={<GiReceiveMoney/>}>Deposit</Button>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default NoFundsPlaceholder","import './CountdownTimer.scss'\n\nimport { useState, useEffect } from 'react'\nimport { MdOutlineAvTimer } from 'react-icons/md'\n\nconst CountdownTimer = ({ seconds, setTimeIsUp }) => {\n    const [counter, setCounter] = useState(seconds)\n    const [timerFormatted, setTimerFormatted] = useState('')\n\n    const isTimeIsUp = timerFormatted === '0:00'\n    \n    useEffect(() => {\n        const timer =\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000)\n        const minutes = Math.floor(counter / 60)\n        let seconds = counter - minutes * 60\n        if (seconds < 10) {\n            seconds = `0${seconds}`\n        }\n\n        if (isTimeIsUp) setTimeIsUp(true)\n        setTimerFormatted(`${minutes}:${seconds}`)\n\n        return () => clearInterval(timer)\n    }, [counter, isTimeIsUp, setTimeIsUp])\n\n    return (\n        <div\n            id=\"countdown-timer\"\n            style={isTimeIsUp ? { color: 'red' } : {}}\n        >\n            <MdOutlineAvTimer /> {timerFormatted}\n        </div>\n    )\n}\n\nexport default CountdownTimer\n","import { useState, useRef } from 'react'\nimport accountPresets from 'consts/accountPresets'\nimport { Checkbox } from \"components/common\"\n\nexport default function LoginOrSignupForm({ action = 'LOGIN', onAccRequest, inProgress }) {\n    const passConfirmInput = useRef(null)\n    const [state, setState] = useState({\n      email: '', passphrase: '', passphraseConfirm: '', action\n    })\n    const onSubmit = e => {\n      e.preventDefault()\n      onAccRequest({\n        action: state.action,\n        accType: 'QUICK',\n        email: state.email,\n        passphrase: state.passphrase,\n        backupOptout: state.backupOptout,\n      })\n    }\n    const onUpdate = updates => {\n      const newState = { ...state, ...updates }\n      setState(newState)\n      const shouldValidate = newState.action === 'SIGNUP'\n      const invalid = shouldValidate && (\n        newState.passphrase !== newState.passphraseConfirm\n      )\n      // @TODO translation string\n      if (passConfirmInput.current) {\n          passConfirmInput.current.setCustomValidity(invalid ? 'Passwords must match' : '')\n      }\n    }\n    const minPwdLen = 8\n    const isSignup = state.action === 'SIGNUP'\n    const days = Math.ceil(accountPresets.quickAccTimelock / 86400)\n    const noBackupDisclaimer = `In case you forget your password or lose your backup, you will have to wait ${days} days and pay the recovery fee to restore access to your account.`\n    const additionalOnSignup = state.backupOptout ? (\n      <Checkbox label={noBackupDisclaimer} required={true}></Checkbox>\n    ) : (<></>)\n    const Link = ({ href, children }) => (<a href={href} target='_blank' rel='noreferrer' onClick={e => e.stopPropagation()}>{children}</a>)\n    const additionalInputs = isSignup ?\n      (<>\n        <input\n          type=\"password\"\n          required\n          minLength={minPwdLen}\n          placeholder=\"Password\"\n          value={state.passphrase}\n          onChange={e => onUpdate({ passphrase: e.target.value })}\n        ></input>\n        <input\n          ref={passConfirmInput}\n          required\n          minLength={minPwdLen}\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          value={state.passphraseConfirm}\n          onChange={e => onUpdate({ passphraseConfirm: e.target.value })}></input>\n        <Checkbox\n          label={<>I agree to the <Link href='https://www.ambire.com/Ambire%20ToS%20and%20PP%20(26%20November%202021).pdf'>Terms of Service and Privacy policy</Link>.</>}\n          required={true}\n        ></Checkbox>\n        <Checkbox\n          label={<>Backup on <Link href='https://help.ambire.com/hc/en-us/articles/4410892186002-What-is-Ambire-Cloud-'>Ambire Cloud</Link>.</>}\n          checked={!state.backupOptout}\n          onChange={e => onUpdate({ backupOptout: !e.target.checked })}\n        ></Checkbox>\n        {additionalOnSignup}\n      </>) : (<></>)\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input type=\"email\" required placeholder=\"Email\" value={state.email} onChange={e => onUpdate({ email: e.target.value })}></input>\n        {\n          // Trick the password manager into putting in the email\n          !isSignup ? (<input type=\"password\" style={{ display: \"none\" }}></input>): (<></>)\n        }\n        {additionalInputs}\n        <input type=\"submit\" disabled={inProgress} value={isSignup ?\n          (inProgress ? \"Signing up...\" : \"Sign up\")\n          : (inProgress ? \"Logging in...\" : \"Log in\")}></input>\n      </form>\n    )\n}\n","import './EmailLogin.scss'\n\nimport { useState, useEffect } from 'react'\nimport { MdEmail } from 'react-icons/md'\n\nimport { fetch, fetchCaught } from 'lib/fetch'\n\nimport LoginOrSignup from 'components/LoginOrSignupForm/LoginOrSignupForm'\nimport { useLocalStorage } from 'hooks'\n\n// NOTE: the same polling that we do here with the setEffect should be used for txns\n// that require email confirmation\nexport default function EmailLogin({ relayerURL, onAddAccount }) {\n    const [requiresEmailConfFor, setRequiresConfFor] = useState(null)\n    const [err, setErr] = useState('')\n    const [inProgress, setInProgress] = useState(false)\n    const [loginSessionKey, setLoginSessionKey, removeLoginSessionKey] = useLocalStorage({ key: 'loginSessionKey', isStringStorage: true })\n\n    const EMAIL_VERIFICATION_RECHECK = 3000\n\n    const attemptLogin = async ({ email, passphrase }, ignoreEmailConfirmationRequired) => {\n      // try by-email first: if this returns data we can just move on to decrypting\n      // does not matter which network we request\n      const { resp, body, errMsg } = await fetchCaught(`${relayerURL}/identity/by-email/${encodeURIComponent(email)}`, { headers: {\n          authorization: loginSessionKey ? `Bearer ${loginSessionKey}` : null\n      } })\n      if (errMsg) {\n        setErr(errMsg)\n        return\n      }\n\n      if (resp.status === 401 && body.errType === 'UNAUTHORIZED') {\n        if (ignoreEmailConfirmationRequired) {\n          // we still have to call this to make sure the state is consistent and to force a re-render (to trigger the effect again)\n          setRequiresConfFor({ email, passphrase })\n          return\n        }\n        const requestAuthResp = await fetch(`${relayerURL}/identity/by-email/${encodeURIComponent(email)}/request-confirm-login`, { method: 'POST' })\n        if (requestAuthResp.status !== 200) {\n          setErr(`Email confirmation needed but unable to request: ${requestAuthResp.status}`)\n          return\n        }\n        const loginSessionKey = (await requestAuthResp.json()).sessionKey\n        setLoginSessionKey(loginSessionKey)\n        setRequiresConfFor({ email, passphrase })\n        return\n      }\n      // If we make it beyond this point, it means no email confirmation will be required\n      if (resp.status === 404 && body.errType === 'DOES_NOT_EXIST') {\n        setRequiresConfFor(null)\n        setErr('Account does not exist')\n        return\n      }\n\n      if (resp.status === 200) {\n        const identityInfo = body\n        const { _id, salt, identityFactoryAddr, baseIdentityAddr, bytecode } = identityInfo\n        const { quickAccSigner, primaryKeyBackup } = identityInfo.meta\n\n        onAddAccount({\n          id: _id,\n          email: identityInfo.meta.email,\n          primaryKeyBackup,\n          salt, identityFactoryAddr, baseIdentityAddr, bytecode,\n          signer: quickAccSigner\n        }, { select: true })\n\n        // Remove the key value so that it can't be used anymore on this browser\n        removeLoginSessionKey()\n      } else {\n        setErr(body.message ? `Relayer error: ${body.message}` : `Unknown no-message error: ${resp.status}`)\n      }\n      setRequiresConfFor(null)\n    }\n\n    const onLoginUserAction = async ({ email, passphrase }) => {\n      setErr('')\n      setRequiresConfFor(null)\n      setInProgress(true)\n      try {\n        await attemptLogin({ email, passphrase })\n      } catch (e) {\n          setErr(`Unexpected error: ${e.message || e}`)\n      }\n      setInProgress(false)\n    }\n\n    // try logging in once after EMAIL_VERIFICATION_RECHECK\n    useEffect(() => {\n      if (requiresEmailConfFor) {\n        const timer = setTimeout(async () => {\n            setInProgress(true)\n            await attemptLogin(requiresEmailConfFor, true)\n            setInProgress(false)\n        }, EMAIL_VERIFICATION_RECHECK)\n        return () => clearTimeout(timer)\n      }\n    })\n\n    // @TODO import from JSON; maybe without a URL, as we'll just pop a file selector and then import the JSON\n    const importJSONHref = `/#/json-import`\n\n    if (!relayerURL) {\n        return (<section className=\"loginSignupWrapper\" id=\"emailLoginSection\">\n            <div id=\"logo\"/>\n            <h3 className=\"error\">Email login not supported without the relayer.</h3>\n            <a href={importJSONHref}><button>Import JSON</button></a>\n        </section>)\n    }\n\n    const inner = requiresEmailConfFor ?\n      (<div id=\"loginEmail\" className=\"emailConf\">\n        <h3><MdEmail size={25} color=\"white\"/>Email confirmation required</h3>\n        <p>\n        We sent an email to {requiresEmailConfFor.email}, please check your inbox and click \"<b>Authorize New Device</b>\".\n        </p>\n        {err ? (<p className=\"error\">{err}</p>) : (<></>)}\n      </div>)\n      : (<div id=\"loginEmail\">\n        <LoginOrSignup onAccRequest={onLoginUserAction} inProgress={inProgress}></LoginOrSignup>\n        <div className='magicLink'>A password will not be required, we will send a magic login link to your email.</div>\n\n        {err ? (<p className=\"error\">{err}</p>) : (<></>)}\n\n        {/*<a href={importJSONHref}>Import JSON</a>*/}\n      </div>)\n\n    return (\n      <section className=\"loginSignupWrapper\" id=\"emailLoginSection\">\n      <div id=\"logo\"/>\n      {inner}\n    </section>\n    )\n  }\n","import { isFirefox } from 'lib/isFirefox'\n\nconst checkPermissions = async (name, onPrompt) => {\n    let status = false;\n\n    try {\n        const { state } = await navigator.permissions.query({\n            name,\n            allowWithoutGesture: false,\n        })\n        if (state === 'granted') return true\n        if (state === 'prompt') {\n            if (onPrompt) {\n                await onPrompt\n                return checkPermissions(name)\n            } else return false\n        }\n    } catch (e) {\n        console.error('Error while trying to query permissions', e)\n    }\n\n    return status;\n}\n\nconst checkClipboardPermission = (prompt = false) => isFirefox() ? false : prompt ? checkPermissions('clipboard-read', navigator.clipboard.readText()) : checkPermissions('clipboard-read')\nconst checkNotificationPermission = (prompt = false) => prompt ? checkPermissions('notifications', Notification.requestPermission()) : checkPermissions('notifications')\n\nconst askForPermission = async name => {\n    try {\n        if (name === 'clipboard-read') {\n            await navigator.clipboard.readText()\n            return true\n        }\n\n        if (name === 'notifications') {\n            const status = await Notification.requestPermission()\n            return status === 'granted' || status === 'default'\n        }\n\n        return false\n    } catch(e) {\n        console.error(`Permission ${name} blocked`);\n        return false\n    }\n}\n\nexport {\n    askForPermission,\n    checkClipboardPermission,\n    checkNotificationPermission\n}\n","import './PermissionsModal.scss'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { MdCheck, MdClose, MdOutlineCheck } from 'react-icons/md'\nimport { useModals, usePermissions } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { askForPermission } from 'lib/permissions'\nimport { Modal, Toggle, Button, Checkbox, ToolTip } from 'components/common'\nimport { isFirefox } from 'lib/isFirefox'\nimport { fetchGet } from 'lib/fetch'\nimport { AiOutlineReload } from 'react-icons/ai'\nimport { BiExport } from 'react-icons/bi'\nimport accountPresets from 'consts/accountPresets'\n\nconst toastErrorMessage = name => `You blocked the ${name} permission. Check your browser permissions tab.`\n\nconst PermissionsModal = ({ relayerIdentityURL, account, onAddAccount, isCloseBtnShown, isBackupOptout }) => {\n    const { hideModal } = useModals()\n    const { isNoticationsGranted, isClipboardGranted, modalHidden, setModalHidden } = usePermissions()\n    const { addToast } = useToasts()\n    const [isEmailConfirmed, setEmailConfirmed] = useState(false)\n    const [isEmailResent, setEmailResent] = useState(false)\n    const [isJsonBackupDownloaded, setIsJsonBackupDownloaded] = useState(isBackupOptout)\n    const [resendTimeLeft, setResendTimeLeft] = useState(60000)\n\n    const days = Math.ceil(accountPresets.quickAccTimelock / 86400)\n    const areBlockedPermissions = (!isFirefox() && !isClipboardGranted) || !isNoticationsGranted\n    const isAccountNotConfirmed = account.emailConfRequired && !isEmailConfirmed\n    const buttonDisabled = isAccountNotConfirmed || (!modalHidden && areBlockedPermissions)\n    const sendConfirmationEmail = async () => {\n        try {\n            const response = await fetchGet(relayerIdentityURL + '/resend-verification-email')\n            if (!response.success) throw new Error('Relayer did not return success.')\n\n            addToast('Verification email sent!')\n            setEmailResent(true)\n        } catch(e) {\n            console.error(e)\n            addToast('Could not resend verification email.' + e.message || e, { error: true })\n            setEmailResent(false)\n        }\n    }\n    \n    const checkEmailConfirmation = useCallback(async () => {\n        try {\n            const identity = await fetchGet(relayerIdentityURL)\n            if (identity) {\n                const { emailConfirmed } = identity.meta\n                const isConfirmed = !!emailConfirmed\n                setEmailConfirmed(isConfirmed)\n\n                if (isConfirmed && account.emailConfRequired) {\n                    onAddAccount({\n                        ...account,\n                        emailConfRequired: false\n                    })\n                }\n            }\n        } catch(e) {\n            console.error(e);\n            addToast('Could not check email confirmation.', { error: true })\n        }\n    }, [relayerIdentityURL, account, onAddAccount, addToast])\n\n    const requestNotificationsPermission = async () => {\n        const status = await askForPermission('notifications')\n        if (!status) addToast(toastErrorMessage('Notifications'), { error: true })\n    }\n    \n    const requestClipboardPermission = async () => {\n        const status = await askForPermission('clipboard-read')\n        if (!status) addToast(toastErrorMessage('Clipboard'), { error: true })\n    }\n    \n    useEffect(() => {\n        !isEmailConfirmed && checkEmailConfirmation()\n        const emailConfirmationInterval = setInterval(() => !isEmailConfirmed && checkEmailConfirmation(), 3000)\n        return () => clearInterval(emailConfirmationInterval)\n    }, [isEmailConfirmed, checkEmailConfirmation])\n\n    const buttons = isJsonBackupDownloaded ? (<>\n        <Button clear small icon={<MdClose/>} disabled={isAccountNotConfirmed} onClick={hideModal}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={buttonDisabled} onClick={hideModal}>Done</Button>\n    </>) : (<>\n        <Button clear small icon={<MdClose/>} disabled={true} onClick={hideModal}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={true} onClick={hideModal}>Done</Button>\n    </>)\n\n    const downloadFile = ({ data, fileName, fileType }) => {\n        const blob = new Blob([data], { type: fileType })\n    \n        const a = document.createElement('a')\n        a.download = fileName\n        a.href = window.URL.createObjectURL(blob)\n        const clickEvt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n        })\n        a.dispatchEvent(clickEvt)\n        a.remove()\n    }\n\n    const handleExportClicked = () => {\n        setIsJsonBackupDownloaded(true)\n        let copiedAcc = { ...account }\n        console.log('copiedAcc',copiedAcc)\n        if (typeof copiedAcc.emailConfRequired !== 'undefined') delete copiedAcc.emailConfRequired\n        if (typeof copiedAcc.backupOptout !== 'undefined') delete copiedAcc.backupOptout\n        if (typeof copiedAcc.cloudBackupOptout !== 'undefined') delete copiedAcc.cloudBackupOptout\n        \n        downloadFile({\n            data: JSON.stringify(copiedAcc),\n            fileName: `${copiedAcc.id}.json`,\n            fileType: 'text/json',\n        })\n        \n        onAddAccount({\n            ...account,\n            backupOptout: false\n        })\n    }\n\n    useEffect(() => {\n        const resendInterval = setInterval(() => setResendTimeLeft(resendTimeLeft => resendTimeLeft > 0 ? resendTimeLeft - 1000 : 0), 1000)\n        return () => clearTimeout(resendInterval)\n    }, [])\n\n    return (\n        <Modal id=\"permissions-modal\" title=\"We need a few things 🙏\" buttons={buttons} isCloseBtnShown={isCloseBtnShown}>\n            {\n                account.email ? \n                    <div className=\"permission\">\n                    <div className=\"details\">\n                        <div className=\"name\">Email Verification</div>\n                        <div className=\"description\">\n                            <b>Confirming your email is mandatory so that we can make sure your account can be recovered in case access is lost.</b>\n                            &nbsp;We already sent an email, please check your inbox.\n                        </div>\n                    </div>\n                    <div className=\"status\">\n                        { \n                            !isEmailConfirmed ?\n                                <label>Waiting for<br/>your confirmation</label>\n                                : \n                                <span className=\"check-icon\"><MdOutlineCheck/></span>\n                        }\n                        { \n                            !isEmailConfirmed && !isEmailResent ? \n                                <ToolTip label={`Will be available in ${resendTimeLeft / 1000} seconds`} disabled={resendTimeLeft === 0}>\n                                    <Button mini clear icon={<AiOutlineReload/>} disabled={resendTimeLeft !== 0} onClick={sendConfirmationEmail}>Resend</Button>\n                                </ToolTip>\n                                :\n                                null\n                        }\n                    </div>\n                </div>\n                :\n                null\n            }\n            <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Notifications Permission</div>\n                    <div className=\"description\">\n                        Needed to draw your attention to Ambire Wallet when there is a transaction signing request.<br/>\n                        You can also click the notifications to go directly to the Ambire tab.<br/>\n                        We do not send any other notifications.\n                    </div>\n                </div>\n                <Toggle checked={isNoticationsGranted} onChange={() => requestNotificationsPermission()}/>\n            </div>\n            <div className={`permission ${isFirefox() ? 'disabled' : ''}`}>\n                <div className=\"details\">\n                    <div className=\"name\">Clipboard Permission { isFirefox() ? <span className=\"unavailable\">(Unavailable in Firefox)</span> : null }</div>\n                    <div className=\"description\">\n                        Needed so that dApps can be connected automatically just by copying their WalletConnect URL.\n                    </div>\n                    { \n                        isFirefox() ? \n                            <div className=\"unavailable\">\n                                Without this, you can still use Ambire, but you will have to paste URLs manually\n                            </div> : null\n                    }\n                </div>\n                <Toggle checked={isClipboardGranted} onChange={() => requestClipboardPermission()}/>\n            </div>\n            {!isBackupOptout && <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Download a backup</div>\n                    <div className=\"description\">\n                        In case you forget your password or lose your backup, <br/>\n                        you will have to wait {days} days and pay the recovery fee to restore access to your account.\n                    </div>\n                </div>\n                <div className=\"status\">\n                    {isJsonBackupDownloaded ? \n                        (<span className=\"check-icon\"><MdOutlineCheck/></span>) : \n                        (<Button onClick={handleExportClicked} icon={<BiExport/>}>Export</Button>)\n                    }\n                </div>\n            </div>}\n            {isAccountNotConfirmed\n                ? (<></>)\n                // Not gonna show this at all if the email is not confirmed\n                : (<Checkbox\n                    label=\"I understand, do not show this again.\"\n                    checked={modalHidden}\n                    onChange={({ target }) => setModalHidden(target.checked)}/>)\n            }\n        </Modal>\n    )\n}\n\nexport default PermissionsModal\n","import './InputModal.scss'\n\nimport { createRef, useState } from 'react'\nimport { MdCheck, MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, TextInput, Button } from \"components/common\"\n\nconst InputModal = ({ title, inputs, onClose }) => {\n    const { hideModal } = useModals()\n    const [isDisabled, setDisabled] = useState(true)\n\n    const inputsFields = inputs.map(input => ({ ...input, ref: createRef() }))\n\n    const onInput = () => {\n        const isFormValid = inputsFields\n            .map(({ ref, validate }) => ref.current.value && (validate ? validate(ref.current.value) : true))\n            .every(v => v === true)\n        setDisabled(!isFormValid)\n    }\n\n    const onConfirm = () => {\n        const values = inputsFields.map(({ ref }) => ref.current.value)\n        onClose && onClose(values)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Cancel</Button>\n        <Button small icon={<MdCheck/>} disabled={isDisabled} onClick={onConfirm}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"input-modal\" title={title} buttons={buttons}>\n            {\n                inputsFields.map(({ id, label, placeholder, ref }) => (\n                    <TextInput key={id || label} label={label} placeholder={placeholder} onInput={onInput} ref={ref}/>\n                ))\n            }\n        </Modal>\n    )\n}\n\nexport default InputModal ","import './SelectSignerAccountModal.scss'\n\nimport { useState } from 'react'\nimport { useModals } from 'hooks'\nimport { Modal, Button } from 'components/common'\nimport { HiOutlineExternalLink } from 'react-icons/hi'\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md'\n\nconst SelectSignerAccountModal = ({\n  signersToChoose,\n  onSignerAddressClicked,\n  selectedNetwork = { explorerUrl: 'https://etherscan.io' },\n  description = '',\n  isCloseBtnShown = true\n}) => {\n  const { hideModal } = useModals()\n  const [currentPage, setCurrentPage] = useState(0)\n\n  const paginate = (arr, size) => {\n    return arr.reduce((acc, val, i) => {\n      let idx = Math.floor(i / size)\n      let page = acc[idx] || (acc[idx] = [])\n      page.push(val)\n\n      return acc\n    }, [])\n  }\n\n  let pages = []\n  const pageSize = 5\n\n  pages = paginate(signersToChoose, pageSize)\n\n  const nextPage = () => {\n    if (currentPage === pages.length - 1) return\n    setCurrentPage(prevState => prevState + 1)\n  }\n\n  const prevPage = () => {\n    if (currentPage === 0) return\n    setCurrentPage(prevState => prevState - 1)\n  }\n\n  const formatAddress = addr => {\n    return addr.slice(0, 5) + '...' + addr.slice(addr.length - 4, addr.length)\n  }\n\n  const prevBtnDisabled = currentPage === 0\n  const nextBtnDisabled = currentPage === pages.length - 1\n\n  const onAddressClicked = (addr, index) => {\n    onSignerAddressClicked({\n      address: addr,\n      index: index,\n    })\n\n    hideModal()\n  }\n\n  return (\n    <Modal id=\"select-signer-modal\" title=\"Select a signer account\" isCloseBtnShown={isCloseBtnShown}>\n      <div className=\"intro\">{description}</div>\n      <div className=\"loginSignupWrapper chooseSigners\">\n        <ul id=\"signersToChoose\">\n          {signersToChoose\n            ? pages[currentPage].map((addr, index) => (\n                <li\n                  key={addr}\n                  className={!(index % 2) ? ' odd-rows-bg' : ''}\n                  onClick={() =>\n                    onAddressClicked(addr, currentPage * pageSize + index)\n                  }\n                >\n                  <span className=\"index-row\">\n                    {currentPage * pageSize + index + 1}\n                  </span>\n                  <span>\n                    {formatAddress(addr)}\n                  </span>\n                  <a\n                    href={selectedNetwork.explorerUrl + '/address/' + addr}\n                    target='_blank'\n                    rel='noreferrer'\n                    onClick={e => e.stopPropagation()}\n                  >\n                    <HiOutlineExternalLink size={25} />\n                  </a>\n                </li>\n              ))\n            : null}\n        </ul>\n        <div className=\"pages\">\n          {currentPage + 1}/{pages.length}\n        </div>\n        <div className=\"buttons\">\n          <Button disabled={prevBtnDisabled} icon={<MdKeyboardArrowLeft/>} small clear type=\"button\" onClick={prevPage}>\n            Previous page\n          </Button>\n          <Button disabled={nextBtnDisabled} iconAfter={<MdKeyboardArrowRight/>} small clear type=\"button\" onClick={nextPage}>\n            Next page\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default SelectSignerAccountModal\n","import { Bundle } from 'adex-protocol-eth'\nimport { Interface, keccak256, AbiCoder } from 'ethers/lib/utils'\nimport accountPresets from 'consts/accountPresets'\n\nconst IDENTITY_INTERFACE = new Interface(require('adex-protocol-eth/abi/Identity5.2'))\nconst { quickAccManager } = accountPresets\n\nconst buildRecoveryBundle = (identity, network, signer, newValues) => {\n    const abiCoder = new AbiCoder()\n    const { timelock, one, two } = newValues.signer\n    const newQuickAccHash = keccak256(abiCoder.encode(['tuple(uint, address, address)'], [[timelock, one, two]]))\n\n    return new Bundle({\n        identity,\n        network,\n        signer,\n        txns: [[\n            identity,\n            '0x00',\n            IDENTITY_INTERFACE.encodeFunctionData('setAddrPrivilege', [\n                quickAccManager,\n                newQuickAccHash,\n            ]),\n        ]],\n        recoveryMode: newValues\n    })\n}\n\nexport default buildRecoveryBundle","import './ResetPasswordModal.scss'\n\nimport { Wallet } from 'ethers'\nimport { id } from 'ethers/lib/utils'\nimport { useState, useMemo, createRef, useEffect, useCallback } from 'react'\nimport { Modal, Radios, Checkbox, Button, ToolTip, Loading, PasswordInput } from 'components/common'\nimport { MdOutlineCheck, MdOutlineClose, MdOutlineHelpOutline } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport accountPresets from 'consts/accountPresets'\nimport { fetchPost } from 'lib/fetch'\nimport buildRecoveryBundle from 'lib/recoveryBundle'\n\nconst ResetPassword = ({ account, selectedNetwork, relayerURL, onAddAccount, showSendTxns }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n\n    const [isLoading, setLoading] = useState(false)\n    const [type, setType] = useState(null)\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [newPasswordConfirm, setNewPasswordConfirm] = useState('')\n    const [disabled, setDisabled] = useState(true)\n\n    const [passwordsMustMatchWarning, setPasswordsMustMatchWarning] = useState(false)\n    const [passwordsLengthWarning, setPasswordsLengthWarning] = useState(false)\n    \n    const radios = useMemo(() => [\n        {\n            label: 'Change the password on this device and Ambire Cloud. Best if you just want to routinely change the password.',\n            value: 'change',\n            disabled: !account.primaryKeyBackup\n        },\n        {\n            label: 'Reset the key and password: takes 3 days. Chose this if you\\'ve forgotten the old password.',\n            value: 'reset'\n        }\n    ], [account.primaryKeyBackup])\n\n    const checkboxes = useMemo(() => ([\n        [\n            {\n                label: \n                    <>\n                        I understand the following: the new password will be required for subsequent logins, but places where you're already logged in will work with the old password until you re-login.\n                        <ToolTip\n                            label=\"This is because, for security reasons, the encrypted key is retrieved only when logging in, so we have no way of forcing every device to update it.\n                            If you want to disable access for other devices, consider the next option.\">\n                            <MdOutlineHelpOutline/>\n                        </ToolTip>\n                    </>,\n                ref: createRef()\n            }\n        ],\n        [\n            {\n                label: <>\n                    I understand I am only changing the password on the {selectedNetwork.name} network.\n                    <ToolTip\n                        label=\"You will be able to trigger the change for other networks by switching the network\">\n                        <MdOutlineHelpOutline/>\n                    </ToolTip>\n                </>,\n                ref: createRef()\n            },\n            {\n                label: 'I understand I need to wait for 3 days for the change to be finalized.',\n                ref: createRef()\n            }\n        ]\n    ]), [selectedNetwork.name])\n\n    const onRadioChange = value => {\n        setType(value)\n        setOldPassword('')\n        setNewPassword('')\n        setNewPasswordConfirm('')\n        setPasswordsMustMatchWarning(false)\n        setPasswordsLengthWarning(false)\n    }\n\n    const changePassword = async () => {\n        setLoading(true)\n        // let react do one tick of rerendering before we block on .encrypt/.signMessage\n        await new Promise(resolve => setTimeout(resolve))\n\n        try {\n            const wallet = await Wallet.fromEncryptedJson(JSON.parse(account.primaryKeyBackup), oldPassword)\n            const primaryKeyBackup = JSON.stringify(await wallet.encrypt(newPassword, accountPresets.encryptionOpts))\n            const sig = await wallet.signMessage(JSON.stringify({ primaryKeyBackup }))\n            const resp = await fetchPost(`${relayerURL}/identity/${account.id}/modify`, { primaryKeyBackup, sig })\n\n            if (resp.success) {\n                onAddAccount({ ...account, primaryKeyBackup })\n                addToast('You password was successfully updated')\n                setLoading(false)\n                hideModal()\n            } else {\n                throw new Error(`Unable to update account: ${resp.message || 'unknown error'}`)\n            }\n        } catch(e) {\n            console.error(e)\n            addToast('Changing password error: '+(e.message || e), { error: true })\n        }\n\n        setLoading(false)\n    }\n\n    const resetPassword = async () => {\n        setLoading(true)\n        // let react do one tick of rerendering before we block on .encrypt/.signMessage\n        await new Promise(resolve => setTimeout(resolve))\n\n        try {\n            // @TODO: move extraEntropy to a util\n            const extraEntropy = id(account.email + ':' + Date.now() + ':' + Math.random() + ':' + (typeof performance === 'object' && performance.now()))\n            const firstKeyWallet = Wallet.createRandom({ extraEntropy })\n\n            const { quickAccManager, quickAccTimelock, encryptionOpts } = accountPresets\n            const signer = {\n                quickAccManager,\n                timelock: quickAccTimelock,\n                one: firstKeyWallet.address,\n                two: account.signer.two,\n                preRecovery: account.signer\n            }\n\n            const primaryKeyBackup = JSON.stringify(await firstKeyWallet.encrypt(newPassword, encryptionOpts))\n\n            const bundle = buildRecoveryBundle(account.id, selectedNetwork.id, signer.preRecovery, { signer, primaryKeyBackup })\n            hideModal()\n            showSendTxns(bundle)\n            onAddAccount({\n                ...account,\n                primaryKeyBackup,\n                signer,\n                preRecoveryPrimaryKeyBackup: account.primaryKeyBackup\n            }, { select: true })\n        } catch(e) {\n            console.error(e);\n            addToast('Reset password error: ' + (e.message || e), { error: true })\n        }\n\n        setLoading(false)\n    }\n\n    const validateForm = useCallback(() => {\n        const arePasswordsMatching = newPassword === newPasswordConfirm\n        let areFieldsNotEmpty = false\n        let isLengthValid = false\n        let areCheckboxesChecked = false\n        \n        if (type === 'change') {\n            areFieldsNotEmpty = oldPassword.length && newPassword.length && newPasswordConfirm.length\n            isLengthValid = oldPassword.length >= 8 && newPassword.length >= 8 && newPasswordConfirm.length >= 8\n            areCheckboxesChecked = checkboxes[0].every(({ ref }) => ref.current && ref.current.checked)\n        }\n\n        if (type === 'reset') {\n            areFieldsNotEmpty = newPassword.length && newPasswordConfirm.length\n            isLengthValid = newPassword.length >= 8 && newPasswordConfirm.length >= 8\n            areCheckboxesChecked = checkboxes[1].every(({ ref }) => ref.current && ref.current.checked)\n        }\n\n        setDisabled(!isLengthValid || !arePasswordsMatching || !areCheckboxesChecked)\n\n        if (areFieldsNotEmpty) {\n            setPasswordsLengthWarning(!isLengthValid)\n            setPasswordsMustMatchWarning(!arePasswordsMatching)\n        } else {\n            setPasswordsLengthWarning(false)\n            setPasswordsMustMatchWarning(false)\n        }\n    }, [checkboxes, type, oldPassword, newPassword, newPasswordConfirm])\n\n    useEffect(() => validateForm(), [isLoading, validateForm, oldPassword, newPassword, newPasswordConfirm])\n\n    const modalButtons = <>\n        <Button icon={<MdOutlineClose/>} clear onClick={() => hideModal()}>Cancel</Button>\n        <Button icon={<MdOutlineCheck/>} disabled={disabled} onClick={() => type === 'change' ? changePassword(): resetPassword()}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"reset-password-modal\" title=\"Reset Password\" buttons={modalButtons}>\n            {\n                isLoading ?\n                    <div id=\"loading-overlay\">\n                        <Loading/>\n                    </div>\n                    :\n                    null\n            }\n            <Radios radios={radios} onChange={onRadioChange}/>\n            {\n                type === 'change' ?\n                    <form>\n                        <PasswordInput autocomplete=\"current-password\" placeholder=\"Old Password\" onInput={value => setOldPassword(value)}/>\n                        <PasswordInput peakPassword autocomplete=\"new-password\" placeholder=\"New Password\" onInput={value => setNewPassword(value)}/>\n                        <PasswordInput autocomplete=\"new-password\" placeholder=\"Confirm New Password\" onInput={value => setNewPasswordConfirm(value)}/>\n                        {\n                            checkboxes[0].map(({ label, ref }, i) => (\n                                <Checkbox key={`checkbox-${i}`} ref={ref} label={label} onChange={() => validateForm()}/>\n                            ))\n                        }\n                    </form> : null\n            }\n            {\n                type === 'reset' ?\n                    <form>\n                        <PasswordInput peakPassword autocomplete=\"new-password\" placeholder=\"New Password\" onInput={value => setNewPassword(value)}/>\n                        <PasswordInput autocomplete=\"new-password\" placeholder=\"Confirm New Password\" onInput={value => setNewPasswordConfirm(value)}/>\n                        {\n                            checkboxes[1].map(({ label, ref }, i) => (\n                                <Checkbox key={`checkbox-${i}`} ref={ref} label={label} onChange={() => validateForm()}/>\n                            ))\n                        }\n                    </form> : null\n            }\n            <div id=\"warnings\">\n                {\n                    passwordsMustMatchWarning ?\n                        <div className=\"warning\">Passwords must match</div> : null\n                }\n                {\n                    passwordsLengthWarning ?\n                        <div className=\"warning\">Password length must be greater than 8 characters</div> : null\n                }\n            </div>\n        </Modal>\n    )\n}\n\nexport default ResetPassword","import './WalletTokenModal.scss'\n\nimport { useEffect, useMemo, useState, useCallback } from 'react'\nimport { Button, Modal, ToolTip } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Contract } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { getProvider } from 'lib/provider'\n\nimport WALLETVestings from 'consts/WALLETVestings'\nimport WALLETInitialClaimableRewards from 'consts/WALLETInitialClaimableRewards'\nimport WALLETSupplyControllerABI from 'consts/WALLETSupplyControllerABI'\n\nconst multiplierBadges = [\n    {\n        id: 'beta-tester',\n        name: 'Beta Testers',\n        icon: '🧪',\n        color: '#6000FF',\n        multiplier: 1.25,\n        link: 'https://blog.ambire.com/announcing-the-wallet-token-a137aeda9747'\n    },\n    {\n        id: 'lobsters',\n        name: 'Lobsters',\n        icon: '🦞',\n        color: '#E82949',\n        multiplier: 1.50,\n        link: 'https://blog.ambire.com/ambire-wallet-to-partner-with-lobsterdao-10b57e6da0-53c59c88726b'\n    }\n]\nconst MultiplierBadges = ({ rewards }) => {\n    // Multiplier badges\n    const badges = useMemo(() => multiplierBadges.map(badge => {\n        const isUnlocked = rewards.multipliers && rewards.multipliers.map(({ name }) => name).includes(badge.id)\n        return {\n            ...badge,\n            active: isUnlocked\n        }\n    }), [rewards])\n\n    return (<div className=\"badges\">\n        {\n            badges.map(({ id, name, icon, color, multiplier, link, active }) => (\n                <a href={link} target=\"_blank\" rel=\"noreferrer\" key={id}>\n                    <ToolTip label={`You ${active ? 'are receiving' : 'do not have'} the ${name} x${multiplier} multiplier`}>\n                        <div className={`badge ${active ? 'active' : ''}`} style={{ backgroundColor: color, borderColor: color }}>\n                            <div className=\"icon\">{ icon }</div>\n                            <div className=\"multiplier\">x { multiplier }</div>\n                        </div>\n                    </ToolTip>\n                </a>\n            ))\n        }\n    </div>)\n}\n\nconst supplyControllerAddress = '0xc53af25f831f31ad6256a742b3f0905bc214a430'\nconst supplyControllerInterface = new Interface(WALLETSupplyControllerABI)\nconst WalletTokenModal = ({ rewards, account, network, addRequest }) => {\n    const { hideModal } = useModals()\n\n    const provider = useMemo(() => getProvider('ethereum'), [])\n    const supplyController = useMemo(() => new Contract(supplyControllerAddress, WALLETSupplyControllerABI, provider), [provider])\n    const initialClaimableEntry = WALLETInitialClaimableRewards.find(x => x.addr === account.id)\n    const initialClaimable = initialClaimableEntry ? initialClaimableEntry.totalClaimable : 0\n    const vestingEntry = WALLETVestings.find(x => x.addr === account.id)\n\n    const [currentClaimStatus, setCurrentClaimStatus] = useState({ loading: true, claimed: 0, mintableVesting: 0, error: null })\n    useEffect(() => {\n        (async () => {\n            const toNum = x => parseInt(x.toString()) / 1e18\n            const [mintableVesting, claimed] = await Promise.all([\n                vestingEntry ? await supplyController.mintableVesting(vestingEntry.addr, vestingEntry.end, vestingEntry.rate).then(toNum) : null,\n                initialClaimableEntry ? await supplyController.claimed(initialClaimableEntry.addr).then(toNum) : null\n            ])\n            return { mintableVesting, claimed }\n        })()\n            .then(status => setCurrentClaimStatus(status))\n            .catch(e => {\n                console.error('getting claim status', e)\n                setCurrentClaimStatus({ error: e.message || e })\n            })\n    }, [supplyController, vestingEntry, initialClaimableEntry])\n\n    const claimableNow = initialClaimable - currentClaimStatus.claimed\n    const disabledReason = network.id !== 'ethereum' ? 'Switch to Ethereum to claim' : (\n        currentClaimStatus.error ? `Claim status error: ${currentClaimStatus.error}` : null\n    )\n    const claimDisabledReason = claimableNow === 0 ? 'No rewards are claimable' : null\n    const claimEarlyRewards = useCallback(() => {\n        addRequest({\n            id: 'claim_'+Date.now(),\n            chainId: network.chainId,\n            type: 'eth_sendTransaction',\n            account: account.id,\n            txn: {\n                to: supplyControllerAddress,\n                value: '0x0',\n                data: supplyControllerInterface.encodeFunctionData('claim', [\n                    initialClaimableEntry.totalClaimableBN,\n                    initialClaimableEntry.proof,\n                    0, // penalty bps, at the moment we run with 0; it's a safety feature to hardcode it\n                    '0x0000000000000000000000000000000000000000' // staking addr, no need to pass this\n                ])\n            }\n        })    \n    }, [initialClaimableEntry, network.chainId, account.id, addRequest])\n    const claimVesting = useCallback(() => {\n        addRequest({\n            id: 'claimVesting_'+Date.now(),\n            chainId: network.chainId,\n            account: account.id,\n            type: 'eth_sendTransaction',\n            txn: {\n                to: supplyControllerAddress,\n                value: '0x0',\n                data: supplyControllerInterface.encodeFunctionData('mintVesting', [vestingEntry.addr, vestingEntry.end, vestingEntry.rate])\n            }\n        })    \n    }, [vestingEntry, network.chainId, account.id, addRequest])\n\n    const modalButtons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n    </>\n    return (\n        <Modal id=\"wallet-token-modal\" title=\"WALLET token distribution\" buttons={modalButtons}>\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Early users Incentive: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['balance-rewards'] }</span></div>\n                        {/* <div className=\"amount-dollar\"><span className=\"secondary-accent\">$</span> 0</div> */}\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n            {/* <div className=\"item\">\n                <div className=\"details\">\n                    <label>Referral Incentive</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">0</span></div>\n                        <div className=\"amount-dollar\"><span className=\"secondary-accent\">$</span> 0</div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { claimButton }\n                </div>\n            </div> */}\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>ADX Staking Bonus: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['adx-rewards'] }</span></div>\n                        {/* <div className=\"amount-dollar\"><span className=\"secondary-accent\">$</span> 0</div> */}\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable now: early users + ADX Staking bonus</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{\n                            currentClaimStatus.loading ? '...' : claimableNow\n                        }</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            claimDisabledReason || disabledReason || 'Claimable amount is 20% of the snapshot on 01 Feb 2022'\n                        }>\n                        <Button small clear onClick={claimEarlyRewards} disabled={!!(claimDisabledReason || disabledReason)}>CLAIM</Button>\n                    </ToolTip>\n                </div>\n            </div>\n\n            {!!currentClaimStatus.mintableVesting && !!vestingEntry && (\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable early supporters vesting</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{\n                            currentClaimStatus.mintableVesting\n                        }</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            disabledReason || `Linearly vested over approximately ${Math.ceil((vestingEntry.end - vestingEntry.start) / 86400)} days`\n                        }>\n                        <Button small clear onClick={claimVesting} disabled={!!disabledReason}>CLAIM</Button>\n                    </ToolTip>\n                </div>\n            </div>\n            )}\n\n            <MultiplierBadges rewards={rewards}/>\n            <div id=\"info\">\n                You are receiving $WALLETS for holding funds on your Ambire wallet as an early user. <a href=\"https://blog.ambire.com/announcing-the-wallet-token-a137aeda9747\" target=\"_blank\" rel=\"noreferrer\">Read More</a>\n            </div>\n        </Modal>\n    )\n}\n\nexport default WalletTokenModal\n","import './AddTokenModal.scss'\n\nimport { Contract } from 'ethers';\nimport { formatUnits, Interface } from 'ethers/lib/utils';\nimport ERC20ABI from 'adex-protocol-eth/abi/ERC20'\nimport { isValidAddress } from 'lib/address';\nimport { Button, Loading, Modal, TextInput } from 'components/common'\nimport { useState } from 'react';\nimport { useToasts } from 'hooks/toasts';\nimport { MdOutlineAdd, MdOutlineClose, MdOutlineRemove } from 'react-icons/md';\nimport { useModals } from 'hooks';\nimport { getProvider } from 'lib/provider'\n\nconst ERC20Interface = new Interface(ERC20ABI)\n\nconst AddTokenModal = ({ network, account, portfolio }) => {\n    const { addToast } = useToasts()\n    const { hideModal } = useModals()\n\n    const { extraTokens, onAddExtraToken, onRemoveExtraToken } = portfolio\n\n    const [loading, setLoading] = useState(false)\n    const [tokenDetails, setTokenDetails] = useState(null)\n    const [showError, setShowError] = useState(false)\n\n    const disabled = !tokenDetails || !(tokenDetails.symbol && tokenDetails.decimals)\n\n    const onInput = async address => {\n        setTokenDetails(null)\n\n        if (!isValidAddress(address)) return \n        setLoading(true)\n        setShowError(false)\n\n        try {\n            const provider = getProvider(network.id)\n            const tokenContract = new Contract(address, ERC20Interface, provider)\n            \n            const [balanceOf, name, symbol, decimals] = await Promise.all([\n                tokenContract.balanceOf(account),\n                tokenContract.name(),\n                tokenContract.symbol(),\n                tokenContract.decimals()\n            ])\n\n            const balance = formatUnits(balanceOf, decimals)\n            setTokenDetails({\n                account,\n                address,\n                network: network.id,\n                balance,\n                balanceRaw: balanceOf.toString(),\n                tokenImageUrl: `https://storage.googleapis.com/zapper-fi-assets/tokens/${network.id}/${address}.png`,\n                name,\n                symbol,\n                decimals\n            })\n        } catch(e) {\n            console.error(e)\n            addToast('Failed to load token info', { error: true })\n            setShowError(true)\n        }\n\n        setLoading(false)\n    }\n\n    const addToken = () => {\n        onAddExtraToken(tokenDetails)\n        hideModal()\n    }\n\n    const removeToken = address => {\n        onRemoveExtraToken(address)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n        <Button icon={<MdOutlineAdd/>} disabled={disabled} onClick={addToken}>Add</Button>\n    </>\n    const tokenStandard = network.id === 'binance-smart-chain' ? 'a BEP20' : (\n        network.id === 'ethereum'\n            ? 'an ERC20'\n            : 'a valid'\n    )\n\n    return (\n        <Modal id=\"add-token-modal\" title=\"Add Token\" buttons={buttons}>\n            <TextInput\n                label=\"Token Address\"\n                placeholder=\"0x...\"\n                onInput={value => onInput(value)}\n            />\n            {\n                showError ? \n                    <div className=\"validation-error\">\n                        The address you entered does not appear to correspond to {tokenStandard} token on { network.name }.\n                    </div>\n                    :\n                    null\n            }\n            {\n                loading ?\n                    <Loading/>\n                    :\n                        !showError && tokenDetails ? \n                            <div className=\"token-details\">\n                                <div className=\"info\">\n                                    <div className=\"icon\" style={{backgroundImage: `url(${tokenDetails.icon})`}}/>\n                                    <div className=\"name\">\n                                        { tokenDetails.name } <span>({ tokenDetails.symbol })</span>\n                                    </div>\n                                </div>\n                                <div className=\"balance\">\n                                    Balance: <span>{ tokenDetails.balance }</span> <b>{ tokenDetails.symbol }</b>\n                                </div>\n                            </div>\n                            :\n                            null\n            }\n            <div className=\"extra-tokens-list\">\n                {\n                    extraTokens.map(({ address, name, symbol, tokenImageUrl }) => (\n                        <div className=\"extra-token\" key={address}>\n                            <div className=\"info\">\n                                <div className=\"icon\" style={{ backgroundImage: `url(${tokenImageUrl})` }}/>\n                                <div className=\"name\">{ name } <span>({ symbol })</span></div>\n                            </div>\n                            <div className=\"actions\">\n                                <Button mini clear onClick={() => removeToken(address)}>\n                                    <MdOutlineRemove/>\n                                </Button>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddTokenModal","import { Button, Checkbox, Modal } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useState } from 'react'\nimport { MdBrokenImage, MdClose } from 'react-icons/md'\nimport './UnsupportedDAppsModal.scss'\n\nconst UnsupportedDAppsModal = ({ connections, disconnect, advancedModeList, onContinue }) => {\n    const { hideModal } = useModals()\n    const [advancedMode, setAdvancedMode] = useState(false)\n\n    const handleCancel = () => {\n        connections.map(({ uri }) => disconnect(uri))\n        hideModal()\n    }\n\n    const handleContinue = () => {\n        onContinue([\n            ...advancedModeList,\n            ...connections.map(({ session }) => session.peerMeta.url)\n        ])\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdClose/>} onClick={handleCancel}>Cancel</Button>\n        <Button disabled={!advancedMode} onClick={handleContinue}>Continue</Button>\n    </>\n\n    return (\n        <Modal\n            id=\"unsupported-dapps\"\n            title=\"Unsupported dApps\"\n            buttons={buttons}\n            isCloseBtnShown={false}\n        >\n            <div className='message'>\n                These dApps does not fully support smart wallets and/or WalletConnect:\n            </div>\n\n            <div className='dapps-list'>\n                {\n                    connections.map(({ session }, i) => (\n                        <a className='dapp' key={`dapp-${i}`} href={session.peerMeta.url} target=\"_blank\" rel=\"noreferrer\">\n                            <div className='icon' style={{ backgroundImage: `url(${session.peerMeta.icons[0]})` }}>\n                                <MdBrokenImage/>\n                            </div>\n                            <div className='name'>{ session.peerMeta.name }</div>\n                        </a>\n                    ))\n                }\n            </div>\n\n            <div className='message'>\n                For more information on why these dApps do not support Ambire, please read <a href='https://help.ambire.com/hc/en-us/articles/4415496135698-Which-dApps-are-supported-by-Ambire-Wallet-' target='_blank' rel='noreferrer'>this article</a>.\n\t    </div>\n            <div className='separator'/>\n\n            <div className='advanced-mode'>\n                <label className='advanced-mode-label'>Advanced mode:</label>\n                <Checkbox label=\"I know what I'm doing and I accept the risks\" checked={advancedMode} onChange={({ target }) => setAdvancedMode(target.checked)}/>\n            </div>\n        </Modal>\n    )\n}\n\nexport default UnsupportedDAppsModal\n","import { getAddress, hexDataLength } from 'ethers/lib/utils'\n\nconst NUMBER_STRING_REGEX = /^([0-9]+\\.?[0-9]*)$/\nconst HEX_DATA_LENGTH = 32\nconst TIME_LOCK_NUMBER_LENGTH = 6\nconst MAX_FILE_SIZE = 3072\nconst NEEDED_KEYS = [\n  'salt',\n  'identityFactoryAddr',\n  'baseIdentityAddr',\n  'bytecode',\n  'signer',\n]\n\nconst validateImportedAccountProps = acc => {\n  if (!(acc && validateAccountProps(acc))) {\n    return {\n      success: false,\n      message: 'The imported file does not contain needed account data.',\n    }\n  }\n\n  if (!(acc.id && isValidAddress(acc.id))) {\n    return { \n      success: false, \n      message: 'Failed to import JSON file: invalid id' \n    }\n  }\n\n  if (!(acc.signer && isValidAddress(acc.signer.address || acc.signer.quickAccManager))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid signer address',\n    }\n  }\n\n  if (acc.signer.quickAccManager) {\n    if (!(acc.signer.timelock && isValidTimeLock(acc.signer.timelock))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer timelock',\n      }\n    }\n\n    if (!(acc.signer.one && isValidAddress(acc.signer.one))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer one',\n      }\n    }\n\n    if (!(acc.signer.two && isValidAddress(acc.signer.two))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer two',\n      }\n    }\n  }\n\n  if (!(acc.salt && isValidSalt(acc.salt))) {\n    return { success: false, message: 'JSON file: invalid salt' }\n  }\n\n  if (!(acc.identityFactoryAddr && isValidAddress(acc.identityFactoryAddr))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid identity Factory Address',\n    }\n  }\n\n  if (!(acc.baseIdentityAddr && isValidAddress(acc.baseIdentityAddr))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid base Identity Address',\n    }\n  }\n\n  return { success: true }\n}\n\nconst isValidAddress = addr => {\n  try {\n    return getAddress(addr) === addr\n  } catch (e) {\n    return false\n  }\n}\n\nconst isValidTimeLock = timelock => {\n  return NUMBER_STRING_REGEX.test(timelock) && timelock.toString().length === TIME_LOCK_NUMBER_LENGTH\n}\nconst isValidSalt = salt => hexDataLength(salt) === HEX_DATA_LENGTH\nconst validateAccountProps = acc => NEEDED_KEYS.every(key => Object.keys(acc).includes(key))\nconst fileSizeValidator = file => {\n  if (file.size > MAX_FILE_SIZE) {\n    return {\n      code: \"file-size-too-large\",\n      message: `The file size is larger than ${(MAX_FILE_SIZE / 1024).toFixed(2)} KB.`\n    }\n  }\n\n  return null\n}\n\n\nexport {\n  validateImportedAccountProps,\n  fileSizeValidator\n}\n","import './AddAccount.scss'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport LoginOrSignup from 'components/LoginOrSignupForm/LoginOrSignupForm'\nimport TrezorConnect from 'trezor-connect'\nimport { TrezorSubprovider } from '@0x/subproviders/lib/src/subproviders/trezor' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { hexZeroPad, AbiCoder, keccak256, id, getAddress } from 'ethers/lib/utils'\nimport { Wallet } from 'ethers'\nimport { generateAddress2 } from 'ethereumjs-util'\nimport { getProxyDeployBytecode } from 'adex-protocol-eth/js/IdentityProxyDeploy'\nimport { fetch, fetchPost } from 'lib/fetch'\nimport accountPresets from 'consts/accountPresets'\nimport { useToasts } from 'hooks/toasts'\nimport { SelectSignerAccountModal } from 'components/Modals'\nimport { useModals } from 'hooks'\nimport { Loading } from 'components/common'\nimport { ledgerGetAddresses, PARENT_HD_PATH } from 'lib/ledgerWebHID'\nimport { isFirefox } from 'lib/isFirefox'\nimport { VscJson } from 'react-icons/vsc'\nimport { useDropzone } from 'react-dropzone'\nimport { validateImportedAccountProps, fileSizeValidator } from 'lib/validations/importedAccountValidations'\n\nTrezorConnect.manifest({\n  email: 'contactus@ambire.com',\n  appUrl: 'https://www.ambire.com'\n})\n\nexport default function AddAccount({ relayerURL, onAddAccount }) {\n  const [signersToChoose, setChooseSigners] = useState(null)\n  const [err, setErr] = useState('')\n  const [addAccErr, setAddAccErr] = useState('')\n  const [inProgress, setInProgress] = useState(false)\n  const { addToast } = useToasts()\n  const { showModal } = useModals()\n\n  const wrapProgress = async (fn, type = true) => {\n    setInProgress(type)\n    try {\n      await fn()\n    } catch (e) {\n      console.error(e)\n      setAddAccErr(`Unexpected error: ${e.message || e}`)\n    }\n    setInProgress(false)\n  }\n\n  const wrapErr = async fn => {\n    setAddAccErr('')\n    try {\n      await fn()\n    } catch (e) {\n      console.error(e)\n      setInProgress(false)\n      setAddAccErr(`Unexpected error: ${e.message || e}`)\n    }\n  }\n\n  const createQuickAcc = async (req) => {\n    setErr('')\n\n    // async hack to let React run a tick so it can re-render before the blocking Wallet.createRandom()\n    await new Promise(resolve => setTimeout(resolve, 0))\n\n    const extraEntropy = id(req.email + ':' + Date.now() + ':' + Math.random() + ':' + (typeof performance === 'object' && performance.now()))\n    const firstKeyWallet = Wallet.createRandom({ extraEntropy })\n    // 6 words is 2048**6\n    const secondKeySecret = Wallet.createRandom({ extraEntropy }).mnemonic.phrase.split(' ').slice(0, 6).join(' ') + ' ' + req.email\n\n    const secondKeyResp = await fetchPost(`${relayerURL}/second-key`, { secondKeySecret })\n    if (!secondKeyResp.address) throw new Error(`second-key returned no address, error: ${secondKeyResp.message || secondKeyResp}`)\n\n    const { salt, baseIdentityAddr, identityFactoryAddr, quickAccManager, quickAccTimelock } = accountPresets\n    const quickAccountTuple = [quickAccTimelock, firstKeyWallet.address, secondKeyResp.address]\n    const signer = {\n      quickAccManager,\n      timelock: quickAccountTuple[0],\n      one: quickAccountTuple[1],\n      two: quickAccountTuple[2]\n    }\n    const abiCoder = new AbiCoder()\n    const accHash = keccak256(abiCoder.encode(['tuple(uint, address, address)'], [quickAccountTuple]))\n    const privileges = [[quickAccManager, accHash]]\n    const bytecode = getProxyDeployBytecode(baseIdentityAddr, privileges, { privSlot: 0 })\n    const identityAddr = getAddress('0x' + generateAddress2(identityFactoryAddr, salt, bytecode).toString('hex'))\n    const primaryKeyBackup = JSON.stringify(\n      await firstKeyWallet.encrypt(req.passphrase, accountPresets.encryptionOpts)\n    )\n\n    const createResp = await fetchPost(`${relayerURL}/identity/${identityAddr}`, {\n      email: req.email,\n      primaryKeyBackup: req.backupOptout ? undefined : primaryKeyBackup,\n      secondKeySecret,\n      salt, identityFactoryAddr, baseIdentityAddr,\n      privileges,\n      quickAccSigner: signer\n    })\n    if (createResp.message === 'EMAIL_ALREADY_USED') {\n      setErr('An account with this email already exists')\n      return\n    }\n    if (!createResp.success) {\n      console.log(createResp)\n      setErr(`Unexpected sign up error: ${createResp.message || 'unknown'}`)\n      return\n    }\n\n    onAddAccount({\n      id: identityAddr,\n      email: req.email,\n      primaryKeyBackup,\n      salt, identityFactoryAddr, baseIdentityAddr, bytecode,\n      signer,\n      cloudBackupOptout: !!req.backupOptout,\n      // This makes the modal appear, and will be removed by the modal which will call onAddAccount to update it\n      backupOptout: !!req.backupOptout,\n      // This makes the modal appear, and will be removed by the modal which will call onAddAccount to update it\n      emailConfRequired: true\n    }, { select: true, isNew: true })\n  }\n\n  // EOA implementations\n  // Add or create accounts from Trezor/Ledger/Metamask/etc.\n  const createFromEOA = useCallback(async (addr) => {\n    const privileges = [[getAddress(addr), hexZeroPad('0x01', 32)]]\n    const { salt, baseIdentityAddr, identityFactoryAddr } = accountPresets\n    const bytecode = getProxyDeployBytecode(baseIdentityAddr, privileges, { privSlot: 0 })\n    const identityAddr = getAddress('0x' + generateAddress2(identityFactoryAddr, salt, bytecode).toString('hex'))\n\n    if (relayerURL) {\n      const createResp = await fetchPost(`${relayerURL}/identity/${identityAddr}`, {\n        salt, identityFactoryAddr, baseIdentityAddr,\n        privileges\n      })\n      if (!createResp.success && !(createResp.message && createResp.message.includes('already exists'))) throw createResp\n    }\n\n    return {\n      id: identityAddr,\n      salt, identityFactoryAddr, baseIdentityAddr, bytecode,\n      signer: { address: getAddress(addr) }\n    }\n  }, [relayerURL])\n\n  async function connectWeb3AndGetAccounts() {\n    if (typeof window.ethereum === 'undefined') {\n      throw new Error('MetaMask not available')\n    }\n    const ethereum = window.ethereum\n    const web3Accs = await ethereum.request({ method: 'eth_requestAccounts' })\n    if (!web3Accs.length) throw new Error('No accounts connected')\n    if (web3Accs.length === 1) return onEOASelected(web3Accs[0])\n\n    setChooseSigners({ addresses: web3Accs, signerName: 'Web3' })\n  }\n\n  const getAccountByAddr = useCallback(async (idAddr, signerAddr) => {\n    // In principle, we need these values to be able to operate in relayerless mode,\n    // so we just store them in all cases\n    // Plus, in the future this call may be used to retrieve other things\n    const { salt, identityFactoryAddr, baseIdentityAddr, bytecode } = await fetch(`${relayerURL}/identity/${idAddr}`)\n      .then(r => r.json())\n    if (!(salt && identityFactoryAddr && baseIdentityAddr && bytecode)) throw new Error(`Incomplete data from relayer for ${idAddr}`)\n    return {\n      id: idAddr,\n      salt, identityFactoryAddr, baseIdentityAddr, bytecode,\n      signer: { address: signerAddr }\n    }\n  }, [relayerURL])\n\n  const getOwnedByEOAs = useCallback(async (eoas) => {\n    let allUniqueOwned = {}\n\n    await Promise.all(eoas.map(\n      async signerAddr => {\n        const resp = await fetch(`${relayerURL}/identity/any/by-owner/${signerAddr}?includeFormerlyOwned=true`)\n        const privEntries = Object.entries(await resp.json())\n        // discard the privileges value, we do not need it as we wanna add all accounts EVER owned by this eoa\n        privEntries.forEach(([id, _]) => allUniqueOwned[id] = getAddress(signerAddr))\n      }\n    ))\n\n    return await Promise.all(\n      Object.entries(allUniqueOwned).map(([id, signer]) => getAccountByAddr(id, signer))\n    )\n  }, [getAccountByAddr, relayerURL])\n\n  async function connectTrezorAndGetAccounts() {\n    /*\n    const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n    engine.addProvider(new TrezorSubprovider({ trezorConnectClientApi: TrezorConnect, ...this.config }))\n    engine.addProvider(new CacheSubprovider())\n    engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n    */\n    const provider = new TrezorSubprovider({ trezorConnectClientApi: TrezorConnect })\n    const addresses = await provider.getAccountsAsync(50)\n    setChooseSigners({\n      addresses, signerName: 'Trezor', signerExtra: {\n        type: 'trezor',\n        info: JSON.parse(JSON.stringify(provider._initialDerivedKeyInfo))\n      }\n    })\n  }\n\n  async function connectLedgerAndGetAccounts() {\n    if (isFirefox()) {\n      await connectLedgerAndGetAccountsU2F()\n    } else {\n      await connectLedgerAndGetAccountsWebHID()\n    }\n  }\n\n  async function connectLedgerAndGetAccountsU2F() {\n    const provider = new LedgerSubprovider({\n      networkId: 0, // @TODO: probably not needed\n      ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\n      baseDerivationPath: PARENT_HD_PATH\n    })\n    // NOTE: do not attempt to do both of these together (await Promise.all)\n    // there is a bug in the ledger subprovider (race condition), so it will think we're trying to make two connections simultaniously\n    // cause one call won't be aware of the other's attempt to connect\n    const addresses = await provider.getAccountsAsync(50)\n    const signerExtra = await provider._initialDerivedKeyInfoAsync().then(info => ({\n      type: 'ledger',\n      info: JSON.parse(JSON.stringify(info))\n    }))\n\n    setChooseSigners({ addresses, signerName: 'Ledger', signerExtra })\n  }\n\n  async function connectLedgerAndGetAccountsWebHID() {\n    let error = null\n    try {\n      const addrData = await ledgerGetAddresses()\n      if (!addrData.error) {\n        const signerExtra = { type: 'ledger', transportProtocol: 'webHID' }\n        if (addrData.addresses.length === 1) {\n            onEOASelected(addrData.addresses[0], signerExtra)\n        } else {\n            setChooseSigners({ addresses: addrData.addresses, signerName: 'Ledger', signerExtra })\n        }\n      } else {\n        error = addrData.error\n      }\n    } catch (e) {\n      console.log(e)\n      if (e.statusCode && e.id === 'InvalidChannel') {\n        error = 'Invalid channel'\n      } else if (e.statusCode && e.statusCode === 25873) {\n        error = 'Please make sure your ledger is connected and the ethereum app is open'\n      } else {\n        error = e.message\n      }\n    }\n\n    if (error) {\n      setAddAccErr(`Ledger error: ${error.message || error}`)\n    }\n  }\n\n  const onEOASelected = useCallback(async (addr, signerExtra) => {\n    const addAccount = (acc, opts) => onAddAccount({ ...acc, signerExtra }, opts)\n    // when there is no relayer, we can only add the 'default' account created from that EOA\n    // @TODO in the future, it would be nice to do getLogs from the provider here to find out which other addrs we control\n    //   ... maybe we can isolate the code for that in lib/relayerless or something like that to not clutter this code\n    if (!relayerURL) return addAccount(await createFromEOA(addr), { select: true })\n    // otherwise check which accs we already own and add them\n    const owned = await getOwnedByEOAs([addr])\n    if (!owned.length) {\n        addAccount(await createFromEOA(addr), { select: true, isNew: true })\n    } else {\n      addToast(`Found ${owned.length} existing accounts with signer ${addr}`, { timeout: 15000 })\n      owned.forEach((acc, i) => addAccount(acc, { select: i === 0 }))\n    }\n  }, [addToast, createFromEOA, getOwnedByEOAs, onAddAccount, relayerURL])\n\n  const onSignerAddressClicked = useCallback(val => {\n    wrapErr(() => onEOASelected(val.address, signersToChoose.signerExtra))\n    setChooseSigners(null)\n  }, [onEOASelected, signersToChoose])\n\n  // The UI for choosing a signer to create/add an account with, for example\n  // when connecting a hardware wallet, it has many addrs you can choose from\n  useEffect(() => {\n    if (signersToChoose) {\n      showModal(\n        <SelectSignerAccountModal\n          signersToChoose={signersToChoose.addresses}\n          onSignerAddressClicked={onSignerAddressClicked}\n          description={`Signer address is the ${signersToChoose.signerName} address you will use to sign transactions on Ambire Wallet.\n                    А new account will be created using this signer if you don’t have one.`}\n          isCloseBtnShown={true}\n        />\n      )\n    }\n  }, [onSignerAddressClicked, showModal, signersToChoose])\n  \n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    const reader = new FileReader()\n    \n    if (rejectedFiles.length) {\n      addToast(`${rejectedFiles[0].file.path} - ${(rejectedFiles[0].file.size / 1024).toFixed(2)} KB. ${rejectedFiles[0].errors[0].message}`, { error: true })\n    }\n\n    if (acceptedFiles.length){\n      const file = acceptedFiles[0]\n\n      reader.readAsText(file,'UTF-8')\n      reader.onload = readerEvent => {\n        const content = readerEvent.target.result\n        const fileContent = JSON.parse(content)\n        const validatedFile = validateImportedAccountProps(fileContent)\n        \n        if (validatedFile.success) onAddAccount(fileContent, { select: true })\n        else addToast(validatedFile.message, { error: true})\n      }\n    }\n  }, [addToast, onAddAccount])\n\n  const { getInputProps, open } = useDropzone({\n    onDrop,\n    noClick: true,\n    noKeyboard: true,\n    accept: 'application/json',\n    maxFiles: 1,\n    validator: fileSizeValidator\n  })\n\n  // Adding accounts from existing signers\n  const addFromSignerButtons = (<>\n    <button onClick={() => wrapProgress(connectTrezorAndGetAccounts, 'hwwallet')}>\n      <div className=\"icon\" style={{ backgroundImage: 'url(./resources/trezor.png)' }}/>\n      Trezor\n    </button>\n    <button onClick={() => wrapProgress(connectLedgerAndGetAccounts, 'hwwallet')}>\n      <div className=\"icon\" style={{ backgroundImage: 'url(./resources/ledger.png)' }}/>\n      Ledger\n    </button>\n    <button onClick={() => wrapErr(connectWeb3AndGetAccounts)}>\n      <div className=\"icon\" style={{ backgroundImage: 'url(./resources/metamask.png)' }}/>\n      Metamask / Browser\n    </button>\n    <button onClick={() => wrapErr(open)}>\n      <div className=\"icon\"><VscJson size={25}/></div>\n      Import from JSON\n    </button>\n    <input {...getInputProps()} />\n  </>)\n\n  if (!relayerURL) {\n    return (<div className=\"loginSignupWrapper\">\n      <div id=\"logo\"/>\n      <section id=\"addAccount\">\n        <div id=\"loginOthers\">\n          <h3>Add an account</h3>\n          {addFromSignerButtons}\n          <h3>NOTE: You can enable email/password login by connecting to a relayer.</h3>\n        </div>\n      </section>\n    </div>)\n  }\n  //TODO: Would be great to create Ambire spinners(like 1inch but simpler) (I can have a look at them if you need)\n  return (<div className=\"loginSignupWrapper\">\n      <div id=\"logo\"/>\n      <section id=\"addAccount\">\n        <div id=\"loginEmail\">\n          <h3>Create a new account</h3>\n          <LoginOrSignup\n            inProgress={inProgress === 'email'}\n            onAccRequest={req => wrapProgress(() => createQuickAcc(req), 'email')}\n            action=\"SIGNUP\"\n          ></LoginOrSignup>\n          {err ? (<p className=\"error\">{err}</p>) : (<></>)}\n        </div>\n\n        <div id=\"loginSeparator\">\n          <div className=\"verticalLine\"></div>\n          <span>or</span>\n          <div className=\"verticalLine\"></div>\n        </div>\n        <div id=\"loginOthers\">\n          <h3>Add an account</h3>\n          {inProgress !== 'hwwallet' ? (<>\n            <Link to=\"/email-login\">\n              <button>\n                <div className=\"icon\" style={{ backgroundImage: 'url(./resources/envelope.png)' }}/>\n                Email login\n              </button>\n            </Link>\n            {addFromSignerButtons}\n            {addAccErr ? (<p className=\"error\">{addAccErr}</p>) : (<></>)}\n          </>) : (<div className=\"accountLoader\">\n            <Loading/>\n          </div>)}\n        </div>\n      </section>\n    </div>\n  )\n}\n","import './Balances.scss'\n\nimport networks from 'consts/networks'\n\nconst Balances = ({ portfolio, selectedNetwork, setNetwork, hidePrivateValue }) => {\n    const networkDetails = (network) => networks.find(({ id }) => id === network)\n    const otherBalances = portfolio.otherBalances.filter(({ network, total }) => network !== selectedNetwork.id && total.full > 0)\n\n    return (\n        <div id=\"balances\">\n            <span className=\"green-highlight\">$</span> { hidePrivateValue(portfolio.balance.total.truncated) }\n            <span className=\"green-highlight\">.{ hidePrivateValue(portfolio.balance.total.decimals) }</span>\n        \n            <div id=\"other-balances\">\n                { otherBalances.length ? <label>You also have</label> : null }\n                {\n                    otherBalances.filter(({ network }) => networkDetails(network)).map(({ network, total }, i) => (\n                        <div className=\"balance-container\" key={network}>\n                            <div className=\"other-balance\" onClick={() => setNetwork(network)}>\n                                <label>\n                                    <span className=\"purple-highlight\">$</span> { hidePrivateValue(total.truncated) }\n                                    <span className=\"purple-highlight\">.{hidePrivateValue(total.decimals)}</span>\n                                </label>\n                                on\n                                <div className=\"network\">\n                                    <div className=\"icon\" style={{backgroundImage: `url(${networkDetails(network).icon})`}}></div>\n                                    <div className=\"name\">\n                                        { networkDetails(network).name }\n                                    </div>\n                                </div>\n                            </div>\n                            { otherBalances.length - 1 !== i ? <label>and</label> : null }\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Balances\n","import './ProtocolsPlaceholder.scss'\n\nimport { NavLink } from 'react-router-dom'\nimport { GiReceiveMoney } from 'react-icons/gi'\nimport { Button } from 'components/common'\nimport { MdOutlineAdd } from 'react-icons/md'\n\nconst ProtocolsPlaceholder = ({ onClickAddToken }) => {\n    const tokens = [\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0xade00c28244d5ce17d72e40330b1c318cd12b7c3.png',\n            symbol: 'ADX',\n            balance: 170027.26,\n            balanceUSD: 138880.64\n        },\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0x0000000000000000000000000000000000000000.png',\n            symbol: 'ETH',\n            balance: 61.77,\n            balanceUSD: 283170.08\n        },\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png',\n            symbol: 'WBTC',\n            balance: 0.03,\n            balanceUSD: 2227.24\n        },\n    ]\n\n    return (\n        <div id=\"protocols-placeholder\" >\n            <div className=\"placeholder-overlay\">\n                <label>\n                    Welcome! You don't have any funds on this account.\n                </label>\n                <NavLink to=\"/wallet/deposit\">\n                    <Button small icon={<GiReceiveMoney/>}>Deposit</Button>\n                </NavLink>\n                <div className=\"add-token\">\n                    <label>You have a token that's not displayed?</label>\n                    <Button mini clear icon={<MdOutlineAdd/>} onClick={onClickAddToken}>Click here to add it</Button>\n                </div>\n            </div>\n            <div className=\"category\">\n                <div className=\"title\">Tokens</div>\n                <div className=\"list\">\n                    {\n                        tokens.map(({ icon, symbol, balance, balanceUSD }) => (\n                            <div className=\"token\" key={symbol}>\n                                <div className=\"icon\">\n                                    <img src={icon} alt=\"Token Icon\"/>\n                                </div>\n                                <div className=\"name\">\n                                    { symbol }\n                                </div>\n                                <div className=\"separator\"></div>\n                                <div className=\"balance\">\n                                    <div className=\"currency\">\n                                        { balance } <span className=\"symbol\">{ symbol }</span>\n                                    </div>\n                                    <div className=\"dollar\">\n                                        <span className=\"symbol\">$</span> { balanceUSD }\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProtocolsPlaceholder","import './Protocols.scss'\n\nimport { GiToken } from 'react-icons/gi'\nimport { AiOutlineSend } from 'react-icons/ai'\nimport { NavLink } from 'react-router-dom'\nimport { Button, Loading } from 'components/common'\nimport ProtocolsPlaceholder from './ProtocolsPlaceholder/ProtocolsPlaceholder'\nimport { useState } from 'react'\nimport { MdOutlineAdd } from 'react-icons/md'\nimport { AddTokenModal } from 'components/Modals'\nimport { useModals } from 'hooks'\n\nconst Protocols = ({ portfolio, network, account, hidePrivateValue }) => {\n    const { showModal } = useModals()\n\n    const [failedImg, setFailedImg] = useState([])\n\n    const { isBalanceLoading, areProtocolsLoading, tokens, protocols } = portfolio\n    const sortedTokens = tokens.sort((a, b) => {\n        const decreasing = b.balanceUSD - a.balanceUSD\n        if (decreasing === 0) return a.symbol.localeCompare(b.symbol)\n        return decreasing\n    })\n    const otherProtocols = protocols.filter(({ label }) => label !== 'Tokens')\n    const shouldShowPlaceholder = (!isBalanceLoading && !tokens.length) && (!areProtocolsLoading && !otherProtocols.length)\n\n    const tokenItem = (index, img, symbol, balance, balanceUSD, address, send = false) => \n        <div className=\"token\" key={`token-${address}-${index}`}>\n            <div className=\"icon\">\n                { \n                    failedImg.includes(img) ?\n                        <GiToken size={20}/>\n                        :\n                        <img src={img} draggable=\"false\" alt=\"Token Icon\" onError={() => setFailedImg(failed => [...failed, img])}/>\n                }\n            </div>\n            <div className=\"name\">\n                { symbol }\n            </div>\n            <div className=\"separator\"></div>\n            <div className=\"balance\">\n                <div className=\"currency\">\n                    <span className=\"value\">{ hidePrivateValue(balance) }</span>\n                    <span className=\"symbol\">{ symbol }</span>\n                </div>\n                <div className=\"dollar\">\n                    <span className=\"symbol\">$</span> { hidePrivateValue(balanceUSD.toFixed(2)) }\n                </div>\n            </div>\n            {\n                send ? \n                    <div className=\"actions\">\n                        <NavLink to={`/wallet/transfer/${address}`}>\n                            <Button small icon={<AiOutlineSend/>}>Send</Button>\n                        </NavLink>\n                    </div>\n                    :\n                    null\n            }\n        </div>\n\n    const openAddTokenModal = () => showModal(<AddTokenModal network={network} account={account} portfolio={portfolio} />)\n\n    return (\n        <div id=\"protocols-table\">\n            {\n                shouldShowPlaceholder ?\n                    <ProtocolsPlaceholder onClickAddToken={openAddTokenModal}/>\n                    :\n                    null\n            }\n            <>\n                {\n                    isBalanceLoading ?\n                        <Loading/>\n                        :\n                        !shouldShowPlaceholder && sortedTokens.length ?\n                            <div className=\"category\" key=\"category-tokens\">\n                                <div className=\"title\">\n                                    Tokens\n                                    <Button mini clear icon={<MdOutlineAdd/>} onClick={() => openAddTokenModal()}>Add Token</Button>\n                                </div>\n                                <div className=\"list\">\n                                    { \n                                        sortedTokens.map(({ address, symbol, tokenImageUrl, balance, balanceUSD }, i) =>\n                                            tokenItem(i, tokenImageUrl, symbol, balance, balanceUSD, address, true))\n                                    }\n                                </div>\n                            </div>\n                        :\n                        null\n                }\n                {\n                    areProtocolsLoading ?\n                        <Loading/>\n                        :\n                            otherProtocols.map(({ label, assets }, i) => (\n                                <div className=\"category\" key={`category-${i}`}>\n                                    <div className=\"title\">{ label }</div>\n                                    <div className=\"list\">\n                                        {\n                                            assets.map(({ category, symbol, tokenImageUrl, balance, balanceUSD, address }, i) => \n                                                tokenItem(i, tokenImageUrl, symbol, balance, balanceUSD, address, category !== 'claimable'))\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                }\n            </>\n        </div>\n    )\n}\n\nexport default Protocols","import './CollectiblesPlaceholder.scss'\n\nconst CollectiblesPlaceholder = ({ isPrivateMode, collectiblesLength }) => {\n    const collectibles = [\n        {\n            collectionName: 'Party Bone',\n            collectionImg: 'https://lh3.googleusercontent.com/ZNc-hDBHOxgioSltBcDvh5hBfWEj623dETJj2nrEC0cLbjuULbo4Ign7OnLDX9qf2XaALrkXsZCRylRqPPHqQgzJOabJg4TRq3MDhA=s2500',\n            name: 'Party Bone #7865',\n            image: 'https://lh3.googleusercontent.com/uznp2aNVNPEhVk4MhLG2Zn-JC2sVaF6PsUcpF_CpyQkgekmv4hh4zbyebsoLFLvkY8PSV6D-TR5OaMp15RhG9zQsYd_AvDCo9SEVF4Q',\n            price: 32.16\n        },\n        {\n            collectionName: 'Pudgy Penguins',\n            collectionImg: 'https://lh3.googleusercontent.com/L9PJp0pOXCscKsTpD1_6zoALxdjG5gIKHLykS_Wk5J_yk590drEqRhM1ElTEZCaWeTjFj2isfxFw2tcFKcbCPlu6-Eu5bUuxsL-x=s2500',\n            name: 'Pudgy Penguin #8675',\n            image: 'https://lh3.googleusercontent.com/J6gQQRnzsMLAOhYiN9qIhogxr2MKn17zfGf6nQFKr3WCZ34thm6H0w9izvnJysxJclsyr8c3yo0hshOaLU73aS-IgTm-CooJb1cw1S0',\n            price: 5675.00\n        },\n        {\n            collectionName: 'Art Blocks Factory',\n            collectionImg: 'https://lh3.googleusercontent.com/sr7Y19-bJwsQsxX6n8Pj5tIaNKdUEotNlfhBsYw8McKpIsYARglTORaNlGhDZ2PrH-tO1vU6tFbpamiWwIImbidhVSh4aoIh4d310Og=s2500',\n            name: 'Transitions #4267',\n            image: 'https://lh3.googleusercontent.com/9MzvH_PSYMvlJE8Cfm5d308ltY5fZx-dooEcQizKgtKZ8g05RvJvd_5LAbqVHIzaoZbM-HOBgNSV8RKvEe_1thkLcQtE4NMMx8Kp5g',\n            price: 263.46\n        },\n        {\n            collectionName: 'Sad Frogs District',\n            collectionImg: 'https://lh3.googleusercontent.com/3U8N73XLrQOQPhJBAMNi7IPR1y3GGJ2zxmyUlit4IHCJURmKFPWClgatjbYfyz9drMk6-XSQTjSFqn7tKL0ZNoRbgvUu8OdLVREA=s2500',\n            name: '1882',\n            image: 'https://lh3.googleusercontent.com/3uwrfkdhHSfWm171BOjJHp3768tbLP9TeyTh2BnvgF6S1nIRI489SFq6EGjI9AISRUeyXXufEjB34Wj0bif_vl-y5h6GesEoJaaZcJg',\n            price: 1563.59\n        },\n        {\n            collectionName: 'GLUEWAVE',\n            collectionImg: 'https://lh3.googleusercontent.com/LheZMF6AyTLPpfwABwAGZqoC0gTWrDlYloDdT2VX2u_GZRZnP-ZpDC90huElm3RXE-eU1d1YluQi8G1uVdeDdysUNLZWJte4jXk3zeY=s2500',\n            name: '000105040307070704',\n            image: 'https://lh3.googleusercontent.com/eP_F_6aa_BXuKfYq1w2aiS6UW3bp4-gByFoeKLMXYuWAkU6Xiyi7mkm31aoewCZ_eG9RAuhas8jxFwXTxAWuxq1E3ZxYg97cLUUE',\n            price: 7107.27\n        }\n    ]\n\n    return (\n        <div id=\"collectibles-placeholder\">\n            <div className=\"placeholder-text\">\n                {isPrivateMode && collectiblesLength ? 'You can\\'t see collectibles in private mode' : 'You don\\'t have any collectibles (NFTs) yet' }\n            </div>\n            <div className=\"placeholder-overlay\"></div>\n            <div id=\"collectibles\">\n                {\n                    collectibles.map(({ collectionName, collectionImg, name, image, price}) => (\n                        <div className=\"collectible\" key={name}>\n                            <div className=\"artwork\" style={{backgroundImage: `url(${image})`}}/>\n                            <div className=\"info\">\n                                <div className=\"collection\">\n                                    <div className=\"collection-icon\" style={{backgroundImage: `url(${collectionImg})`}}></div>\n                                    { collectionName }\n                                </div>\n                                <div className=\"details\">\n                                    <div className=\"name\">{ name }</div>\n                                    <div className=\"value\"><span className=\"purple-highlight\">$</span> { price }</div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default CollectiblesPlaceholder","import './Collectibles.scss'\n\nimport { NavLink } from 'react-router-dom'\nimport CollectiblesPlaceholder from './CollectiblesPlaceholder/CollectiblesPlaceholder'\nimport { Loading } from 'components/common'\n\nconst Collectibles = ({ portfolio, isPrivateMode }) => {\n    const handleUri = uri => {\n        uri = uri.startsWith('data:application/json') ? uri.replace('data:application/json;utf8,', '') : uri\n\n        if (uri.startsWith('ipfs://')) return uri.replace(/ipfs:\\/\\/ipfs\\/|ipfs:\\/\\//g, 'https://ipfs.io/ipfs/')\n        if (uri.split('/')[2].endsWith('mypinata.cloud')) return 'https://ipfs.io/ipfs/' + uri.split('/').slice(4).join('/')\n        \n        return uri\n    }\n\n    if (portfolio.areProtocolsLoading) return <Loading />;\n\n    if (!portfolio.collectibles.length || isPrivateMode) {\n        return (\n            <CollectiblesPlaceholder\n                isPrivateMode={isPrivateMode}\n                collectiblesLength={portfolio.collectibles.length}\n            />\n        );\n    }\n\n    return (\n        <div id=\"collectibles\">\n            {\n                portfolio.collectibles.map(({ network, address, collectionName, collectionImg, assets }) => (assets || []).map(({ tokenId, assetName, assetImg, balanceUSD }) => (\n                    <div className=\"collectible\" key={tokenId}>\n                        <NavLink to={`/wallet/nft/${network}/${address}/${tokenId}`}>\n                            <div className=\"artwork\" style={{backgroundImage: `url(${handleUri(assetImg)})`}}/>\n                            <div className=\"info\">\n                                <div className=\"collection\">\n                                    <div className=\"collection-icon\" style={{backgroundImage: `url(${collectionImg})`}}></div>\n                                    <span className=\"collection-name\">{ collectionName }</span>\n                                </div>\n                                <div className=\"details\">\n                                    <div className=\"name\">{ assetName }</div>\n                                    <div className=\"value\"><span className=\"purple-highlight\">$</span> {balanceUSD.toFixed(2) }</div>\n                                </div>\n                            </div>\n                        </NavLink>\n                    </div>\n                )))\n            }\n        </div>            \n    )\n}\n\nexport default Collectibles","import './Dashboard.scss'\n\nimport { useEffect, useLayoutEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { Chart, Loading, Segments } from 'components/common'\nimport Balances from './Balances/Balances'\nimport Protocols from './Protocols/Protocols'\nimport Collectibles from './Collectibles/Collectibles'\nimport { MdOutlineInfo } from 'react-icons/md'\n\nconst chartSegments = [\n    {\n        value: 'Tokens'\n    },\n    {\n        value: 'Protocols'\n    }\n]\n\nconst tabSegments = [\n    {\n        value: 'tokens'\n    },\n    {\n        value: 'collectibles'\n    }\n]\n\nexport default function Dashboard({ portfolio, selectedNetwork, selectedAccount, setNetwork, privateMode }) {\n    const history = useHistory()\n    const { tabId } = useParams()\n\n    const [chartTokensData, setChartTokensData] = useState([]);\n    const [chartProtocolsData, setChartProtocolsData] = useState([]);\n    const [chartType, setChartType] = useState([]);\n    const [tab, setTab] = useState(tabId || tabSegments[0].value);\n\n    useEffect(() => {\n        if (!tab || tab === tabSegments[0].value) return history.replace(`/wallet/dashboard`)\n        history.replace(`/wallet/dashboard/${tab}`)\n    }, [tab, history])\n\n    useLayoutEffect(() => {\n        const tokensData = portfolio.tokens\n            .map(({ label, symbol, balanceUSD }) => ({\n                label: label || symbol,\n                value: Number(((balanceUSD / portfolio.balance.total.full) * 100).toFixed(2))\n            }))\n            .filter(({ value }) => value > 0);\n\n        const totalProtocols = portfolio.protocols.map(({ assets }) => \n            assets\n                .map(({ balanceUSD }) => balanceUSD)\n                .reduce((acc, curr) => acc + curr, 0))\n            .reduce((acc, curr) => acc + curr, 0)\n\n        const protocolsData = portfolio.protocols\n            .map(({ label, assets }) => ({\n                label,\n                value: Number(((assets.map(({ balanceUSD }) => balanceUSD).reduce((acc, curr) => acc + curr, 0) / totalProtocols) * 100).toFixed(2))\n            }))\n            .filter(({ value }) => value > 0)\n\n        setChartTokensData(tokensData);\n        setChartProtocolsData(protocolsData)\n    }, [portfolio.balance, portfolio.tokens, portfolio.protocols]);\n\n    useEffect(() => portfolio.requestOtherProtocolsRefresh(), [portfolio])\n\n    return (\n        <section id=\"dashboard\">\n            <div id=\"overview\">\n                <div id=\"balance\" className=\"panel\">\n                    <div className=\"title\">Balance</div>\n                    <div className=\"content\">\n                        {\n                            portfolio.isBalanceLoading ? \n                                <Loading/>\n                                :\n                                <Balances\n                                    portfolio={portfolio}\n                                    selectedNetwork={selectedNetwork}\n                                    setNetwork={setNetwork}\n                                    hidePrivateValue={privateMode.hidePrivateValue}\n                                />\n                        }\n                    </div>\n                </div>\n                <div id=\"chart\" className=\"panel\">\n                    <div className=\"title\">\n                        Balance by\n                        <Segments small defaultValue={chartSegments[0].value} segments={chartSegments} onChange={setChartType}/>\n                    </div>\n                    <div className=\"content\">\n                        {\n                            chartType === chartSegments[0].value ?\n                                portfolio.isBalanceLoading ?\n                                    <Loading/>\n                                    :\n                                    privateMode.hidePrivateContent(<Chart data={chartTokensData} size={200}/>)\n                                :\n                                portfolio.areProtocolsLoading ?\n                                    <Loading/>\n                                    :\n                                    privateMode.hidePrivateContent(<Chart data={chartProtocolsData} size={200}/>)\n                        }\n                    </div>\n                </div>\n            </div>\n            <div id=\"table\" className=\"panel\">\n                <div className=\"title\">\n                    Assets\n                    <Segments small defaultValue={tab} segments={tabSegments} onChange={setTab}></Segments>\n                </div>\n                <div className=\"content\">\n                    {\n                        tab === tabSegments[0].value ?\n                            <Protocols\n                                portfolio={portfolio}\n                                network={selectedNetwork}\n                                account={selectedAccount}\n                                hidePrivateValue={privateMode.hidePrivateValue}\n                            />\n                            :\n                            <Collectibles portfolio={portfolio} isPrivateMode={privateMode.isPrivateMode} />\n                    }\n                </div>\n                <div className=\"footer\">\n                    <div id=\"missing-token-notice\">\n                        <MdOutlineInfo/>\n                        <span>\n                            If you don't see a specific token that you own, please check the <a href={`${selectedNetwork.explorerUrl}/address/${selectedAccount}`} target=\"_blank\" rel=\"noreferrer\">Block Explorer</a>\n                        </span>\n                    </div>\n                    {\n                        portfolio.areProtocolsLoading || !portfolio.protocols.length ?\n                            null\n                            :\n                            <div className=\"powered\">\n                                Powered by Velcro\n                            </div>\n                    }\n                </div>\n            </div>\n        </section>\n    )\n}\n","import './Accounts.scss'\n\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlinePlus } from 'react-icons/ai'\nimport { MdOutlineContentCopy, MdLogout, MdOutlineClose, MdOutlineCheck } from 'react-icons/md'\nimport * as blockies from 'blockies-ts';\nimport { DropDown, Button } from 'components/common';\nimport { useToasts } from 'hooks/toasts';\n\nconst Accounts = ({ accounts, selectedAddress, onSelectAcc, onRemoveAccount, hidePrivateValue }) => {\n    const { addToast } = useToasts()\n    const [logoutWarning, setLogoutWarning] = useState(false)\n    const [closed, setClosed] = useState(false)\n\n    const shortenedAddress = address => address.slice(0, 5) + '...' + address.slice(-3)\n    const isActive = id => id === selectedAddress ? 'active' : ''\n    const toIcon = seed => blockies.create({ seed }).toDataURL()\n    const toIconBackgroundImage = seed => ({ backgroundImage: `url(${toIcon(seed)})`})\n    const walletType = signerExtra => {\n        if (signerExtra && signerExtra.type === 'ledger') return 'Ledger'\n        else if (signerExtra && signerExtra.type === 'trezor') return 'Trezor'\n        else return 'Web3'\n    }\n    const copyAddress = async address => {\n        await navigator.clipboard.writeText(address)\n        addToast('Copied to clipboard!')\n    }\n\n    const onSelectAccount = (id) => {\n        onSelectAcc(id)\n        setClosed(true)\n    }\n\n    return (\n        <DropDown id=\"accounts\" icon={toIcon(selectedAddress)} title={hidePrivateValue(shortenedAddress(selectedAddress))} open={closed} onOpen={() => setClosed(false)}>\n          <div className=\"list\">\n            {\n              accounts.map(({ id, email, signer, signerExtra }) => \n                logoutWarning !== id ?\n                    <div className={`account ${isActive(id)}`} key={id}>\n                        <div className=\"inner\" onClick={() => onSelectAccount(id)}>\n                            <div className=\"icon\" style={toIconBackgroundImage(id)}></div>\n                            <div className=\"details\">\n                                <div className=\"address\">{ id }</div>\n                                <label>{ email ? `Email/Password account (${email})` : `${walletType(signerExtra)} (${shortenedAddress(signer.address)})` }</label>\n                            </div>\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button\" onClick={() => copyAddress(id)}>\n                                <MdOutlineContentCopy/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(id)}>\n                                <MdLogout/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div id=\"confirm-delete-account\" className={`account ${isActive(id)}`} key={id}>\n                        <div className=\"message\">\n                            Are you sure you want to log out from this account ?\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button danger\" onClick={() => {\n                                setLogoutWarning(false)\n                                onRemoveAccount(id)\n                            }}>\n                                <MdOutlineCheck/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(false)}>\n                                <MdOutlineClose/>\n                            </div>\n                        </div>\n                    </div>\n              )\n            }\n          </div>\n          <div id=\"add-account\">\n            <NavLink to=\"/add-account\">\n              <Button icon={<AiOutlinePlus/>} small>Add Account</Button>\n            </NavLink>\n          </div>\n        </DropDown>\n    )\n}\n\nexport default Accounts","import './DApps.scss'\n\nimport React, { useState, useCallback } from 'react'\nimport { FiHelpCircle } from 'react-icons/fi'\nimport { BiTransferAlt } from 'react-icons/bi'\nimport { MdBrokenImage } from 'react-icons/md'\nimport { AiOutlineDisconnect } from 'react-icons/ai'\nimport { DropDown, ToolTip, Button } from \"components/common\"\nimport { checkClipboardPermission } from 'lib/permissions'\nimport { MdOutlineWarning } from 'react-icons/md'\n\nconst DApps = ({ connections, connect, disconnect }) => {\n    const [isClipboardGranted, setClipboardGranted] = useState(false)\n\n    const checkPermission = async () => {\n        const status = await checkClipboardPermission()\n        setClipboardGranted(status)\n        return status\n    }\n\n    const readClipboard = useCallback(async () => {\n        if (isClipboardGranted) {\n            const content = await navigator.clipboard.readText()\n            if (content.startsWith('wc:')) connect({ uri: content })\n        } else {\n            const uri = prompt('Enter WalletConnect URI')\n            if (uri) connect({ uri })\n        }\n    }, [connect, isClipboardGranted])\n\n    const isLegacyWC = ({ bridge }) => /https:\\/\\/bridge.walletconnect.org/g.test(bridge)\n\n    return (\n        <DropDown id=\"dApps\" title=\"dApps\" badge={connections.length} onOpen={() => checkPermission()}>\n            <div id=\"connect-dapp\">\n                <div className=\"heading\">\n                    <Button small icon={<BiTransferAlt />} disabled={isClipboardGranted} onClick={readClipboard}>\n                        Connect dApp\n                    </Button>\n                    <a href='https://help.ambire.com/hc/en-us/articles/4410889965842' target='_blank' rel='noreferrer'>\n                        <FiHelpCircle size={30} />\n                    </a>\n                </div>\n                {isClipboardGranted ? (\n                    <label>\n                        Automatic connection enabled, just copy a WalletConnect URL and\n                        come back to this tab.\n                    </label>\n                ) : null}\n            </div>\n            {connections.map(({ session, uri, isOffline }) => (\n                <div className=\"item dapps-item\" key={session.key}>\n                    <div className=\"icon\">\n                        <div className=\"icon-overlay\" style={{backgroundImage: `url(${session.peerMeta.icons.filter(x => !x.endsWith('favicon.ico'))[0]})`}}/>\n                        <MdBrokenImage/>\n                    </div>\n                    <a href={session.peerMeta.url} target=\"_blank\" rel=\"noreferrer\">\n                        <div className=\"details\">\n                            { \n                                isLegacyWC(session) ?\n                                    <ToolTip className=\"session-warning\" label=\"dApp uses legacy WalletConnect bridge which is unreliable and often doesn't work. Please tell the dApp to update to the latest WalletConnect version.\">\n                                        <MdOutlineWarning/>\n                                    </ToolTip>\n                                    :\n                                    null\n                            }\n                            {\n                                isOffline ?\n                                    <ToolTip className=\"session-error\" label=\"WalletConnect connection may be offline. Check again later. If this warning persist try to disconnect and connect WalletConnect.\">\n                                        <AiOutlineDisconnect />\n                                    </ToolTip>\n                                    :\n                                    null\n                            }\n                            <div className=\"name\">{session.peerMeta.name}</div>\n                        </div>\n                    </a>\n                    <div className=\"separator\"></div>\n                    <button onClick={() => disconnect(uri)}>Disconnect</button>\n                </div>\n          ))}\n        </DropDown>\n    )\n}\n\nexport default DApps","import './Links.scss'\n\nimport { DropDown } from \"components/common\"\nimport { MdChatBubbleOutline, MdMenuBook, MdOutlineHelpOutline, MdOutlineLightbulb } from \"react-icons/md\";\nimport { BsDiscord, BsTelegram, BsTwitter } from \"react-icons/bs\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst Links = () => {\n    const [linksViewed, setLinksViewed] = useLocalStorage({ key: 'linksViewed', defaultValue: false })\n\n    const onOpen = () => {\n        setLinksViewed(true)\n    }\n\n    return (\n        <DropDown id=\"help-dropdown\" className={`${linksViewed ? 'viewed' : ''}`} title={<MdOutlineHelpOutline/>} onOpen={onOpen}>\n            <a className=\"item\" href='https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet' target=\"_blank\" rel=\"noreferrer\">\n                <MdMenuBook/> Help Center\n            </a>\n            <a className=\"item\" href=\"https://help.ambire.com/hc/en-us/requests/new\" target=\"_blank\" rel=\"noreferrer\">\n                <MdChatBubbleOutline/> Report an issue\n            </a>\n            <a className=\"item\" href=\"https://discord.gg/nMBGJsb\" target=\"_blank\" rel=\"noreferrer\">\n                <BsDiscord/> Discord\n            </a>\n            <a className=\"item\" href=\"https://twitter.com/AmbireWallet\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTwitter/> Twitter\n            </a>\n            <a className=\"item\" href=\"https://t.me/AdExNetworkOfficial\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTelegram/> Telegram\n            </a>\n            <a className=\"item\" href=\"https://www.ambire.com/Ambire%20ToS%20and%20PP%20(26%20November%202021).pdf\" target=\"_blank\" rel=\"noreferrer\">\n                <MdOutlineLightbulb/> ToS\n            </a>\n        </DropDown>\n    )\n}\n\nexport default Links\n","import { useEffect, useState } from \"react\"\nimport { useModals } from \"hooks\";\nimport { Button, ToolTip } from \"components/common\";\nimport { WalletTokenModal } from \"components/Modals\";\n\nconst Rewards = ({ rewardsData, account, network, hidePrivateValue, addRequest }) => {\n    const { showModal } = useModals()\n\n    const [rewards, setRewards] = useState({})\n    const [rewardsTotal, setRewardsTotal] = useState(0)\n    const { isLoading, data, errMsg } = rewardsData\n\n    const showWalletTokenModal = () => showModal(<WalletTokenModal rewards={rewards} network={network} account={account} addRequest={addRequest}/>)\n\n    useEffect(() => {\n        if (errMsg || !data || !data.success) return\n\n        const { rewards, multipliers } = data\n        if (!rewards.length) return\n\n        const rewardsDetails = Object.fromEntries(rewards.map(({ _id, rewards }) => [_id, rewards[account.id] || 0]))\n        const rewardsTotal = Object.values(rewardsDetails).reduce((acc, curr) => acc + curr, 0)\n        rewardsDetails.multipliers = multipliers\n\n        setRewardsTotal(rewardsTotal)\n        setRewards(rewardsDetails)\n    }, [data, errMsg, account])\n\n    return (\n        !isLoading && (errMsg || !data) ?\n            <ToolTip label=\"WALLET rewards are not available without a connection to the relayer\">\n                <Button small border disabled onClick={showWalletTokenModal}>Unavailable</Button>\n            </ToolTip>\n            :\n            <Button small border disabled={isLoading} onClick={showWalletTokenModal}>{ hidePrivateValue(rewardsTotal.toFixed(3)) } WALLET</Button>\n    )\n}\n\nexport default Rewards\n","import \"./TopBar.scss\";\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { MdOutlineArrowForward, MdOutlineClose, MdOutlineMenu, MdRemoveRedEye, MdVisibilityOff } from \"react-icons/md\";\nimport { Select } from \"components/common\";\nimport Accounts from \"./Accounts/Accounts\";\nimport DApps from \"./DApps/DApps\";\nimport * as blockies from 'blockies-ts';\nimport Links from \"./Links/Links\";\nimport Rewards from \"./Rewards/Rewards\";\n\nconst TopBar = ({\n  connections,\n  connect,\n  disconnect,\n  onSelectAcc,\n  onRemoveAccount,\n  selectedAcc,\n  accounts,\n  network,\n  setNetwork,\n  allNetworks,\n  rewardsData,\n  privateMode: { isPrivateMode, togglePrivateMode, hidePrivateValue },\n  addRequest\n}) => {\n  const [isMenuOpen, setMenuOpen] = useState(false)\n  \n  const networksItems = allNetworks.map(({ id, name, icon }) => ({\n    label: name,\n    value: id,\n    icon\n  }))\n\n  const account = accounts.find(({ id }) => id === selectedAcc)\n  const accountIcon = blockies.create({ seed: account ? account.id : null }).toDataURL()\n\n  return (\n    <div id=\"topbar\">\n      <div id=\"mobile-menu\" onClick={() => setMenuOpen(!isMenuOpen)}>\n        <div className=\"icon\" style={{backgroundImage: `url(${accountIcon})`}}></div>\n        <MdOutlineArrowForward/>\n        <div className=\"icon\" style={{backgroundImage: `url(${network.icon})`}}></div>\n        <div id=\"menu-button\">\n          { isMenuOpen ? <MdOutlineClose/> : <MdOutlineMenu/> }\n        </div>\n      </div>\n\n      <NavLink to={'/wallet/dashboard'}>\n        <div id=\"logo\" />\n        <div id=\"icon\" />\n      </NavLink>\n      <div className={`container ${isMenuOpen ? 'open' : ''}`}>\n        <Rewards\n          rewardsData={rewardsData}\n          account={account}\n          network={network}\n          hidePrivateValue={hidePrivateValue}\n          addRequest={addRequest}\n        />\n        {isPrivateMode ? <MdVisibilityOff cursor=\"pointer\" size={28} onClick={togglePrivateMode} /> : <MdRemoveRedEye cursor=\"pointer\" size={28} onClick={togglePrivateMode} />}\n        <DApps connections={connections} connect={connect} disconnect={disconnect}/>\n        <Accounts accounts={accounts} selectedAddress={selectedAcc} onSelectAcc={onSelectAcc} onRemoveAccount={onRemoveAccount} hidePrivateValue={hidePrivateValue}/>\n        <Select defaultValue={network.id} items={networksItems} onChange={value => setNetwork(value)}/>\n        <Links/>\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import './SideBar.scss'\n\nimport { NavLink } from 'react-router-dom'\nimport { MdDashboard, MdLock, MdCompareArrows, MdHelpCenter } from 'react-icons/md'\nimport { GiReceiveMoney } from 'react-icons/gi'\nimport { BsCurrencyExchange } from 'react-icons/bs'\nimport { BsPiggyBank } from 'react-icons/bs'\nimport { BiTransfer } from 'react-icons/bi'\nimport { CgArrowsExchangeV } from 'react-icons/cg'\nimport { Loading } from 'components/common'\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\nconst helpCenterUrl = 'https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet'\n\nconst SideBar = ({ match, portfolio, hidePrivateValue }) => {\n  const sidebarRef = useRef()\n  const [balanceFontSize, setBalanceFontSize] = useState(0)\n    const resizeBalance = useCallback(() => {\n        const balanceFontSizes = {\n            3: '2em',\n            5: '1.5em',\n            7: '1.3em',\n            9: '1.2em',\n            11: '1em',\n        }\n\n        const charLength = portfolio.balance.total.truncated.length\n        const closest = Object.keys(balanceFontSizes).reduce((prev, current) => Math.abs(current - charLength) < Math.abs(prev - charLength) ? current : prev)\n        setBalanceFontSize(balanceFontSizes[closest])\n    }, [portfolio.balance.total])\n\n    useEffect(() => resizeBalance(), [resizeBalance])\n\n  return (\n    <div id=\"sidebar\" ref={sidebarRef}>\n      <div className=\"balance\">\n        <label>Balance</label>\n        {portfolio.isBalanceLoading ? (\n          <Loading />\n        ) : (\n          <div\n            className=\"balanceDollarAmount\"\n            style={{ fontSize: balanceFontSize }}\n          >\n            <span className=\"dollarSign highlight\">$</span>\n            {hidePrivateValue(portfolio.balance.total.truncated)}\n            <span className=\"highlight\">\n              .{hidePrivateValue(portfolio.balance.total.decimals)}\n            </span>\n          </div>\n        )}\n      </div>\n      <nav>\n        <NavLink to={match.url + \"/dashboard\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <MdDashboard/>Dashboard\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/deposit\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <GiReceiveMoney/>Deposit\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transfer\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BiTransfer/>Transfer\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/swap\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsCurrencyExchange/>Swap\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/cross-chain\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <CgArrowsExchangeV/>Cross-Chain\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/earn\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsPiggyBank/>Earn\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transactions\"} activeClassName=\"selected\">\n          <div className=\"item\">\n                <MdCompareArrows/>Transactions\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/security\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <MdLock/>Security\n          </div>\n        </NavLink>\n        <div className=\"separator\"></div>\n        <a href={helpCenterUrl} target=\"_blank\" rel=\"noreferrer\">\n          <div className=\"item\" id=\"help-center\">\n            <MdHelpCenter/>Help Center\n          </div>\n        </a>\n      </nav>\n    </div>\n  )\n}\n\nexport default SideBar\n","export default __webpack_public_path__ + \"static/media/ramp.26a99e26.svg\";","export default __webpack_public_path__ + \"static/media/paytrie.338f7c3b.svg\";","export default __webpack_public_path__ + \"static/media/transak.e01c0265.svg\";","import { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport transakSDK from '@transak/transak-sdk'\nimport { popupCenter } from 'lib/popupHelper'\nimport url from 'url'\n\nimport { RAMP_HOST_API_KEY, PAYTRIE_PARTNER_URL, TRANSAK_API_KEY, TRANSAK_ENV } from 'config'\n\nconst useProviders = ({ walletAddress, selectedNetwork }) => {\n    const openRampNetwork = () => {\n        const assetsList = {\n            ethereum: 'ERC20_*,ETH_*',\n            polygon: 'MATIC_ERC20_*,MATIC_*',\n            avalanche: 'AVAX_*',\n            'binance-smart-chain': 'BSC_*,BSC_ERC20_*',\n        }\n\n        const widget = new RampInstantSDK({\n            hostAppName: 'Ambire',\n            hostLogoUrl: 'https://www.ambire.com/ambire-logo.png',\n            variant: 'auto',\n            swapAsset: assetsList[selectedNetwork],\n            userAddress: walletAddress,\n            hostApiKey: RAMP_HOST_API_KEY,\n        })\n        widget.show()\n    };\n\n    const openPayTrie = () => {\n        const rightSideLabels = {\n            ethereum: 'USDC',\n            polygon: 'USDC-P',\n            'binance-smart-chain': 'USDT-B',\n        }\n\n        const URL = url.parse(PAYTRIE_PARTNER_URL, true)\n        URL.search = null\n        URL.query = {\n            ...URL.query,\n            addr: walletAddress,\n            rightSideLabel: rightSideLabels[selectedNetwork]\n        }\n\n        popupCenter({\n            url: url.format(URL),\n            title: 'Paytrie Deposit',\n            w: 450,\n            h: 700,\n        })\n    };\n\n    const openTransak = () => {\n        const networksAlias = {\n            'avalanche': 'avaxcchain',\n            'binance-smart-chain': 'bsc'\n        }\n\n        const defaultCurency = {\n            'ethereum': 'USDC',\n            'polygon': 'USDC',\n            'arbitrum': 'ETH',\n            'avalanche': 'AVAX',\n            'binance-smart-chain': 'BNB'\n        }\n\n        const transak = new transakSDK({\n            apiKey: TRANSAK_API_KEY,\n            environment: TRANSAK_ENV,\n            networks: networksAlias[selectedNetwork] || selectedNetwork,\n            defaultCryptoCurrency: defaultCurency[selectedNetwork],\n            disableWalletAddressForm: true,\n            walletAddress,\n            themeColor: '282b33',\n            email: '',\n            redirectURL: '',\n            hostURL: window.location.origin,\n            widgetHeight: 'calc(100% - 60px)',\n            widgetWidth: '100%',\n        })\n\n        transak.init()\n\n        transak.on(transak.ALL_EVENTS, data => {\n            console.log(data)\n        })\n\n        transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, orderData => {\n            console.log(orderData)\n            transak.close()\n        })\n    }\n\n    return {\n        openRampNetwork,\n        openPayTrie,\n        openTransak\n    }\n}\n\nexport default useProviders","export const popupCenter = ({ url, title, w, h }) => {\n\t// Fixes dual-screen position                             Most browsers      Firefox\n\tconst dualScreenLeft =\n\t\twindow.screenLeft !== undefined ? window.screenLeft : window.screenX\n\tconst dualScreenTop =\n\t\twindow.screenTop !== undefined ? window.screenTop : window.screenY\n\n\tconst width = window.innerWidth\n\t\t? window.innerWidth\n\t\t: document.documentElement.clientWidth\n\t\t? document.documentElement.clientWidth\n\t\t: window.screen.width\n\tconst height = window.innerHeight\n\t\t? window.innerHeight\n\t\t: document.documentElement.clientHeight\n\t\t? document.documentElement.clientHeight\n\t\t: window.screen.height\n\n\tconst systemZoom = width / window.screen.availWidth\n\tconst left = (width - w) / 2 / systemZoom + dualScreenLeft\n\tconst top = (height - h) / 2 / systemZoom + dualScreenTop\n\tconst newWindow = window.open(\n\t\turl,\n\t\ttitle,\n\t\t`\n\t\ttoolbar=no,scrollbars=no,resizable=no\n\t\twidth=${w / systemZoom}, \n\t\theight=${h / systemZoom}, \n\t\ttop=${top}, \n\t\tleft=${left},\n\t\t`\n\t)\n\n\tif (window.focus) newWindow.focus()\n}","import './Providers.scss'\n\nimport RAMP_LOGO from 'resources/ramp.svg';\nimport PAYTRIE_LOGO from 'resources/paytrie.svg';\nimport TRANSAK_LOGO from 'resources/transak.svg';\n\nimport useProviders from './useProviders'\n\nexport default function Providers({ walletAddress, networkDetails }) {\n    const { openRampNetwork, openPayTrie, openTransak } = useProviders({ walletAddress, selectedNetwork: networkDetails.id })\n\n    const providers = [\n        {\n            logo: RAMP_LOGO,\n            name: 'Ramp',\n            type: 'Bank Transfer, Credit/Debit Card, Apple Pay',\n            fees: '0.49%-2.9%',\n            limits: '10,000EUR/m',\n            currencies: 'USD, EUR, GBP',\n            networks: ['ethereum', 'polygon', 'avalanche', 'binance-smart-chain'],\n            onClick: () => openRampNetwork()\n        },\n        {\n            logo: PAYTRIE_LOGO,\n            name: 'PayTrie',\n            type: 'Bank Transfer',\n            fees: '1% (min. $2 CAD)',\n            limits: '$2,000CAD/day',\n            currencies: 'CAD',\n            networks: ['ethereum', 'polygon', 'binance-smart-chain'],\n            onClick: () => openPayTrie()\n        },\n        {\n            logo: TRANSAK_LOGO,\n            name: 'Transak',\n            type: 'Credit/Debit card and Bank Transfer (methods availability depends on location)',\n            fees: 'from 0.5%',\n            limits: 'up to 15,000 EUR/day',\n            currencies: 'GBP, EUR, USD and many more',\n            networks: ['ethereum', 'polygon', 'avalanche', 'arbitrum', 'binance-smart-chain'],\n            onClick: () => openTransak()\n        }\n    ];\n\n    const shouldBeDisabled = (networks) => {\n        return networks.includes(networkDetails.id) ? null : 'disabled'; \n    };\n\n    return (\n        <div id=\"providers\">\n            {\n                providers.map(({ logo, name, type, fees, limits, currencies, networks, onClick }) =>\n                    <div className={`provider ${shouldBeDisabled(networks)}`} key={name} onClick={onClick}>\n                        <div className=\"logo\">\n                            <img src={logo} alt={name}></img>\n                        </div>\n                        <div className=\"details\">\n                            <div className=\"type\">\n                                { type }\n                            </div>\n                            <div className=\"fees\">\n                                Fees: { fees }\n                            </div>\n                            <div className=\"limits\">\n                                Limits: { limits }\n                            </div>\n                            <div className=\"currencies\">\n                                Currencies: { currencies }\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            {\n                networkDetails.id !== 'ethereum' ? \n                    <div id=\"network-warning\">\n                        <b>NOTE:</b> Some deposit methods are unavailable on <b>{networkDetails.name}</b>. Switch to Ethereum for the widest support.\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    )\n}\n","import './Deposit.scss'\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { MdAccountBalance, MdAccountBalanceWallet } from 'react-icons/md'\nimport QRCode from 'qrcode'\nimport TextInput from 'components/common/TextInput/TextInput'\nimport Providers from './Providers/Providers'\n\nimport networks from 'consts/networks'\n\nexport default function Deposit({ selectedAcc, selectedNetwork }) {\n    const networkDetails = networks.find(({ id }) => id === selectedNetwork)\n    const [qrCodeUrl, setQrCodeUrl] = useState('')\n\n    const generateQRCode = useCallback(() => {\n        QRCode.toDataURL(selectedAcc, {\n            quality: 1,\n            margin: 1\n        }, (error, url) => {\n            if (error) return console.error(error)\n            setQrCodeUrl(url)\n        })\n    }, [selectedAcc])\n\n    useEffect(() => generateQRCode(), [generateQRCode])\n\n    return (\n        <section id=\"deposit\">\n            <div className=\"panel\">\n                <div className=\"heading\">\n                     <div className=\"title\">\n                        <MdAccountBalanceWallet size={35}/>\n                        Deposit Tokens\n                    </div>\n                    <div className=\"subtitle\">\n                        Direct Deposit\n                    </div>\n                </div>\n                <div className=\"description\">\n                    <TextInput className=\"depositAddress\" label={`Send ${networkDetails.nativeAssetSymbol}, tokens or collectibles (NFTs) to this address:`} value={selectedAcc} copy/>\n                    <img id=\"qr-code\" alt=\"QR Code\" src={qrCodeUrl}></img>\n                </div>\n                <div id=\"networks\">\n                    Following networks supported on this address:\n                    <div className=\"list\">\n                        {\n                            networks.map(({ id, icon, name }) => (\n                                <div className=\"network\" key={id}>\n                                    <div className=\"icon\" style={{backgroundImage: `url(${icon})`}}></div>\n                                    <div className=\"name\">{ name }</div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className=\"panel\">\n                <div className=\"heading\">\n                    <div className=\"title\">\n                        <MdAccountBalance size={35}/>\n                        Fiat Currency\n                    </div>\n                    <div className=\"subtitle\">\n                        Credit Card & Bank Transfer\n                    </div>\n                </div>\n                <div className=\"description\">\n                    Deposit with credit card to your account directly using one of our partners\n                </div>\n                <Providers walletAddress={selectedAcc} networkDetails={networkDetails}/>\n            </div>\n        </section>\n    )\n}","import './GnosisSafeApps.scss'\n\nimport { useEffect, useRef, useState } from 'react'\nimport {\n    Skeleton,\n    AmbireLoading\n} from 'components/common'\n\nexport default function GnosisSafeAppIframe({\n    selectedApp = {},\n    title = 'Ambire Plugin',\n    network,\n    selectedAcc,\n    gnosisConnect,\n    gnosisDisconnect\n}) {\n\n    const { chainId } = network || {}\n    const { url } = selectedApp || {}\n    const [loading, setLoading] = useState(true)\n    const [hash, setHash] = useState('')\n    const iframeRef = useRef(null);\n\n\n    useEffect(() => {\n        const newHash = url + chainId + selectedAcc\n        setHash(newHash)\n    }, [chainId, selectedAcc, url])\n\n    useEffect(() => {\n        setLoading(true)\n    }, [hash])\n\n    useEffect(() => {\n        gnosisConnect({\n            selectedAcc,\n            iframeRef,\n            app: selectedApp\n        });\n\n        return () => {\n            gnosisDisconnect()\n        }\n\n    }, [selectedApp, network, selectedAcc, iframeRef, gnosisConnect, gnosisDisconnect])\n\n    return (\n        <div id=\"plugin-gnosis-container\">\n            {\n                loading &&\n                <div className='iframe-placeholder'>\n                    <Skeleton >\n                        <AmbireLoading />\n                    </Skeleton>\n                </div>\n            }\n\n            {\n                url &&\n                <iframe\n                    id={hash}\n                    key={hash}\n                    ref={iframeRef}\n                    title={title}\n                    src={url}\n                    onLoad={() => setLoading(false)}\n                    style={loading ? { display: 'none' } : {}}\n                />\n            }\n        </div>)\n}\n","import { SUSHI_SWAP_FRAME } from 'config'\nimport GnosisSafeAppIframe from 'components/Plugins/GnosisSafeApps/GnosisSafeAppIframe'\n\nconst ambireSushi = {\n    name: \"Ambire swap\",\n    url: SUSHI_SWAP_FRAME,\n    logo: 'https://www.ambire.com/ambire-logo.png',\n    desc: 'Ambire swap'\n}\n\nexport default function SushiSwap({ network, selectedAcc, gnosisConnect, gnosisDisconnect }) {\n    return (\n        <GnosisSafeAppIframe\n            network={network}\n            selectedAcc={selectedAcc}\n            gnosisConnect={gnosisConnect}\n            gnosisDisconnect={gnosisDisconnect}\n            selectedApp={ambireSushi}\n            title={'Ambire swap'}\n        />\n    )\n}","import './Swap.scss';\n\nimport React from 'react';\nimport SwapComponent from './SushiIframe'\n\nexport default function Swap(props) {\n    return (\n        <section id=\"swap\">     \n            <SwapComponent {...props} />  \n        </section>\n    )\n}","import { parseUnits } from 'ethers/lib/utils'\nimport { isValidAddress, isKnownTokenOrContract } from \"lib/address\"\n\nconst validateAddress = address => {\n    if (!(address && address.length)) {\n        return {\n            success: false,\n            message: ''\n        }\n    }\n\n    if (!(address && isValidAddress(address))) {\n        return {\n            success: false,\n            message: 'Invalid address.'\n        }\n    }\n\n    return { success: true }\n}\n\nconst validateAddAuthSignerAddress = (address, selectedAcc) => {\n    const isValidAddr = validateAddress(address)\n    if (!isValidAddr.success) return isValidAddr\n\n    if (address && selectedAcc && (address === selectedAcc)) {\n        return {\n            success: false,\n            message: 'The entered address should be different than the your own account address.'\n        }\n    }\n    \n    return { success: true }\n}\n\nconst validateSendTransferAddress = (address, selectedAcc, addressConfirmed, isKnownAddress) => {\n    const isValidAddr = validateAddress(address)\n    if (!isValidAddr.success) return isValidAddr\n\n    if (address && selectedAcc && (address === selectedAcc)) {\n        return {\n            success: false,\n            message: 'The entered address should be different than the your own account address.'\n        }\n    }\n    \n    if (address && isKnownTokenOrContract(address)) {\n        return {\n            success: false,\n            message: 'You are trying to send tokens to a smart contract. Doing so would burn them.'\n        }\n    }\n\n    if (address && (!isKnownAddress(address) && !addressConfirmed)) {\n        return {\n            success: false,\n            message: `You're trying to send to an unknown address. If you're really sure, confirm using the checkbox below.`\n        }\n    }\n\n    return { success: true }\n}\n\nconst validateSendTransferAmount = (amount, selectedAsset) => {\n    if (!(amount && amount.length)) {\n        return {\n            success: false,\n            message: ''\n        }\n    }\n    \n    if (!(amount && (amount > 0))) {\n        return {\n            success: false,\n            message: 'The amount must be greater than 0.'\n        }\n    }\n\n    try {\n        if (amount && selectedAsset && selectedAsset.decimals) {\n            const parsedAmount = amount.slice(0, amount.indexOf('.') + selectedAsset.decimals + 1); // Fixed decimals in case amount is bigger than selectedAsset.decimals, otherwise would cause overflow error\n            const bigNumberAmount = parseUnits(parsedAmount, selectedAsset.decimals)\n            if (bigNumberAmount && selectedAsset.balanceRaw && bigNumberAmount.gt(selectedAsset.balanceRaw)) {\n                return {\n                    success: false,\n                    message: `The amount is greater than the asset's balance: ${selectedAsset?.balance} ${selectedAsset?.symbol}.`\n                }\n            }\n        }\n    } catch(e) {\n        console.error(e);\n    }\n\n    return { success: true }\n}\n\nconst validateSendNftAddress = (address, selectedAcc, addressConfirmed, isKnownAddress, metadata, selectedNetwork, network) => {\n    const isValidAddr = validateSendTransferAddress(address, selectedAcc, addressConfirmed, isKnownAddress)\n    if (!isValidAddr.success) return isValidAddr\n\n    if (metadata && selectedAcc && (metadata.owner?.address !== selectedAcc)) {\n        return {\n            success: false,\n            message: `The NFT you're trying to send is not owned by you!`\n        }\n    }\n\n    if (selectedNetwork && network && (selectedNetwork.id !== network)) {\n        return {\n            success: false,\n            message: 'The selected network is not the correct one.'\n        }\n    }\n\n    return { success: true }\n}\n\nexport {\n    validateAddAuthSignerAddress,\n    validateSendNftAddress,\n    validateSendTransferAddress,\n    validateSendTransferAmount\n}\n","import './Addresses.scss'\n\nimport { MdOutlineAdd } from 'react-icons/md'\nimport AddressList from 'components/common/AddressBook/AddressList/AddressList'\nimport { Button } from 'components/common'\nimport { isValidAddress } from 'lib/address'\nimport { InputModal } from 'components/Modals'\nimport { useModals } from 'hooks'\n\nconst Addresses = ({ addresses, addAddress, removeAddress, onSelectAddress }) => {\n    const { showModal } = useModals()\n\n    const modalInputs = [\n        { label: 'Name', placeholder: 'My Address' },\n        { label: 'Address', placeholder: '0x', validate: value => isValidAddress(value) }\n    ]\n\n    const inputModal = <InputModal title=\"Add New Address\" inputs={modalInputs} onClose={([name, address]) => addAddress(name, address)}></InputModal>\n    const showInputModal = () => showModal(inputModal)\n\n    return (\n        <div id=\"addresses\" className='panel'>\n            <div className='title'>Address Book</div>\n            <div className=\"content\">\n                <AddressList\n                    noAccounts={true}\n                    addresses={addresses}\n                    removeAddress={removeAddress}\n                    onSelectAddress={onSelectAddress}\n                />\n            </div>\n            <div className=\"separator\"></div>\n            <Button icon={<MdOutlineAdd/>} onClick={showInputModal}>Add Address</Button>\n        </div>\n    )\n}\n\nexport default Addresses","import './Transfer.scss'\n\nimport { BsXLg } from 'react-icons/bs'\nimport { AiOutlineSend } from 'react-icons/ai'\nimport { useParams, withRouter } from 'react-router'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ethers } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { useToasts } from 'hooks/toasts'\nimport { TextInput, NumberInput, Button, Select, Loading, AddressBook, AddressWarning, NoFundsPlaceholder, Checkbox } from 'components/common'\nimport { validateSendTransferAddress, validateSendTransferAmount } from 'lib/validations/formValidations'\nimport { isValidAddress } from 'lib/address'\nimport Addresses from './Addresses/Addresses'\nimport { MdInfo } from 'react-icons/md'\nimport networks from 'consts/networks'\n\nconst ERC20 = new Interface(require('adex-protocol-eth/abi/ERC20'))\nconst unsupportedSWPlatforms = ['Binance', 'Huobi', 'KuCoin', 'Gate.io', 'FTX']\n\nconst Transfer = ({ history, portfolio, selectedAcc, selectedNetwork, addRequest, addressBook }) => {\n    const { addresses, addAddress, removeAddress, isKnownAddress } = addressBook\n\n    const { tokenAddressOrSymbol } = useParams()\n    const { addToast } = useToasts()\n\n    const tokenAddress = isValidAddress(tokenAddressOrSymbol) ? tokenAddressOrSymbol : portfolio.tokens.find(({ symbol }) => symbol === tokenAddressOrSymbol)?.address || null\n\n    const [asset, setAsset] = useState(tokenAddress)\n    const [amount, setAmount] = useState(0)\n    const [bigNumberHexAmount, setBigNumberHexAmount] = useState('')\n    const [address, setAddress] = useState('')\n    const [disabled, setDisabled] = useState(true)\n    const [addressConfirmed, setAddressConfirmed] = useState(false)\n    const [sWAddressConfirmed, setSWAddressConfirmed] = useState(false)\n    const [newAddress, setNewAddress] = useState('')\n    const [validationFormMgs, setValidationFormMgs] = useState({ \n        success: { \n            amount: false,\n            address: false\n        }, \n        messages: { \n            amount: '', \n            address: ''\n        }\n    })\n\n    const assetsItems = portfolio.tokens.map(({ label, symbol, address, img, tokenImageUrl }) => ({\n        label: label || symbol,\n        value: address,\n        icon: img || tokenImageUrl\n    }))\n\n    const selectedAsset = portfolio.tokens.find(({ address }) => address === asset)\n\n    const maxAmount = useMemo(() => {\n        if (!selectedAsset) return 0;\n        const { balanceRaw, decimals } = selectedAsset\n        return ethers.utils.formatUnits(balanceRaw, decimals)\n    }, [selectedAsset])\n\n    const showSWAddressWarning = useMemo(() => \n        Number(tokenAddress) === 0 && networks.map(({ id }) => id).filter(id => id !== 'ethereum').includes(selectedNetwork.id)\n    , [tokenAddress, selectedNetwork])\n\n    const setMaxAmount = () => onAmountChange(maxAmount)\n\n    const onAmountChange = value => {\n        if (value) {\n            const { decimals } = selectedAsset\n            const bigNumberAmount = ethers.utils.parseUnits(value, decimals).toHexString()\n            setBigNumberHexAmount(bigNumberAmount)\n        }\n\n        setAmount(value)\n    }\n\n    const sendTx = () => {\n        try {\n            const txn = {\n                to: selectedAsset.address,\n                value: '0',\n                data: ERC20.encodeFunctionData('transfer', [address, bigNumberHexAmount])\n            }\n\n            if (Number(selectedAsset.address) === 0) {\n                txn.to = address\n                txn.value = bigNumberHexAmount\n                txn.data = '0x'\n            }\n\n            addRequest({\n                id: `transfer_${Date.now()}`,\n                type: 'eth_sendTransaction',\n                chainId: selectedNetwork.chainId,\n                account: selectedAcc,\n                txn\n            })\n\n            setAmount(0)\n        } catch(e) {\n            console.error(e)\n            addToast(`Error: ${e.message || e}`, { error: true })\n        }\n    }\n\n    useEffect(() => {\n        setAmount(0)\n        setBigNumberHexAmount('')\n        setSWAddressConfirmed(false)\n    }, [asset, selectedNetwork.id])\n\n    useEffect(() => {\n        if (!selectedAsset) return\n        history.replace({ pathname: `/wallet/transfer/${Number(asset) !== 0 ? asset : selectedAsset.symbol}` })\n    }, [asset, history, selectedAsset])\n\n    useEffect(() => {\n        const isValidRecipientAddress = validateSendTransferAddress(address, selectedAcc, addressConfirmed, isKnownAddress)\n        const isValidSendTransferAmount = validateSendTransferAmount(amount, selectedAsset) \n       \n        setValidationFormMgs({ \n            success: { \n                amount: isValidSendTransferAmount.success, \n                address: isValidRecipientAddress.success \n            }, \n            messages: { \n                amount: isValidSendTransferAmount.message ?  isValidSendTransferAmount.message : '',\n                address: isValidRecipientAddress.message ? isValidRecipientAddress.message : ''\n            }\n        })\n\n        setDisabled(!isValidRecipientAddress.success || !isValidSendTransferAmount.success || (showSWAddressWarning && !sWAddressConfirmed))\n    }, [address, amount, selectedAcc, selectedAsset, addressConfirmed, showSWAddressWarning, sWAddressConfirmed, isKnownAddress, addToast])\n\n    const amountLabel = <div className=\"amount-label\">Available Amount: <span>{ maxAmount } { selectedAsset?.symbol }</span></div>\n\n    return (\n        <div id=\"transfer\">\n           <div className=\"panel\">\n               <div className=\"title\">\n                   Send\n               </div>\n               {\n                    portfolio.isBalanceLoading ?\n                        <Loading/>\n                        :\n                        assetsItems.length ? \n                            <div className=\"form\">\n                                <Select searchable defaultValue={asset} items={assetsItems} onChange={(value) => setAsset(value)}/>\n                                <NumberInput\n                                    label={amountLabel}\n                                    value={amount}\n                                    precision={selectedAsset?.decimals}\n                                    onInput={onAmountChange}\n                                    button=\"MAX\"\n                                    onButtonClick={() => setMaxAmount()}\n                                />\n                                { validationFormMgs.messages.amount && \n                                    (<div className='validation-error'><BsXLg size={12}/>&nbsp;{validationFormMgs.messages.amount}</div>)}\n                                <div id=\"recipient-field\">\n                                    <TextInput\n                                        placeholder=\"Recipient\"\n                                        info=\"Please double-check the recipient address, blockchain transactions are not reversible.\"\n                                        value={address}\n                                        onInput={setAddress}\n                                    />\n                                    <AddressBook \n                                        addresses={addresses.filter(x => x.address !== selectedAcc)}\n                                        addAddress={addAddress}\n                                        removeAddress={removeAddress}\n                                        newAddress={newAddress}\n                                        onClose={() => setNewAddress(null)}\n                                        onSelectAddress={address => setAddress(address)}\n                                    />\n                                </div>\n                                { validationFormMgs.messages.address && \n                                    (<div className='validation-error'><BsXLg size={12}/>&nbsp;{validationFormMgs.messages.address}</div>)}\n                                <div className=\"separator\"/>\n                                <AddressWarning\n                                    address={address}\n                                    onAddNewAddress={() => setNewAddress(address)}\n                                    onChange={(value) => setAddressConfirmed(value)}\n                                    isKnownAddress={isKnownAddress}\n                                />\n                                {\n                                    showSWAddressWarning ? \n                                        <Checkbox \n                                            id=\"binance-address-warning\"\n                                            label={<span id=\"binance-address-warning-label\">\n                                                I confirm this address is not a { unsupportedSWPlatforms.join(' / ') } address: <br/>\n                                                These platforms does not support ${selectedAsset?.symbol} deposits from smart wallets\n                                                <a href='https://help.ambire.com/hc/en-us/articles/4415473743506-Statement-on-MATIC-BNB-deposits-to-Binance' target='_blank' rel='noreferrer'><MdInfo size={20}/></a>\n                                            </span>}\n                                            checked={sWAddressConfirmed}\n                                            onChange={({ target }) => setSWAddressConfirmed(target.checked)}\n                                        />\n                                        :\n                                        null\n                                }\n                                <Button icon={<AiOutlineSend/>} disabled={disabled} onClick={sendTx}>Send</Button>\n                            </div>\n                            :\n                            <NoFundsPlaceholder/>\n               }\n           </div>\n           <Addresses\n                addresses={addresses}\n                addAddress={addAddress}\n                removeAddress={removeAddress}\n                onSelectAddress={address => setAddress(address)}\n            />\n        </div>\n    )\n}\n\nexport default withRouter(Transfer)\n","const AAVELendingPoolAbi = [\n    \"function getLendingPool() view returns (address address)\",\n    \"function getReservesList() view returns (address[] memory)\",\n    \"function getReserveData(address asset) view returns (tuple(uint256 availableLiquidity, uint256 totalStableDebt, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256 stableBorrowRate, uint256 averageStableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp) memory)\",\n    \"function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)\",\n    \"function withdraw(address asset, uint256 amount, address to)\",\n]\n\nexport default AAVELendingPoolAbi","const AAVELendingPoolProviders = {\n    ethereum: '0xb53c1a33016b2dc2ff3653530bff1848a515c8c5',\n    polygon: '0xd05e3E715d945B59290df0ae8eF85c1BdB684744',\n    avalanche: '0xb6A86025F0FE1862B372cb0ca18CE3EDe02A318f'\n}\n\nexport default AAVELendingPoolProviders","export default __webpack_public_path__ + \"static/media/aave.58aec338.svg\";","import './Card.scss'\n\nimport { Select, Segments, NumberInput, Button, Loading } from 'components/common'\nimport { useEffect, useState, useMemo, useCallback } from 'react'\nimport { BsArrowDownSquare, BsArrowUpSquare } from 'react-icons/bs'\nimport { ethers } from 'ethers'\n\nconst segments = [{ value: 'Deposit' }, { value: 'Withdraw' }]\n\nconst Card = ({ loading, unavailable, tokensItems, icon, details, onTokenSelect, onValidate }) => {    \n    const [segment, setSegment] = useState(segments[0].value)\n    const [tokens, setTokens] = useState([])\n    const [token, setToken] = useState()\n    const [amount, setAmount] = useState(0)\n    const [disabled, setDisabled] = useState(true)\n\n    const currentToken = tokens.find(({ value }) => value === token)\n\n    // Sort tokens items by balance\n    const getEquToken = useCallback(token => tokensItems.find((({ address, type }) => address === token.address && (token.type === 'deposit' ? type === 'withdraw' : type === 'deposit'))), [tokensItems])\n    const sortedTokenItems = useMemo(() => [...tokensItems].sort((a, b) => (b?.balance + getEquToken(b)?.balance) - (a?.balance + getEquToken(a)?.balance)), [tokensItems, getEquToken])\n\n    const getMaxAmount = () => {\n        if (!currentToken) return 0;\n        const { balanceRaw, decimals } = currentToken\n        return ethers.utils.formatUnits(balanceRaw, decimals)\n    }\n\n    const setMaxAmount = () => setAmount(getMaxAmount(amount))\n\n    useEffect(() => {\n        if (segment === segments[0].value) setTokens(sortedTokenItems.filter(({ type }) => type === 'deposit'))\n        if (segment === segments[1].value) setTokens(sortedTokenItems.filter(({ type }) => type === 'withdraw'))\n    }, [segment, sortedTokenItems])\n\n    useEffect(() => setAmount(0), [token, segment])\n\n    useEffect(() => {\n        onTokenSelect(token)\n        setDisabled(!token || !tokens.length)\n    }, [token, onTokenSelect, tokens.length])\n\n    const amountLabel = <div className=\"amount-label\">Available Amount: <span>{ !disabled ? `${getMaxAmount()} ${currentToken?.symbol}` : '0' }</span></div>\n\n    return (\n        <div className=\"card\">\n            <div className=\"title\">\n                <img src={icon} alt=\"Icon\" />\n            </div>\n            {\n                loading ?\n                    <Loading/>\n                    :\n                    unavailable ?\n                        <div className=\"unavailable\">\n                            Unavailable on this Network\n                        </div>\n                        :\n                        <div className=\"content\">\n                            <Select\n                                searchable\n                                disabled={disabled}\n                                label=\"Choose Token\"\n                                defaultValue={token}\n                                items={tokens}\n                                onChange={(value) => setToken(value)}\n                            />\n                            {\n                                !disabled ? \n                                    <ul className=\"details\">\n                                        {\n                                            details.map(([type, value]) => (\n                                                <li key={type}><b>{type}</b> {value}</li>\n                                            ))\n                                        }\n                                    </ul>\n                                    :\n                                    <div className=\"details-placeholder\">\n                                        <div/>\n                                        <div/>\n                                        <div/>\n                                    </div>\n                            }\n                            <Segments small defaultValue={segment} segments={segments} onChange={(value) => setSegment(value)}></Segments>\n                            <NumberInput\n                                disabled={!currentToken?.balance}\n                                min=\"0\"\n                                max={currentToken?.balance}\n                                value={amount}\n                                label={amountLabel}\n                                onInput={(value) => setAmount(value)}\n                                button=\"MAX\"\n                                onButtonClick={setMaxAmount}\n                            />\n                            <div className=\"separator\"></div>\n                            <Button \n                                disabled={disabled || amount <= 0 || amount > currentToken?.balance}\n                                icon={segment === segments[0].value ? <BsArrowDownSquare/> : <BsArrowUpSquare/>}\n                                onClick={() => onValidate(segment, token, amount)}>\n                                    { segment }\n                            </Button>\n                        </div>\n            }\n        </div>\n    )\n}\n\nexport default Card","let zapperStorage = 'https://storage.googleapis.com/zapper-fi-assets/tokens'\nlet tokens = {\n    ethereum: [\n        {\n            address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n            symbol: 'WETH'\n        },\n        {\n            address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n            symbol: 'WBTC'\n        },\n        {\n            address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n            symbol: 'USDC'\n        },\n        {\n            address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n            symbol: 'USDT'\n        },\n        {\n            address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n            symbol: 'DAI'\n        },\n        {\n            address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9',\n            symbol: 'AAVE'\n        },\n    ],\n    polygon: [\n        {\n            address: '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619',\n            symbol: 'WETH'\n        },\n        {\n            address: '0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6',\n            symbol: 'WBTC'\n        },\n        {\n            address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\n            symbol: 'USDC'\n        },\n        {\n            address: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\n            symbol: 'USDT'\n        },\n        {\n            address: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',\n            symbol: 'DAI'\n        },\n        {\n            address: '0xd6df932a45c0f255f85145f286ea0b292b21c90b',\n            symbol: 'AAVE'\n        },\n    ],\n    avalanche: [\n        {\n            address: '0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab',\n            symbol: 'WETH.e'\n        },\n        {\n            address: '0x50b7545627a5162f82a992c33b87adc75187b218',\n            symbol: 'WBTC.e'\n        },\n        {\n            address: '0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664',\n            symbol: 'USDC.e'\n        },\n        {\n            address: '0xc7198437980c041c805a1edcba50c1ce5db95118',\n            symbol: 'USDT.e'\n        },\n        {\n            address: '0xd586e7f844cea2f87f50152665bcbc2c279d8d70',\n            symbol: 'DAI.e'\n        },\n        {\n            address: '0x63a72806098bd3d9520cc43356dd78afe5d386d9',\n            symbol: 'AAVE.e'\n        },\n    ],\n    'binance-smart-chain': []\n}\n\nconst getDefaultTokensItems = network => {\n    const items = (tokens[network] || []).map(token => ({\n        ...token,\n        img: `${zapperStorage}/${network}/${token.address}.png`,\n        balance: 0,\n        balanceRaw: '0',\n    })) || []\n\n    return [\n        ...items.map(token => ({ ...token, type: 'deposit' })),\n        ...items.map(token => ({ ...token, type: 'withdraw', symbol: `a${token.symbol}` }))\n    ]\n}\n\nexport { getDefaultTokensItems }\n","import ERC20ABI from 'adex-protocol-eth/abi/ERC20.json'\nimport { constants, Contract } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { getProvider } from './provider'\n\nconst ERC20Interface = new Interface(ERC20ABI)\n\nconst approveToken = async (scope, networkId, accountId, address, tokenAddress, addRequestTxn, addToast, bigNumberHexAmount = constants.MaxUint256) => {\n    try {\n        const prefixId = scope.toLowerCase().replace(/' '/g, '_')\n        const provider = getProvider(networkId)\n        const tokenContract = new Contract(tokenAddress, ERC20Interface, provider)\n        const allowance = await tokenContract.allowance(accountId, address)\n\n        if (allowance.lt(bigNumberHexAmount)) {\n            addRequestTxn(`${prefixId}_approve_${Date.now()}`, {\n                to: tokenAddress,\n                value: '0x0',\n                data: ERC20Interface.encodeFunctionData('approve', [address, bigNumberHexAmount])\n            })\n        }\n    } catch(e) {\n        console.error(e)\n        addToast(`${scope} Approve Error: ${e.message || e}`, { error: true })\n    }\n}\n\nexport default approveToken","import { ethers } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport AAVELendingPoolAbi from 'consts/AAVELendingPoolAbi'\nimport AAVELendingPoolProviders from 'consts/AAVELendingPoolProviders'\nimport networks from 'consts/networks'\nimport { getProvider } from 'lib/provider'\n\nimport AAVE_ICON from 'resources/aave.svg'\nimport Card from 'components/Wallet/Earn/Card/Card'\nimport { getDefaultTokensItems } from './defaultTokens'\nimport approveToken from 'lib/approveToken'\n\nconst AAVELendingPool = new Interface(AAVELendingPoolAbi)\nconst RAY = 10**27\nlet lendingPoolAddress = null\n\nconst AAVECard = ({ networkId, tokens, protocols, account, addRequest }) => {\n    const { addToast } = useToasts()\n\n    const currentNetwork = useRef()\n    const [isLoading, setLoading] = useState(true)\n    const [unavailable, setUnavailable] = useState(false)\n    const [tokensItems, setTokensItems] = useState([])\n    const [details, setDetails] = useState([])\n\n    const onTokenSelect = useCallback(async (value) => {\n        const token = tokensItems.find(({ address }) => address === value)\n        if (token) {\n            setDetails([\n                ['Annual Percentage Rate (APR)', `${token.apr}%`],\n                ['Lock', 'No Lock'],\n                ['Type', 'Variable Rate'],\n            ])\n        }\n    }, [tokensItems])\n\n    const networkDetails = networks.find(({ id }) => id === networkId)\n    const defaultTokens = useMemo(() => getDefaultTokensItems(networkDetails.id), [networkDetails.id])\n    const getToken = (type, address) => tokensItems.filter(token => token.type === type).find(token => token.address === address)\n    const addRequestTxn = (id, txn, extraGas = 0) => addRequest({ id, type: 'eth_sendTransaction', chainId: networkDetails.chainId, account, txn, extraGas })\n\n    const onValidate = async (type, tokenAddress, amount) => {\n        if (type === 'Deposit') {\n            const token = getToken('deposit', tokenAddress)\n            const bigNumberHexAmount = ethers.utils.parseUnits(amount.toString(), token.decimals).toHexString()\n            await approveToken('Aave Pool', networkDetails.id, account, lendingPoolAddress, tokenAddress, addRequestTxn, addToast)\n\n            try {\n                addRequestTxn(`aave_pool_deposit_${Date.now()}`, {\n                    to: lendingPoolAddress,\n                    value: '0x0',\n                    data: AAVELendingPool.encodeFunctionData('deposit', [tokenAddress, bigNumberHexAmount, account, 0])\n                }, 60000)\n            } catch(e) {\n                console.error(e)\n                addToast(`Aave Deposit Error: ${e.message || e}`, { error: true })\n            }\n        }\n        else if (type === 'Withdraw') {\n            const token = getToken('withdraw', tokenAddress)\n            const bigNumberHexAmount = ethers.utils.parseUnits(amount.toString(), token.decimals).toHexString()\n            await approveToken('Aave Pool', networkDetails.id, account, lendingPoolAddress, tokenAddress, addRequestTxn, addToast)\n\n            try {\n                addRequestTxn(`aave_pool_withdraw_${Date.now()}`, {\n                    to: lendingPoolAddress,\n                    value: '0x0',\n                    data: AAVELendingPool.encodeFunctionData('withdraw', [tokenAddress, bigNumberHexAmount, account])\n                }, 60000)\n            } catch(e) {\n                console.error(e)\n                addToast(`Aave Withdraw Error: ${e.message || e}`, { error: true })\n            }\n        }\n    }\n\n    const loadPool = useCallback(async () => {\n        const providerAddress = AAVELendingPoolProviders[networkDetails.id]\n        if (!providerAddress) {\n            setLoading(false)\n            setUnavailable(true)\n            return\n        }\n\n        try {\n            const provider = getProvider(networkDetails.id)\n            const lendingPoolProviderContract = new ethers.Contract(providerAddress, AAVELendingPool, provider)\n            lendingPoolAddress = await lendingPoolProviderContract.getLendingPool()\n        \n            const lendingPoolContract = new ethers.Contract(lendingPoolAddress, AAVELendingPool, provider)\n            const reserves = await lendingPoolContract.getReservesList()\n            const reservesAddresses = reserves.map(reserve => reserve.toLowerCase())\n\n            const withdrawTokens = (protocols.find(({ label }) => label === 'Aave V2')?.assets || [])\n                .map(({ symbol, tokens }) => tokens && tokens.map(token => ({\n                    ...token,\n                    symbol,\n                    type: 'withdraw'\n                })))\n                .flat(1)\n                .filter(token => token)\n\n            const depositTokens = tokens.filter(({ address }) => reservesAddresses.includes(address)).map(token => ({\n                ...token,\n                type: 'deposit'\n            })).filter(token => token)\n\n            const allTokens = (await Promise.all([\n                ...defaultTokens.filter(({ type, address }) => type === 'deposit' && !depositTokens.map(({ address }) => address).includes(address)),\n                ...defaultTokens.filter(({ type, address }) => type === 'withdraw' && !withdrawTokens.map(({ address }) => address).includes(address)),\n                ...withdrawTokens,\n                ...depositTokens\n            ]))\n            \n            const uniqueTokenAddresses = [...new Set(allTokens.map(({ address }) => address))]\n            const tokensAPR = Object.fromEntries(await Promise.all(uniqueTokenAddresses.map(async address => {\n                const data = await lendingPoolContract.getReserveData(address)\n                const { liquidityRate } = data\n                const apr = ((liquidityRate / RAY) * 100).toFixed(2)\n                return [address, apr]\n            })))\n\n            const tokensItems = allTokens.map(token => ({\n                ...token,\n                apr: tokensAPR[token.address],\n                icon: token.img || token.tokenImageUrl,\n                label: `${token.symbol} (${tokensAPR[token.address]}% APR)`,\n                value: token.address\n            }))\n\n            // Prevent race conditions\n            if (currentNetwork.current !== networkDetails.id) return\n\n            setTokensItems(tokensItems)\n            setLoading(false)\n            setUnavailable(false)\n        } catch(e) {\n            console.error(e);\n            addToast(`Aave load pool error: ${e.message || e}`, { error: true })\n        }\n    }, [addToast, protocols, tokens, defaultTokens, networkDetails])\n\n    useEffect(() => loadPool(), [loadPool])\n    useEffect(() => {\n        currentNetwork.current = networkId\n        setLoading(true)\n    }, [networkId])\n\n    return (\n        <Card loading={isLoading} unavailable={unavailable} icon={AAVE_ICON} details={details} tokensItems={tokensItems} onTokenSelect={onTokenSelect} onValidate={onValidate}/>\n    )\n}\n\nexport default AAVECard\n","const YearnVaultABI = [\n    \"function token() view returns (address)\",\n    \"function deposit(uint256 _amount, address recipient)\",\n    \"function withdraw(uint256 maxShares, address recipient)\",\n    \"function pricePerShare() view returns (uint256)\",\n]\n\nexport default YearnVaultABI","export default __webpack_public_path__ + \"static/media/yearn.ac5ab573.svg\";","import { useCallback, useState } from 'react'\nimport { Yearn } from '@yfi/sdk'\n\nimport YEARN_ICON from 'resources/yearn.svg'\n\nconst v2VaultsAddresses = { ethereum: [\n    '0xdA816459F1AB5631232FE5e97a05BBBb94970c95',\n    '0xa354F35829Ae975e850e23e9615b11Da1B3dC4DE',\n    '0xdb25cA703181E7484a155DD612b06f57E12Be5F0',\n    '0xA696a63cc78DfFa1a63E9E50587C197387FF6C7E',\n    '0x7Da96a3891Add058AdA2E826306D812C638D87a7',\n    '0xB8C3B7A2A618C552C23B1E4701109a9E756Bab67',\n    '0xe11ba472F74869176652C35D30dB89854b5ae84D',\n    '0xa258C4606Ca8206D8aA700cE2143D7db854D168c',\n    '0xFBEB78a723b8087fD2ea7Ef1afEc93d35E8Bed42',\n    '0x6d765CbE5bC922694afE112C140b8878b9FB0390',\n    '0xFD0877d9095789cAF24c98F7CCe092fa8E120775',\n    '0xd9788f3931Ede4D5018184E198699dC6d66C1915',\n], fantom: [\n    '0x0DEC85e74A92c52b7F708c4B10207D9560CEFaf0',\n    '0x695A4a6e5888934828Cb97A3a7ADbfc71A70922D',\n    '0x935601c5694f23491921c14aA235c65c2ea2c4DE',\n    '0x28F2fB6730d5dbeFc4FF9eB375Bbf33BcB36e774',\n    '0x8b8b4018F1d1e28217A1c7432E729e58e1828D59',\n    '0x2C850cceD00ce2b14AA9D658b7Cad5dF659493Db',\n    '0xDf262B43bea0ACd0dD5832cf2422e0c9b2C539dc',\n    '0x637eC617c86D24E421328e6CAEa1d92114892439',\n    '0xdC9D3bB76Df8bE1e9Ca68C7BF32293a86C829D81',\n    '0xd025b85db175EF1b175Af223BD37f330dB277786',\n    '0xEF0210eB96c7EB36AF8ed1c20306462764935607',\n    '0x27a5ce447f4E581aE69061E90521da4B5b298818',\n    '0x42639b59cf9db5339C1C5cfB5738D0ba4F828F94',\n    '0x148c05caf1Bb09B5670f00D511718f733C54bC4c',\n    '0x3B9bc1f596844Ca8a30A7710Aac7155968Db7d13',\n    '0x83a5Af7540E919dE74cf2D6d5F40e47f11D3E8d1',\n    '0x0A0b23D9786963DE69CB2447dC125c49929419d8',\n    '0x8A807b5742587024783Df3Ed2F149725C197b5eE',\n    '0xD0D1f041F93c0fF1091457618E529610C67A76de',\n    '0x24BC86a808D45f0AAd8008bd3ac2D9356007e833',\n    '0x357ca46da26E1EefC195287ce9D838A6D5023ef3',\n    '0xfF8bb7261E4D51678cB403092Ae219bbEC52aa51',\n    '0xF137D22d7B23eeB1950B3e19d1f578c053ed9715',\n    '0x7ff6fe5bDa1b26fa46880dF8AF844326DAd50d13',\n    '0x0446acaB3e0242fCf33Aa526f1c95a88068d5042',\n    '0x6EEb47BBcDf0059E5F1D6Ee844Ba793D5401bF18',\n    '0xCe2Fc0bDc18BD6a4d9A725791A3DEe33F3a23BB7',\n    '0x9DF9418837281faC4C4c1166f55D35F2799A9107',\n    '0xd817A100AB8A29fE3DBd925c2EB489D67F758DA9',\n    '0x0ed5C4effED69B39C86a8D806462d709Fb96A9E4',\n    '0xD3c19eB022CAC706c898D60d756bf1535d605e1d',\n    '0x35B51a621d78609dE7Cf25BC4e0682c7DEA38799',\n    '0x1b48641D8251c3E84ecbe3f2bD76B3701401906D',\n    '0x36A1E9dF5EfdAB9694de5bFe25A9ACc23F66BCB7',\n    '0xf2d323621785A066E64282d2B407eAc79cC04966',\n    '0x1e0F7D116ffB998EeC879B96698222D1Ee8d87CB',\n    '0xde39F0148496D42cd4e16563463fA5C6504CaA00',\n    '0x0fBbf9848D969776a5Eb842EdAfAf29ef4467698',\n    '0xA36c91E38bf24E9F2df358E47D4134a8894C6a4c',\n    '0xCbCaF8cB8cbeAFA927ECEE0c5C56560F83E9B7D9',\n    '0xcF3b91D83cD5FE15269E6461098fDa7d69138570'\t\n] }\n\nconst customVaultMetadata = {\n    '0xa258C4606Ca8206D8aA700cE2143D7db854D168c': {\n        displayName: 'WETH',\n        displayIcon: 'https://etherscan.io/token/images/weth_28.png'\n    }\n}\n\nconst useYearn = ({ tokens, networkDetails, provider, currentNetwork }) => {\n    const [tokensItems, setTokensItems] = useState([])\n    const [details, setDetails] = useState([])\n\n    const getTokenFromPortfolio = useCallback(tokenAddress => tokens.find(({ address }) => address.toLowerCase() === tokenAddress.toLowerCase()) || {}, [tokens])\n\n    const loadVaults = useCallback(async () => {\n        const yearn = new Yearn(networkDetails.chainId, { provider })\n\n        const v2Vaults = await yearn.vaults.get(v2VaultsAddresses[networkDetails.id])\n        const vaults = v2Vaults.map(({ address, metadata, symbol, token, decimals }) => {\n            const { apy, displayName, displayIcon} = {\n                ...metadata,\n                ...customVaultMetadata[address] || {}\n            }\n            const formattedAPY = (apy?.net_apy * 100).toFixed(2) || 0\n\n            return {\n                vaultAddress: address,\n                apy: formattedAPY,\n                icon: displayIcon,\n                value: address,\n                token: {\n                    address: token,\n                    symbol: displayName,\n                    decimals\n                },\n                yToken: {\n                    address,\n                    symbol,\n                    decimals\n                }\n            }\n        })\n\n        const depositTokens = vaults.map(vault => {\n            const { apy, token } = vault\n            const { address, symbol, decimals } = token\n            const { balance, balanceRaw } = getTokenFromPortfolio(address)\n            return {\n                ...vault,\n                type: 'deposit',\n                label: `${symbol} (${apy}% APY)`,\n                symbol,\n                decimals,\n                tokenAddress: token.address,\n                balance: balance || 0,\n                balanceRaw: balanceRaw || '0',\n            }\n        })\n\n        const withdrawTokens = vaults.map(vault => {\n            const { apy, yToken } = vault\n            const { address, symbol, decimals } = yToken\n            const { balance, balanceRaw } = getTokenFromPortfolio(address)\n            return {\n                ...vault,\n                type: 'withdraw',\n                label: `${symbol} (${apy}% APY)`,\n                symbol,\n                decimals,\n                tokenAddress: yToken.address,\n                balance: balance || 0,\n                balanceRaw: balanceRaw || '0',\n            }\n        })\n\n        // Prevent race conditions\n        if (currentNetwork.current !== networkDetails.id) return\n\n        setTokensItems([\n            ...depositTokens,\n            ...withdrawTokens\n        ])\n    }, [getTokenFromPortfolio, provider, networkDetails, currentNetwork])\n\n    const onTokenSelect = useCallback(address => {\n        const selectedToken = tokensItems.find(t => t.tokenAddress === address)\n        if (selectedToken) setDetails([\n            ['Annual Percentage Yield (APY)', `${selectedToken.apy}%`],\n            ['Lock', 'No Lock'],\n            ['Type', 'Variable Rate'],\n        ])\n    }, [tokensItems])\n\n    return {\n        icon: YEARN_ICON,\n        loadVaults,\n        tokensItems,\n        details,\n        onTokenSelect\n    }\n}\n\nexport default useYearn\n","export default __webpack_public_path__ + \"static/media/tesseract.3da02a6d.svg\";","import { useCallback, useEffect, useState } from 'react'\nimport { Contract } from 'ethers'\nimport ERC20ABI from 'adex-protocol-eth/abi/ERC20.json'\nimport TesseractVaultABI from 'consts/YearnTesseractVaultABI'\nimport { useToasts } from 'hooks/toasts'\n\nimport TESSERACT_ICON from 'resources/tesseract.svg'\n\nconst POLYGON_SCAN_IMAGES = 'https://polygonscan.com/token/images'\nconst VAULTS = [\n    ['tvUSDC', '0x57bDbb788d0F39aEAbe66774436c19196653C3F2', `${POLYGON_SCAN_IMAGES}/centre-usdc_32.png`],\n    ['tvDAI', '0x4c8C6379b7cd039C892ab179846CD30a1A52b125', `${POLYGON_SCAN_IMAGES}/mcdDai_32.png`],\n    ['tvWBTC', '0x6962785c731e812073948a1f5E181cf83274D7c6', `${POLYGON_SCAN_IMAGES}/wBTC_32.png`],\n    ['tvWETH', '0x3d44F03a04b08863cc8825384f834dfb97466b9B', `${POLYGON_SCAN_IMAGES}/wETH_32.png`],\n    ['tvWMATIC', '0xE11678341625cD88Bb25544e39B2c62CeDcC83f1', `${POLYGON_SCAN_IMAGES}/wMatic_32.png`],\n]\n\nconst TESR_API_ENDPOINT = 'https://prom.tesr.finance/api/v1'\n\nconst useTesseract = ({ tokens, provider, networkId, currentNetwork }) => {\n    const { addToast } = useToasts()\n\n    const [vaults, setVaults] = useState([])\n    const [tokensItems, setTokensItems] = useState([])\n    const [details, setDetails] = useState([])\n\n    const toTokensItems = useCallback((type, vaults) => {\n        return vaults.map(({ vaultAddress, token, tToken, icon, apy }) => {\n            const { address, symbol, decimals } = type === 'deposit' ? token : tToken\n            const portfolioToken = tokens.find(t => t.address.toLowerCase() === address.toLowerCase())\n            return {\n                type,\n                vaultAddress,\n                tokenAddress: address,\n                symbol,\n                decimals,\n                icon,\n                apy,\n                label: `${symbol} (${apy}% APY)`,\n                value: vaultAddress,\n                balance: portfolioToken ? portfolioToken.balance : 0,\n                balanceRaw: portfolioToken ? portfolioToken.balanceRaw : '0',\n            }\n        })\n    }, [tokens])\n\n    const fetchVaultAPY = useCallback(async ticker => {\n        try {\n            const response = await fetch(`${TESR_API_ENDPOINT}/query?query=deriv(price{network=\"matic\",ticker=\"${ticker}\",version=\"0.4.3.1\"}[10d])*60*60*24*365`)\n            const { data, status } = await response.json()\n            if (!data || status !== 'success' || !data.result.length) return 0\n            return (data.result[0]?.value[1] * 100).toFixed(2)\n        } catch(e) {\n            console.error(e)\n            addToast(`Failed to fetch ${ticker} Vault APY`, { error: true })\n        }\n    }, [addToast])\n\n    const loadVaults = useCallback(async () => {\n        const vaults = (await Promise.all(VAULTS.map(async ([ticker, address, icon]) => {\n            try {\n                const tesseractVaultContract = new Contract(address, TesseractVaultABI, provider)\n                const tokenAddress = await tesseractVaultContract.token()\n                \n                const tokenContract = new Contract(tokenAddress, ERC20ABI, provider)\n                const [symbol, decimals] = await Promise.all([\n                    await tokenContract.symbol(),\n                    await tokenContract.decimals()\n                ])\n\n                const apy = await fetchVaultAPY(ticker)\n\n                return {\n                    vaultAddress: address,\n                    token: {\n                        address: tokenAddress,\n                        decimals,\n                        symbol,\n                    },\n                    tToken: {\n                        address,\n                        decimals,\n                        symbol: `tv${symbol}`,\n                    },\n                    icon,\n                    apy\n                }\n            } catch(e) {\n                console.error(e);\n                addToast('Fetch Tesseract Vaults: ' + e.message || e, { error: true })\n                return null\n            }\n        }))).filter(v => v)\n\n        if (networkId !== currentNetwork.current) return\n        setVaults(vaults);\n    }, [networkId, currentNetwork, fetchVaultAPY, provider, addToast])\n\n    const onTokenSelect = useCallback(address => {\n        const selectedToken = tokensItems.find(t => t.tokenAddress === address)\n        if (selectedToken) setDetails([\n            ['Annual Percentage Yield (APY)', `${selectedToken.apy}%`],\n            ['Lock', 'No Lock'],\n            ['Type', 'Variable Rate'],\n        ])\n    }, [tokensItems])\n\n    useEffect(() => {\n        const depositTokenItems = toTokensItems('deposit', vaults)\n        const withdrawTokenItems = toTokensItems('withdraw', vaults)\n\n        setTokensItems([\n            ...depositTokenItems,\n            ...withdrawTokenItems\n        ])\n    }, [vaults, toTokensItems])\n\n    return {\n        icon: TESSERACT_ICON,\n        loadVaults,\n        tokensItems,\n        details,\n        onTokenSelect\n    }\n}\n\nexport default useTesseract","import Card from 'components/Wallet/Earn/Card/Card'\n\nimport { useEffect, useState, useMemo, useRef } from 'react'\nimport { Interface, parseUnits } from 'ethers/lib/utils'\nimport networks from 'consts/networks'\nimport YEARN_TESSERACT_VAULT_ABI from 'consts/YearnTesseractVaultABI'\nimport useYearn from './useYearn'\nimport useTesseract from './useTesseract'\nimport { useToasts } from 'hooks/toasts'\nimport { getProvider } from 'lib/provider'\nimport AmbireBatcherABI from 'consts/AmbireBatcherABI.json'\nimport ERC20ABI from 'adex-protocol-eth/abi/ERC20.json'\nimport { constants, Contract } from 'ethers'\n\nconst BATCHER_ADDRESS = '0x460fad03099f67391d84c9cc0ea7aa2457969cea'\nconst BATCHER_INTERFACE = new Interface(AmbireBatcherABI)\nconst ERC20_INTERFACE = new Interface(ERC20ABI)\nconst VaultInterface = new Interface(YEARN_TESSERACT_VAULT_ABI)\n\nconst YearnTesseractCard = ({ networkId, accountId, tokens, addRequest }) => {\n    const { addToast } = useToasts()\n\n    const currentNetwork = useRef()\n    const [loading, setLoading] = useState([])\n\n    const unavailable = !(networkId === 'ethereum' || networkId === 'polygon' || networkId === 'fantom')\n    const name = networkId === 'ethereum' ? 'Yearn' : 'Tesseract'\n    const networkDetails = networks.find(({ id }) => id === networkId)\n    const addRequestTxn = (id, txn, extraGas = 0) => addRequest({ id, type: 'eth_sendTransaction', chainId: networkDetails.chainId, account: accountId, txn, extraGas })\n    const provider = useMemo(() => getProvider(networkDetails.id), [networkDetails.id])\n\n    const yearn = useYearn({\n        tokens,\n        provider,\n        networkDetails,\n        currentNetwork\n    })\n\n    const tesseract = useTesseract({\n        tokens,\n        provider,\n        networkId,\n        currentNetwork\n    })\n\n    const {\n        icon,\n        loadVaults,\n        tokensItems,\n        details,\n        onTokenSelect\n    } = useMemo(() => networkId === 'polygon' ? tesseract : yearn, [networkId, yearn, tesseract])\n\n    const onValidate = async (type, value, amount) => {\n        const item = tokensItems.find(t => t.type === type.toLowerCase() && t.value === value)\n        if (!item) return\n\n        const { tokenAddress, vaultAddress, decimals } = item\n        const parsedAmount = amount.slice(0, amount.indexOf('.') + Number(decimals) + 1);\n        const bigNumberAmount = parseUnits(parsedAmount, decimals)\n\n        // Transfer funds to batcher\n        let transferTx = {\n            to: tokenAddress,\n            value: '0x0',\n            data: ERC20_INTERFACE.encodeFunctionData('transfer', [BATCHER_ADDRESS, bigNumberAmount.toHexString()]),\n        }\n\n        if (Number(tokenAddress) === 0) {\n            transferTx = {\n                to: BATCHER_ADDRESS,\n                value: bigNumberAmount.toHexString(),\n                data: '0x'\n            }\n        }\n\n        addRequestTxn(`batcher_call_transfer_funds_${Date.now()}`, transferTx)\n\n        if (type === 'Deposit') {\n            try {\n                // Build approve and deposit tx for batcher\n                let batchCallTxn = []\n\n                const provider = getProvider(networkId)\n                const tokenContract = new Contract(tokenAddress, ERC20_INTERFACE, provider)\n                const allowance = await tokenContract.allowance(BATCHER_ADDRESS, vaultAddress)\n\n                if (allowance.lt(constants.MaxUint256)) {\n                    batchCallTxn.push({\n                        to: tokenAddress,\n                        value: '0x0',\n                        data: ERC20_INTERFACE.encodeFunctionData('approve', [vaultAddress, constants.MaxUint256])\n                    })\n                }\n\n                batchCallTxn.push({\n                    to: vaultAddress,\n                    value: '0x0',\n                    data: VaultInterface.encodeFunctionData('deposit', [bigNumberAmount.toHexString(), accountId])\n                })\n            \n                addRequestTxn(`batcher_call_vault_deposit_${Date.now()}`, {\n                    to: BATCHER_ADDRESS,\n                    value: '0x0',\n                    data: BATCHER_INTERFACE.encodeFunctionData('batchCall', [batchCallTxn])\n                })\n            } catch(e) {\n                console.error(e)\n                addToast(`${name} Deposit Error: ${e.message || e}`, { error: true })\n            }\n        } else if (type === 'Withdraw') {\n            try {\n                const batchCallTxn = [{\n                    to: vaultAddress,\n                    value: '0x0',\n                    data: VaultInterface.encodeFunctionData('withdraw', [bigNumberAmount.toHexString(), accountId])\n                }]\n\n                addRequestTxn(`batcher_call_vault_withdraw_${Date.now()}`, {\n                    to: BATCHER_ADDRESS,\n                    value: '0x0',\n                    data: BATCHER_INTERFACE.encodeFunctionData('batchCall', [batchCallTxn])\n                })\n            } catch(e) {\n                console.error(e)\n                addToast(`${name} Withdraw Error: ${e.message || e}`, { error: true })\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (unavailable) {\n\t\tsetLoading(false)\n\t\treturn\n\t}\n        async function load() {\n            await loadVaults()\n            setLoading(false)\n        }\n        load()\n    }, [unavailable, loadVaults])\n\n    useEffect(() => {\n        currentNetwork.current = networkId\n        if (!unavailable) setLoading(true)\n    }, [networkId, unavailable])\n\n    return (\n        <Card\n            loading={loading}\n            icon={icon}\n            unavailable={unavailable}\n            tokensItems={tokensItems}\n            details={details}\n            onTokenSelect={onTokenSelect}\n            onValidate={onValidate}\n        />\n    )\n}\n\nexport default YearnTesseractCard\n","import './Earn.scss'\nimport AAVECard from './Cards/AAVECard/AAVECard'\nimport YearnTesseractCard from './Cards/YearnTesseractCard/YearnTesseractCard'\nimport { Loading } from 'components/common'\n\nconst Earn = ({ portfolio, selectedNetwork, selectedAcc, addRequest }) => {\n    return (\n        <div id=\"earn\">\n            {\n                portfolio.isBalanceLoading ?\n                    <Loading/>\n                    :\n                    <div className=\"cards\">\n                        <AAVECard networkId={selectedNetwork.id} tokens={portfolio.tokens} protocols={portfolio.protocols} account={selectedAcc} addRequest={addRequest}/>\n                        <YearnTesseractCard\n                            networkId={selectedNetwork.id}\n                            accountId={selectedAcc}\n                            tokens={portfolio.tokens}\n                            addRequest={addRequest}\n                        />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default Earn","import './AddAuthSigner.scss'\nimport { useState, useEffect, useCallback } from 'react'\n\nimport { TextInput, Button, DropDown } from 'components/common'\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport TrezorConnect from 'trezor-connect'\nimport { TrezorSubprovider } from '@0x/subproviders/lib/src/subproviders/trezor' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { SelectSignerAccountModal } from 'components/Modals'\nimport { useModals } from 'hooks'\nimport { isFirefox } from 'lib/isFirefox'\nimport { ledgerGetAddresses, PARENT_HD_PATH } from \"lib/ledgerWebHID\"\nimport { validateAddAuthSignerAddress } from 'lib/validations/formValidations'\nimport { BsXLg } from 'react-icons/bs'\nimport { MdOutlineAdd } from 'react-icons/md'\n\nconst AddAuthSigner = props => {\n  const [signerAddress, setSignerAddress] = useState({\n    address: '',\n    index: 0,\n  })\n  const [addAccErr, setAddAccErr] = useState('')\n  const [disabled, setDisabled] = useState(true)\n  const [modalToggle, setModalToggle] = useState(true)\n  const [signersToChoose, setChooseSigners] = useState(null)\n  const [textInputInfo, setTextInputInfo] = useState('')\n  const { showModal } = useModals()\n  const [validationFormMgs, setValidationFormMgs] = useState({ \n    success: false, \n    message: ''\n  })\n\n\n  async function connectLedgerAndGetAccounts() {\n    if (isFirefox()) {\n      await connectLedgerAndGetAccountsU2F()\n    } else {\n      await connectLedgerAndGetAccountsWebHID()\n    }\n  }\n\n  async function connectLedgerAndGetAccountsU2F() {\n    const provider = new LedgerSubprovider({\n      networkId: 0, // @TODO: is this needed?\n      ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\n      baseDerivationPath: PARENT_HD_PATH\n    })\n    // NOTE: do not attempt to do both of these together (await Promise.all)\n    // there is a bug in the ledger subprovider (race condition), so it will think we're trying to make two connections simultaniously\n    // cause one call won't be aware of the other's attempt to connect\n      const addresses = await provider.getAccountsAsync(100)\n      setChooseSigners({ addresses, signerName: 'Ledger' })\n      setModalToggle(true)\n  }\n\n  async function connectLedgerAndGetAccountsWebHID() {\n    let error = null\n    try {\n      const addrData = await ledgerGetAddresses()\n      if (!addrData.error) {\n        if (addrData.addresses.length === 1) {\n          return onSignerAddressClicked({\n            address: addrData.addresses[0],\n            index: 0,\n          })\n        } else {\n          setChooseSigners({ address: addrData.addresses, signerName: 'Ledger' })\n          setModalToggle(true)\n        }\n      } else {\n        error = addrData.error\n      }\n    } catch (e) {\n      console.log(e)\n      if (e.statusCode && e.id === 'InvalidChannel') {\n        error = \"Invalid channel\"\n      } else if (e.statusCode && e.statusCode === 25873) {\n        error = \"Please make sure your ledger is connected and the ethereum app is open\"\n      } else {\n        error = e.message\n      }\n    }\n\n    if (error) {\n      setAddAccErr(`Ledger error: ${error.message || error}`)\n    }\n  }\n\n  async function connectTrezorAndGetAccounts() {\n    /*\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n      engine.addProvider(new TrezorSubprovider({ trezorConnectClientApi: TrezorConnect, ...this.config }))\n      engine.addProvider(new CacheSubprovider())\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n      */\n    const provider = new TrezorSubprovider({\n      trezorConnectClientApi: TrezorConnect,\n    })\n    const addresses = await provider.getAccountsAsync(100)\n    setChooseSigners({ addresses, signerName: 'Trezor' })\n    setModalToggle(true)\n  }\n\n  async function connectWeb3AndGetAccounts() {\n    // @TODO: pending state; should bein the LoginORSignup (AddAccount) component\n    if (typeof window.ethereum === 'undefined') {\n      // @TODO catch this\n      throw new Error('MetaMask not available')\n    }\n    const ethereum = window.ethereum\n    const web3Accs = await ethereum.request({ method: 'eth_requestAccounts' })\n    if (!web3Accs.length) throw new Error('No accounts connected')\n    if (web3Accs.length === 1)\n      return onSignerAddressClicked({\n        address: web3Accs[0],\n        index: 0,\n      })\n\n    setChooseSigners({ addresses: web3Accs, signerName: 'Web3' })\n    setModalToggle(true)\n  }\n\n  const modalHandler = () => {\n    setModalToggle(prevState => !prevState)\n  }\n\n  const wrapErr = async fn => {\n    setAddAccErr('')\n    try {\n      await fn()\n    } catch (e) {\n      console.error(e)\n      setAddAccErr(`Unexpected error: ${e.message || e}`)\n    }\n  }\n\n  const onSignerAddressClicked = useCallback(value => {\n    setSignerAddress(value)\n    modalHandler()\n    if (signersToChoose) setTextInputInfo(`${signersToChoose.signerName} address # ${value.index + 1}`)\n  }, [signersToChoose])\n\n  useEffect(() => {\n    if (modalToggle && signersToChoose)\n      showModal(\n        <SelectSignerAccountModal\n          signersToChoose={signersToChoose.addresses}\n          selectedNetwork={props.selectedNetwork}\n          onSignerAddressClicked={onSignerAddressClicked}\n          description={`You will authorize the selected ${signersToChoose.signerName} address to sign transactions for your account.`}\n        />\n      )\n  }, [modalToggle, onSignerAddressClicked, props.selectedNetwork, showModal, signersToChoose])\n\n  const addFromSignerButtons = (\n    <div className=\"wallet-btns-wrapper\">\n      <Button\n        onClick={() => wrapErr(connectTrezorAndGetAccounts)}\n      >\n        <div\n          className=\"icon\"\n          style={{ backgroundImage: 'url(./resources/trezor.png)' }}\n        />\n        Trezor\n      </Button>\n      <Button\n        onClick={() => wrapErr(connectLedgerAndGetAccounts)}\n      >\n        <div\n          className=\"icon\"\n          style={{ backgroundImage: 'url(./resources/ledger.png)' }}\n        />\n        Ledger\n      </Button>\n      <Button\n        onClick={() => wrapErr(connectWeb3AndGetAccounts)}\n      >\n        <div\n          className=\"icon\"\n          style={{ backgroundImage: 'url(./resources/metamask.png)' }}\n        />\n        Metamask / Browser\n      </Button>\n    </div>\n  )\n\n  const onTextInput = value => {\n    if (textInputInfo.length) setTextInputInfo('')\n    setSignerAddress({ ...signerAddress, address: value })\n  }\n\n  useEffect(() => {\n    const isAddressValid = validateAddAuthSignerAddress(signerAddress.address, props.selectedAcc)\n    \n    setDisabled(!isAddressValid.success)\n\n    setValidationFormMgs({ \n      success: isAddressValid.success, \n      message: isAddressValid.message ? isAddressValid.message : ''\n    })\n\n  }, [props.selectedAcc, signerAddress.address])\n\n  return (\n    <div className=\"content\">\n      <div className=\"signer\">\n        <div className=\"signer-address-input\">\n          <TextInput\n            placeholder=\"Enter signer address\"\n            className=\"depositAddress\"\n            value={signerAddress.address}\n            info={textInputInfo}\n            onInput={onTextInput}\n          />\n          <DropDown\n            style={{ height: '60px' }}\n            title=\"Connect signer\"\n            closeOnClick\n          >\n            {addFromSignerButtons}\n          </DropDown>\n        </div>\n        <div className=\"btns-wrapper\">\n          <Button\n            disabled={disabled}\n            icon={<MdOutlineAdd/>}\n            onClick={() => props.onAddBtnClicked(signerAddress)}\n            small\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n      { validationFormMgs.message && \n        (<div className='validation-error'><BsXLg size={12}/>&nbsp;{validationFormMgs.message}</div>) \n      }\n      {addAccErr ? <h3 className=\"error\">{addAccErr}</h3> : <></>}\n    </div>\n  )\n}\n\nexport default AddAuthSigner\n","import './OtpTwoFAModal.scss'\n\nimport { Modal, Button, TextInput, Loading } from 'components/common'\nimport { authenticator } from '@otplib/preset-default'\nimport QRCode from 'qrcode'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport { fetchPost } from 'lib/fetch'\nimport { useModals } from 'hooks'\nimport { ethers } from 'ethers'\nimport { CountdownTimer } from 'components/common'\n\nconst TIMER_IN_SECONDS = 300\n\nconst OtpTwoFAModal = ({ relayerURL, selectedAcc, setCacheBreak }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n\n    const secret = useMemo(() => authenticator.generateSecret(20), []) \n    \n    const [isLoading, setLoading] = useState(false)\n    const [imageURL, setImageURL] = useState(null)\n    const [receivedOtp, setReceivedOTP] = useState('')\n    const [showSecret, setShowSecret] = useState(false)\n    const [emailConfirmCode, setEmailConfirmCode] = useState('')\n    const [isTimeIsUp, setIsTimeIsUp] = useState(false)\n    const [hexSecret, setHexSecret] = useState()\n    \n    useEffect(() => {\n      setHexSecret(ethers.utils.hexlify(ethers.utils.toUtf8Bytes(JSON.stringify({ otp: secret, timestamp: new Date().getTime() }))))\n    }, [secret])\n\n    const generateQR = useCallback(() => {\n        const otpAuth = authenticator.keyuri(\n            selectedAcc.email,\n            'Ambire Wallet',\n            secret\n        )\n\n        const qrCodeOptions = {\n            quality: 1,\n            margin: 1,\n        }\n        \n        QRCode.toDataURL(otpAuth, qrCodeOptions, (error, url) => {\n            if (error) {\n                console.log(error)\n                addToast(error.message, { error: true })\n            } else {\n                setImageURL(url)\n            }\n        })\n    }, [addToast, secret, selectedAcc.email])\n\n    useEffect(generateQR, [generateQR])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setLoading(true)\n        verifyOTP()\n    }\n\n    const sendEmail = async() => {\n        if (!relayerURL) {\n            addToast('Email/pass accounts not supported without a relayer connection', { error: true })\n            return\n        }\n        \n        const { success, confCodeRequired } = await fetchPost(\n            // network doesn't matter when signing\n            `${relayerURL}/second-key/${selectedAcc.id}/ethereum/sign`, { \n                toSign: hexSecret \n            })\n        \n        if (confCodeRequired !== 'email') addToast('Expected email verification. This should never happen, please report this on help.ambire.com', { error: true })\n        if (success && confCodeRequired === 'email') addToast('A confirmation code was sent to your email, please enter it along...')\n        \n    }\n    \n    const verifyOTP = async () => {\n        const isValid = authenticator.verify({ token: receivedOtp, secret })\n        \n        if (!isValid) {\n            addToast('Invalid or outdated OTP code entered. If you keep seeing this, please ensure your system clock is synced correctly.', { error: true })\n            setLoading(false)\n            return\n        }\n\n        try {\n            if (!emailConfirmCode.length) {\n                addToast('Please enter the code from authenticator app.')\n                return\n            }\n\n            const { success, signatureEthers, message } = await fetchPost(\n                // network doesn't matter when signing\n                `${relayerURL}/second-key/${selectedAcc.id}/ethereum/sign`, {\n                    toSign: hexSecret, \n                    code: emailConfirmCode\n                })\n            \n            if (!success) {\n                throw new Error(message || 'unknown error')\n            }\n            \n            const resp = await fetchPost(\n                `${relayerURL}/identity/${selectedAcc.id}/modify`, { \n                    otp: hexSecret, \n                    sig: signatureEthers \n                })\n\n            if (resp.success) {\n                addToast(`You have successfully enabled two-factor authentication.`)\n                setCacheBreak()\n                resetForm()\n                setLoading(false)\n                hideModal()\n            } else {\n                throw new Error(`${resp.message || 'unknown error'}`)\n            }\n        } catch (e) {\n            console.error(e)\n            addToast('OTP: ' + e.message || e, { error: true })\n            setLoading(false)\n        }\n    }\n\n    const resetForm = () => {\n        setEmailConfirmCode('')\n        setReceivedOTP('')\n    }\n\n    const handleTimeIsUp = (val) => {\n        setIsTimeIsUp(val)\n    }\n\n    return (\n        <Modal\n            title=\"Two Factor Authentication\" \n            topLeft={(<CountdownTimer seconds={TIMER_IN_SECONDS} setTimeIsUp={handleTimeIsUp}/>)}\n        >\n            <div id=\"otp-auth\">\n                {isTimeIsUp && <div className='timer-reset-msg'>Please reopen the modal to reset the session.</div>}\n                <div className=\"img-wrapper\">\n                    <img alt=\"qr-code\" src={imageURL}></img>\n                </div>\n                <div className=\"img-msg\" style={{ marginBottom: showSecret ? '0px' : '22px'}}>\n                    {!showSecret && \n                    (<span className=\"click-here\" onClick={() => { setShowSecret(prevState => !prevState) }}>\n                        Unable to scan code? Click here.\n                    </span>)}\n                    {showSecret && (<><span>Enter this OTP in your app:</span><div>{secret}</div></>)}\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <h4>Confirmation code sent via Email</h4>\n                        <div className='input-wrapper'>\n                            <TextInput\n                                small\n                                pattern='[0-9]+'\n                                title='Confirmation code should be 6 digits'\n                                autoComplete='nope'\n                                required minLength={6} maxLength={6}\n                                placeholder='Confirmation code'\n                                value={emailConfirmCode}\n                                onInput={value => setEmailConfirmCode(value)}\n                            ></TextInput>\n                            \n                            <Button type=\"button\" small disabled={isTimeIsUp} onClick={sendEmail}>Send Email</Button>\n                        </div>\n                        <h4>Authenticator app code</h4>\n                        <TextInput\n                            placeholder=\"Enter the code from authenticator app\"\n                            onInput={setReceivedOTP}\n                            value={receivedOtp}\n                            pattern=\"[0-9]{6}\"\n                            required\n                        />\n                    </div>\n                    <div className=\"buttons\">\n                        {!isLoading ? (<Button type=\"submit\" disabled={isTimeIsUp}>Enable 2FA</Button>) : (<Button disabled><Loading /></Button>)}\n                    </div>\n                </form>\n            </div>\n        </Modal>\n    )\n}\n\nexport default OtpTwoFAModal\n","import './OtpTwoFADisableModal.scss'\nimport { useModals } from 'hooks'\nimport { fetchPost } from 'lib/fetch'\nimport { Modal, Button, TextInput, Loading } from 'components/common'\nimport { useState, useEffect } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport { ethers } from 'ethers'\nimport { CountdownTimer } from 'components/common'\n\nconst TIMER_IN_SECONDS = 300\n\nconst OtpTwoFADisableModal = ({ relayerURL, selectedAcc, setCacheBreak }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n    const [isLoading, setLoading] = useState(false)\n\n    const [receivedOtp, setReceivedOTP] = useState('')\n    const [isTimeIsUp, setIsTimeIsUp] = useState(false)\n    const [hexSecret, setHexSecret] = useState()\n    \n    useEffect(() => {\n      setHexSecret(ethers.utils.hexlify(ethers.utils.toUtf8Bytes(JSON.stringify({ otp: null, timestamp: new Date().getTime() }))))\n    }, [])\n\n    const handleSubmit = e => {\n      e.preventDefault()\n      setLoading(true)\n      disableOTP()\n    }\n\n    const disableOTP = async() => {\n      try {\n          const { success, signatureEthers, message } = await fetchPost(\n            // network doesn't matter when signing\n            `${relayerURL}/second-key/${selectedAcc.id}/ethereum/sign`, { \n              toSign: hexSecret, \n              code: receivedOtp \n            })\n          if (!success) {\n              throw new Error(message || 'unknown error')\n          }\n\n          const resp = await fetchPost(\n            `${relayerURL}/identity/${selectedAcc.id}/modify`, { \n              otp: hexSecret, \n              sig: signatureEthers \n            })\n\n          if (resp.success) {\n              addToast(`You have successfully disabled two-factor authentication.`)\n              setCacheBreak() \n              resetForm()\n              setLoading(false)\n              hideModal()\n          } else {\n              throw new Error(`${resp.message || 'unknown error'}`)\n          }\n      } catch (e) {\n          console.error(e)\n          addToast('OTP: ' + e.message || e, { error: true })\n          setLoading(false)\n      }\n    }\n\n    const resetForm = () => {\n      setReceivedOTP('')\n    }\n\n    const handleTimeIsUp = (val) => {\n        setIsTimeIsUp(val)\n    }\n\n    return (\n        <Modal id='disable-otp-modal' \n          title=\"Disable Two Factor Authentication\" \n          topLeft={(<CountdownTimer seconds={TIMER_IN_SECONDS} setTimeIsUp={handleTimeIsUp}/>)}\n        >\n          <form onSubmit={handleSubmit}>\n            {isTimeIsUp && <div className='timer-reset-msg'>Please reopen the modal to reset the session.</div>}\n            <div>\n              <h4>Authenticator app code</h4>\n                <TextInput\n                    placeholder=\"Enter the code from authenticator app\"\n                    onInput={setReceivedOTP}\n                    value={receivedOtp}\n                    pattern=\"[0-9]{6}\"\n                    required\n                />\n            </div>\n            <div className=\"buttons\">\n              {!isLoading ? (<Button type=\"submit\" disabled={isTimeIsUp}>Disable 2FA</Button>) : (<Button disabled><Loading /></Button>)}\n            </div>\n          </form>\n        </Modal>\n    )\n}\n\nexport default OtpTwoFADisableModal\n","import './Backup.scss'\n\nimport { BiExport, BiImport } from \"react-icons/bi\"\nimport { Button } from \"components/common\"\n\nconst Backup = ({ selectedAccount, onOpen, onAddAccount }) => {\n    const onBackupDownloaded = () => {\n        onAddAccount({\n            ...selectedAccount,\n            downloadedBackup: true\n        })\n    }\n\n    return (\n        <div id=\"backup\">\n            <div className=\"panel\">\n                <div className=\"panel-title\">Backup current account</div>\n                <div className=\"content\" id=\"export\">\n                    <a\n                        type=\"button\"\n                        href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                            JSON.stringify(selectedAccount)\n                        )}`}\n                        download={`${selectedAccount.id}.json`}\n                    >\n                        <Button icon={<BiExport/>} onClick={onBackupDownloaded}>Export</Button>\n                    </a>\n                    <div style={{ fontSize: '0.9em' }}>\n                        Downloads a backup of your current account ({selectedAccount.id.slice(0, 5)}...{selectedAccount.id.slice(-3)}) encrypted with\n                        your password. It's safe to store in iCloud/Google Drive, but you cannot use it to restore your account if you forget the password.\n                        <b> You can only import this in Ambire</b>, it's not importable in other wallets.\n                    </div>\n                </div>\n            </div>\n            <div className=\"panel\">\n                <div className=\"panel-title\">Import an account from backup</div>\n                <div className=\"content\" id=\"import\">\n                    <Button icon={<BiImport/>} onClick={onOpen}>Import</Button>\n                    <p>...or you can drop an account backup JSON file on this page</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Backup","import { MdOutlineWarningAmber } from \"react-icons/md\"\nimport buildRecoveryBundle from 'lib/recoveryBundle'\n\nconst PendingRecoveryNotice = ({ recoveryLock, showSendTxns, selectedAccount, selectedNetwork }) => {\n    const isAlreadyInitiated = recoveryLock && recoveryLock.status !== 'requestedButNotInitiated'\n    const createRecoveryRequest = async () => {\n        if (isAlreadyInitiated) return\n        const bundle = buildRecoveryBundle(\n            selectedAccount.id,\n            selectedNetwork.id,\n            selectedAccount.signer.preRecovery,\n            { signer: selectedAccount.signer, primaryKeyBackup: selectedAccount.primaryKeyBackup }\n        )\n        showSendTxns(bundle)\n    }\n    const recoveryLockStatus = recoveryLock ? recoveryLock.status : 'requestedButNotInitiated'\n    const remainingTime = seconds => {\n        if (seconds > 86400) return `${Math.ceil(seconds / 86400)} days`\n        else return `${Math.ceil(seconds/1440)} hours`\n    }\n    const style = isAlreadyInitiated\n        ? (recoveryLockStatus === 'ready' ? { 'background-color': '#6bad6b' } : {})\n        : { cursor: 'pointer' }\n    return (\n        <div className=\"notice\" style={style} onClick={() => createRecoveryRequest()}>\n            <MdOutlineWarningAmber/>\n            {\n                recoveryLockStatus === 'requestedButNotInitiated' ?\n                    <>Password reset requested but not initiated for {selectedNetwork.name}. Click here to initiate it.</> :\n                recoveryLockStatus === 'initiationTxnPending' ?\n                    <>Initiation transaction is currently pending. Once mined, you will need to wait {remainingTime(recoveryLock.timelock)} for the reset to be done on {selectedNetwork.name}.</> :\n                recoveryLockStatus === 'waitingTimelock' ?\n                    <>Password reset on {selectedNetwork.name} is currently pending. {remainingTime(recoveryLock.remaining)} remaining.</> :\n                recoveryLockStatus === 'ready' ?\n                    <>Password reset on {selectedNetwork.name} is now complete! You can start signing transactions with your new password!</> :\n                recoveryLockStatus === 'failed' ?\n                    <>Something went wrong while resetting your password. Please contact support at help.ambire.com</> : null\n            }\n        </div>\n    )\n}\n\nexport default PendingRecoveryNotice","import './Security.scss'\n\nimport { MdOutlineRemove } from 'react-icons/md'\nimport { RiDragDropLine } from 'react-icons/ri'\nimport { useState, useEffect, useCallback } from 'react'\nimport { Loading, TextInput, Button } from 'components/common'\nimport { Interface, AbiCoder, keccak256 } from 'ethers/lib/utils'\nimport accountPresets from 'consts/accountPresets'\nimport privilegesOptions from 'consts/privilegesOptions'\nimport { useRelayerData, useModals } from 'hooks'\nimport { ResetPasswordModal } from 'components/Modals'\nimport AddAuthSigner from './AddAuthSigner/AddAuthSigner'\nimport { useToasts } from 'hooks/toasts'\nimport { useHistory } from 'react-router-dom'\nimport { useDropzone } from 'react-dropzone'\nimport { MdInfoOutline } from 'react-icons/md'\nimport { validateImportedAccountProps, fileSizeValidator } from 'lib/validations/importedAccountValidations'\nimport OtpTwoFAModal from 'components/Modals/OtpTwoFAModal/OtpTwoFAModal'\nimport OtpTwoFADisableModal from 'components/Modals/OtpTwoFADisableModal/OtpTwoFADisableModal'\nimport Backup from './Backup/Backup'\nimport PendingRecoveryNotice from './PendingRecoveryNotice/PendingRecoveryNotice'\nimport { getName } from 'lib/humanReadableTransactions'\n\nconst IDENTITY_INTERFACE = new Interface(\n  require('adex-protocol-eth/abi/Identity5.2')\n)\n\nconst REFRESH_INTVL = 40000\n\nconst Security = ({\n  relayerURL,\n  selectedAcc,\n  selectedNetwork,\n  accounts,\n  addRequest,\n  showSendTxns,\n  onAddAccount\n}) => {\n  const { showModal } = useModals()\n  const [ cacheBreak, setCacheBreak ] = useState(() => Date.now())\n  \n  useEffect(() => {\n    if (Date.now() - cacheBreak > 30000) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), REFRESH_INTVL)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak])\n\n  const url = relayerURL\n    ? `${relayerURL}/identity/${selectedAcc}/${selectedNetwork.id}/privileges?cacheBreak=${cacheBreak}`\n    : null\n  const { data, errMsg, isLoading } = useRelayerData(url)\n  const privileges = data ? data.privileges : {}\n  const otpEnabled = data ? data.otpEnabled : null\n  const recoveryLock = data && data.recoveryLock\n  const { addToast } = useToasts()\n  const history = useHistory()\n  const selectedAccount = accounts.find(x => x.id === selectedAcc)\n\n  const craftTransaction = (address, privLevel) => {\n    return {\n      to: selectedAcc,\n      data: IDENTITY_INTERFACE.encodeFunctionData('setAddrPrivilege', [\n        address,\n        privLevel,\n      ]),\n      value: '0x00',\n    }\n  }\n\n  const addTransactionToAddRequest = txn => {\n    try {\n      addRequest({\n        id: `setPriv_${txn.data}`,\n        type: 'eth_sendTransaction',\n        txn: txn,\n        chainId: selectedNetwork.chainId,\n        account: selectedAcc,\n      })\n    } catch (err) {\n      console.error(err)\n      addToast(`Error: ${err.message || err}`, { error: true })\n    }\n  }\n\n  const onRemoveBtnClicked = key => {\n    const txn = craftTransaction(key, privilegesOptions.false)\n    addTransactionToAddRequest(txn)\n  }\n\n  const onAddBtnClickedHandler = newSignerAddress => {\n    const txn = craftTransaction(\n      newSignerAddress.address,\n      privilegesOptions.true\n    )\n    addTransactionToAddRequest(txn)\n  }\n\n  const onMakeDefaultBtnClicked = async (account, address, isQuickAccount) => {\n    if (isQuickAccount) {\n      return addToast((<span>To make this signer default, please <a href='#/email-login'>please login with the email</a></span>), {url: '/#/email-login', error: true})\n    } else {\n      onAddAccount({ ...account, signer: { address: address }, signerExtra: null })\n      addToast(\n        'This signer is now the default. If it is a hardware wallet, you will have to re-add the account manually to connect it directly, otherwise you will have to add this signer address to your web3 wallet.',\n        { timeout: 30000 }\n      )\n    }\n\n    history.push('/wallet/security')\n  }\n\n  const showResetPasswordModal = () => {\n    if (!relayerURL) {\n      addToast('Unsupported without a connection to the relayer', { error: true })\n      return\n    }\n    showModal(<ResetPasswordModal\n      account={selectedAccount}\n      selectedNetwork={selectedNetwork}\n      relayerURL={relayerURL}\n      onAddAccount={onAddAccount}\n      showSendTxns={showSendTxns}\n    />)\n  }\n\n  const handleEnableOtp = () => {\n    if (!relayerURL) {\n      return addToast('Unsupported without a connection to the relayer', { error: true })\n    }\n\n    showModal(<OtpTwoFAModal \n      relayerURL={relayerURL} \n      selectedAcc={selectedAccount} \n      setCacheBreak={() => { setCacheBreak(Date.now()) }} \n      />)\n  }\n\n  const handleDisableOtp = async() => {\n    if (!relayerURL) {\n      return addToast('Unsupported without a connection to the relayer', { error: true })\n    }\n    \n    showModal(<OtpTwoFADisableModal \n      relayerURL={relayerURL} \n      selectedAcc={selectedAccount} \n      setCacheBreak={() => { setCacheBreak(Date.now()) }} \n      />)\n  }\n  \n  // JSON import\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    const reader = new FileReader()\n    \n    if (rejectedFiles.length) {\n      addToast(`${rejectedFiles[0].file.path} - ${(rejectedFiles[0].file.size / 1024).toFixed(2)} KB. ${rejectedFiles[0].errors[0].message}`, { error: true })\n    }\n\n    if (acceptedFiles.length){\n      const file = acceptedFiles[0]\n\n      reader.readAsText(file,'UTF-8')\n      reader.onload = readerEvent => {\n        const content = readerEvent.target.result\n        const fileContent = JSON.parse(content)\n        const validatedFile = validateImportedAccountProps(fileContent)\n        \n        if (validatedFile.success) onAddAccount(fileContent, { select: true })\n        else addToast(validatedFile.message, { error: true})\n      }\n    }\n  }, [addToast, onAddAccount])\n  const { getRootProps, getInputProps, open, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    onDrop,\n    noClick: true,\n    noKeyboard: true,\n    accept: 'application/json',\n    maxFiles: 1,\n    validator: fileSizeValidator\n  })\n\n  // @TODO relayerless mode: it's not that hard to implement in a primitive form, we need everything as-is\n  // but rendering the initial privileges instead; or maybe using the relayerless transactions hook/service\n  // and aggregate from that\n  const accHash = signer => {\n      const abiCoder = new AbiCoder()\n      const { timelock, one, two } = signer\n      return keccak256(abiCoder.encode(['tuple(uint, address, address)'], [[timelock, one, two]]))\n  }\n  const hasPendingReset = privileges[selectedAccount.signer.quickAccManager] && (\n    (recoveryLock && recoveryLock.status && !isLoading)\n      || (\n          privileges && selectedAccount.signer.quickAccManager\n          // is or has been in recovery state\n          && selectedAccount.signer.preRecovery\n          // but that's not finalized yet\n          && accHash(selectedAccount.signer) !== privileges[selectedAccount.signer.quickAccManager]\n      )\n    )\n\n  const privList = Object.entries(privileges)\n    .map(([addr, privValue]) => {\n      if (!privValue) return null\n  \n      const addressName = getName(addr) || null\n      const isQuickAcc = addr === accountPresets.quickAccManager\n      const privText = isQuickAcc\n        ? `Email/password signer (${selectedAccount.email || 'unknown email'})`\n        : `${addr} ${addressName && addressName !== addr ? `(${addressName})` : ''}`\n      const signerAddress = isQuickAcc\n        ? selectedAccount.signer.quickAccManager\n        : selectedAccount.signer.address\n      const isSelected = signerAddress === addr\n      const canChangePassword = isQuickAcc && !hasPendingReset\n\n      return (\n        <li key={addr}>\n          <TextInput className=\"depositAddress\" value={privText} disabled />\n          <div className=\"btns-wrapper\">\n            {isQuickAcc && (otpEnabled !== null) && (otpEnabled ? \n              (<Button red onClick={handleDisableOtp} small>Disable 2FA</Button>) : \n              (<Button onClick={handleEnableOtp} small>Enable 2FA</Button>)\n            )}\n            {isQuickAcc && (<Button\n              disabled={!canChangePassword}\n              title={hasPendingReset ? 'Account recovery already in progress' : ''}\n              onClick={showResetPasswordModal} small>Change password</Button>\n            )}\n            <Button\n              disabled={isSelected}\n              title={isSelected ? 'Signer is already default' : ''}\n              onClick={() =>\n                onMakeDefaultBtnClicked(selectedAccount, addr, isQuickAcc)\n              }\n              small\n            >\n              Make default\n            </Button>\n            <Button\n              onClick={() => onRemoveBtnClicked(addr)}\n              small\n              red\n              icon={<MdOutlineRemove/>}\n              title={\n                isSelected ? 'Cannot remove the currently used signer' : ''\n              }\n              disabled={isSelected}\n            >\n              Remove\n            </Button>\n          </div>\n        </li>\n      )\n    })\n    .filter(x => x)\n\n  const showLoading = isLoading && !data\n  const signersFragment = relayerURL ? (<>\n    <div className=\"panel\" id=\"signers\">\n      {hasPendingReset && !showLoading && (<PendingRecoveryNotice\n        recoveryLock={recoveryLock}\n        showSendTxns={showSendTxns}\n        selectedAccount={selectedAccount}\n        selectedNetwork={selectedNetwork}\n      />)}\n      <div className='network-warning'>\n        <MdInfoOutline size={36}></MdInfoOutline>\n        <div>\n          Please note: signer settings are network-specific. You are currently looking at and modifying the signers on {selectedNetwork.name}.\n          &nbsp;<a href='https://help.ambire.com/hc/en-us/articles/4410885684242-Signers' target='_blank' rel='noreferrer'>Need help? Click here.</a>\n        </div>\n      </div>\n      <div className=\"panel-title\">Authorized signers</div>\n      {errMsg && (\n        <h3 className=\"error\">Error getting authorized signers: {errMsg}</h3>\n      )}\n      {showLoading && <Loading />}\n      <ul className=\"content\">{!showLoading && privList}</ul>\n    </div>\n    <div className=\"panel\">\n      <div className=\"panel-title\">Add new signer</div>\n      <AddAuthSigner\n        onAddBtnClicked={onAddBtnClickedHandler}\n        selectedNetwork={selectedNetwork}\n        selectedAcc={selectedAcc}\n      />\n    </div>\n  </>) : (\n    <div className=\"panel\">\n      <div className=\"panel-title\">Authorized signers</div>\n      <h3 className=\"error\">\n        Unsupported: not connected to a relayer.\n      </h3>\n    </div>\n  )\n  return (\n    <section id=\"security\" className={(isDragActive ? 'activeStyle ' : '') + (isDragAccept ? 'acceptStyle ' : '') + (isDragReject ? 'rejectStyle ' : '')} {...getRootProps()}>\n      {\n        (isDragAccept || isDragReject)\n        && (<div className={isDragAccept ? 'acceptStyleIcon' : 'rejectStyleIcon'}><RiDragDropLine size={100}/></div>)\n      }\n      \n      <input {...getInputProps()} />\n      {signersFragment}\n\n      <Backup \n        selectedAccount={selectedAccount}\n        onOpen={open}\n        onAddAccount={onAddAccount}\n      />\n    </section>\n  )\n}\n\nexport default Security\n","import './TxnPreview.scss'\n\nimport { useState } from 'react'\n\nimport { getName, getTransactionSummary, isKnown } from 'lib/humanReadableTransactions'\nimport networks from 'consts/networks'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { ToolTip } from 'components/common'\nimport { HiOutlineExternalLink } from 'react-icons/hi'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs'\n\nconst zapperStorageTokenIcons = 'https://storage.googleapis.com/zapper-fi-assets/tokens'\n\nfunction getTokenIcon(network, address) {\n  return `${zapperStorageTokenIcons}/${network}/${address}.png`\n}\n\nfunction getNetworkSymbol(networkId) {\n  const network = networks.find(x => x.id === networkId)\n  return network ? network.nativeAssetSymbol : 'UNKNW'\n}\n\nfunction parseExtendedSummaryItem(item, i, networkDetails) {\n  if (item.length === 1) return item\n\n  if (i === 0) return (<div className={`action ${item.toLowerCase()}`} key={`item-${i}`}>{ item }</div>)\n\n  if (!item.type) return (<div className='word' key={`item-${i}`}>{ item }</div>)\n\n  if (item.type === 'token') return (\n    <div className='token' key={`item-${i}`}>\n      { item.amount > 0 ? <span>{ item.amount }</span> : null }\n      { item.address ? <div className='icon' style={{ backgroundImage: `url(${getTokenIcon(networkDetails.id, item.address)})` }}></div> : null }\n      { item.symbol }\n    </div>\n  )\n\n  if (item.type === 'address') return (\n    <a\n      className='address'\n      key={`item-${i}`}\n      href={item.address ? `${networkDetails.explorerUrl}/address/${item.address}` : null}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      onClick={e => e.stopPropagation()}\n    >\n      <ToolTip disabled={!item.address} label={item.address}>\n        { item.name ? item.name : item.address }\n        { item.address ? <HiOutlineExternalLink/> : null }\n      </ToolTip>\n    </a>\n  )\n\n  if (item.type === 'network') return (\n    <div className='network' key={`item-${i}`}>\n      { item.icon ? <div className='icon' style={{ backgroundImage: `url(${item.icon})` }}></div> : null }\n      { item.name }\n    </div>\n  )\n\n  if (item.type === 'erc721') {\n    const canShowLink = item.network && item.address && item.id\n    return (\n      <a\n        className='erc721'\n        key={`item-${i}`}\n        href={canShowLink ? `#/wallet/nft/${item.network}/${item.address}/${item.id}` : null}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        onClick={e => e.stopPropagation()}\n      >\n        { item.name }\n        { canShowLink ? <HiOutlineExternalLink/> : null }\n      </a>\n    )\n  }\n\n  return <></>\n}\n\nexport default function TxnPreview ({ txn, onDismiss, network, account, isFirstFailing, mined, disableExpand, disableDismiss, disableDismissLabel }) {\n  const [isExpanded, setExpanded] = useState(false)\n  const contractName = getName(txn[0], network)\n\n  const networkDetails = networks.find(({ id }) => id === network)\n  const extendedSummary = getTransactionSummary(txn, network, account, { mined, extended: true })\n\n  const summary = (extendedSummary.map(entry => Array.isArray(entry) ? entry.map((item, i) => parseExtendedSummaryItem(item, i, networkDetails)) : (entry))) // If entry is extended summary parse it\n\n  return (\n    <div className={isFirstFailing ? 'txnPreview firstFailing' : 'txnPreview'}>\n        <div className=\"heading\">\n          <div className=\"info\" onClick={() => !disableExpand && setExpanded(e => !e)}>\n            <div className=\"summary-container\">\n              {!disableExpand && (<div className='expandTxn'>\n                {isExpanded ? (<BsChevronUp/>) : (<BsChevronDown/>)}\n              </div>)}\n              <div className=\"summary\">{ summary }</div>\n              <div className='separator'></div>\n              {isFirstFailing && (<div className='firstFailingLabel'>This is the first failing transaction.</div>)}\n              {!isFirstFailing && !mined && !isKnown(txn, account) && (<div className='unknownWarning'>Warning: interacting with an unknown contract or address.</div>)}\n            </div>\n          </div>\n          <div className='actionIcons'>\n            {onDismiss ? (\n              <ToolTip disabled={!disableDismiss || !disableDismissLabel} label={disableDismissLabel}>\n                <div className={`dismissTxn ${disableDismiss ? 'disabled' : ''}`} onClick={e => { e.stopPropagation(); !disableDismiss && onDismiss.apply(this, e) }}><MdOutlineClose/></div>\n              </ToolTip>\n            ) : (<></>)}\n          </div>\n        </div>\n        {\n          isExpanded ? (<div className='advanced'>\n            <div><b>Interacting with (<i>to</i>):</b> {txn[0]}{contractName ? ` (${contractName})` : ''}</div>\n            <div><b>Value to be sent (<i>value</i>):</b> {formatUnits(txn[1] || '0x0', 18)} {getNetworkSymbol(network)}</div>\n            <div><b>Data:</b> {txn[2]}</div>\n          </div>) : (<></>)\n        }\n    </div>\n  )\n}\n","import { Interface } from 'ethers/lib/utils'\nimport accountPresets from 'consts/accountPresets'\n\nconst IdentityFactory = new Interface(require('adex-protocol-eth/abi/IdentityFactory'))\n\n// Pass deploySalt (eg `id('IsAmbireIdentity')`) to deploy contracts at the same address across chains\nexport function toBundleTxn({ to, value, data, deploySalt }, from) {\n  // Transactions with no `to` are interpreted by the Ethereum network as CREATE (contract deployment) if they come from an EOA\n  // however, our accounts are not EOAs, so we will just call the factory with a user-specific nonce, that's also identifiable (0x6942)\n  if (to === '0x' || !to) {\n    const salt = deploySalt || `0x69420000000000${Date.now().toString(16).slice(1,9)}00${from.slice(2)}`\n    return [accountPresets.identityFactoryAddr, value, IdentityFactory.encodeFunctionData('deploy', [data, salt])]\n  }\n  return [to, value || '0x0', data || '0x']\n}","import './Transactions.scss'\nimport { FaSignature } from 'react-icons/fa'\nimport { BsCoin, BsCalendarWeek, BsGlobe2, BsCheck2All } from 'react-icons/bs'\nimport { MdOutlinePendingActions, MdShuffle, MdCheck } from 'react-icons/md'\nimport { useRelayerData } from 'hooks'\nimport TxnPreview from 'components/common/TxnPreview/TxnPreview'\nimport { Loading, Button } from 'components/common'\nimport accountPresets from 'consts/accountPresets'\nimport networks from 'consts/networks'\nimport { getTransactionSummary } from 'lib/humanReadableTransactions'\nimport { Bundle } from 'adex-protocol-eth'\nimport { useEffect, useMemo, useState } from 'react'\nimport fetch from 'node-fetch'\nimport { useToasts } from 'hooks/toasts'\nimport { toBundleTxn } from 'lib/requestToBundleTxn'\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi'\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\n\n// 10% in geth and most EVM chain RPCs; relayer wants 12%\nconst RBF_THRESHOLD = 1.14\n\nfunction Transactions ({ relayerURL, selectedAcc, selectedNetwork, showSendTxns, eligibleRequests }) {\n  const { addToast } = useToasts()\n  const history = useHistory()\n  const params = useParams()\n\n  const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n  \n  // @TODO refresh this after we submit a bundle; perhaps with the upcoming transactions service\n  // We want this pretty much on every rerender with a 5 sec debounce\n  useEffect(() => {\n    if ((Date.now() - cacheBreak) > 5000) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), 10000)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak])\n  const url = relayerURL\n    ? `${relayerURL}/identity/${selectedAcc}/${selectedNetwork.id}/transactions?cacheBreak=${cacheBreak}`\n    : null\n  const { data, errMsg, isLoading } = useRelayerData(url)\n\n  const maxBundlePerPage = 10\n  const executedTransactions = data ? data.txns.filter(x => x.executed) : []\n  const maxPages = Math.ceil(executedTransactions.length / maxBundlePerPage)\n\n  const defaultPage = useMemo(() => Math.min(Math.max(Number(params.page), 1), maxPages) || 1, [params.page, maxPages])\n  const [page, setPage] = useState(defaultPage)\n\n  const bundlesList = executedTransactions.slice((page - 1) * maxBundlePerPage, page * maxBundlePerPage).map(bundle => BundlePreview({ bundle, mined: true }))\n  \n  useEffect(() => !isLoading && history.replace(`/wallet/transactions/${page}`), [page, history, isLoading])\n  useEffect(() => setPage(defaultPage), [selectedAcc, selectedNetwork, defaultPage])\n\n  // @TODO implement a service that stores sent transactions locally that will be used in relayerless mode\n  if (!relayerURL) return (<section id='transactions'>\n    <h3 className='validation-error'>Unsupported: not currently connected to a relayer.</h3>\n  </section>)\n\n  // @TODO: visualize other pending bundles\n  const firstPending = data && data.txns.find(x => !x.executed && !x.replaced)\n\n  const mapToBundle = (relayerBundle, extra = {}) => (new Bundle({\n    ...relayerBundle,\n    nonce: relayerBundle.nonce.num,\n    gasLimit: null,\n    // Instruct the relayer to abide by this minimum fee in USD per gas, to ensure we are truly replacing the txn\n    minFeeInUSDPerGas: relayerBundle.feeInUSDPerGas * RBF_THRESHOLD,\n    ...extra\n  }))\n  const cancelByReplacing = relayerBundle => showSendTxns(mapToBundle(relayerBundle, {\n    txns: [[selectedAcc, '0x0', '0x']],\n  }))\n  const cancel = relayerBundle => {\n    // @TODO relayerless\n    mapToBundle(relayerBundle).cancel({ relayerURL, fetch })\n      .then(({ success, message }) => {\n        if (!success) {\n          if (message.includes('not possible to cancel')) {\n            addToast('Transaction already picked up by the network, you will need to pay a fee to replace it with a cancellation transaction.')\n          } else {\n            addToast(`Not possible to cancel: ${message}, you will need to pay a fee to replace it with a cancellation transaction.`)\n          }\n          cancelByReplacing(relayerBundle)\n        } else {\n          addToast('Transaction cancelled successfully')\n        }\n      })\n      .catch(e => {\n        console.error(e)\n        cancelByReplacing(relayerBundle)\n      })\n  }\n\n  // @TODO: we are currently assuming the last txn is a fee; change that (detect it)\n  const speedup = relayerBundle => showSendTxns(mapToBundle(relayerBundle, { txns: relayerBundle.txns.slice(0, -1) }))\n\n  const paginationControls = (\n    <div className='pagination-controls'>\n      <div className='pagination-title'>Page</div>\n      <Button clear mini onClick={() => page > 1 && setPage(page => page - 1)}><HiOutlineChevronLeft/></Button>\n      <div className='pagination-current'>{ page } <span>/ { maxPages }</span></div>\n      <Button clear mini onClick={() => page < maxPages && setPage(page => page + 1)}><HiOutlineChevronRight/></Button>\n    </div>\n  )\n\n  return (\n    <section id='transactions'>\n      {!!eligibleRequests.length && (<div className='panel' id=\"waiting-transactions\">\n        <div className='panel-heading'>\n          <div className='title'><FaSignature size={25}/>Waiting to be signed (current batch)</div>\n        </div>\n        <div className=\"content\">\n          <div className=\"bundle\">\n            <div className=\"bundle-list\" onClick={() => showSendTxns(null)}>\n              {eligibleRequests.map(req => (\n                <TxnPreview\n                    key={req.id}\n                    network={selectedNetwork.id}\n                    account={selectedAcc}\n                    disableExpand={true}\n                    txn={toBundleTxn(req.txn, selectedAcc)}/>\n              ))}\n            </div>\n              <div className='actions'>\n                {/*\n                <Button small className='cancel' onClick={\n                  () => resolveMany(eligibleRequests.map(x => x.id), { message: 'Ambire user rejected all requests' })\n                }>Reject all</Button>*/}\n                <Button small icon={<MdCheck/>} onClick={() => showSendTxns(null)}>Sign or reject</Button>\n              </div>\n          </div>\n        </div>\n      </div>)}\n      { !!firstPending && (<div className='panel' id=\"pending\">\n        <div className='panel-heading'>\n          <div className='title'><MdOutlinePendingActions/>Pending transaction bundle</div>\n        </div>\n        <div className=\"content\">\n          <div className=\"bundle\">\n            <BundlePreview bundle={firstPending}></BundlePreview>\n            <div className='actions'>\n              <Button small className='cancel' onClick={() => cancel(firstPending)}>Cancel</Button>\n              <Button small onClick={() => speedup(firstPending)}>Speed up</Button>\n            </div>\n          </div>\n        </div>\n      </div>) }\n\n      <div id=\"confirmed\" className=\"panel\">\n        <div className=\"panel-heading\">\n          <div className='title'>\n            <BsCheck2All/>\n            {(data && data.txns.length === 0) ? 'No transactions yet.' : 'Confirmed transactions'}\n          </div>\n          { !bundlesList.length ? null : paginationControls }\n        </div>\n        <div className=\"content\">\n          {!relayerURL && (<h3 className='validation-error'>Unsupported: not currently connected to a relayer.</h3>)}\n          {errMsg && (<h3 className='validation-error'>Error getting list of transactions: {errMsg}</h3>)}\n          {\n            isLoading && !data ? <Loading /> :\n              !bundlesList.length ? null :\n                <>\n                  { bundlesList }\n                  { paginationControls }\n                </>\n          }\n        </div>\n      </div>\n    </section>\n  )\n}\n\nfunction BundlePreview({ bundle, mined = false }) {\n  const network = networks.find(x => x.id === bundle.network)\n  if (!Array.isArray(bundle.txns)) return (<h3 className='error'>Bundle has no transactions (should never happen)</h3>)\n  const lastTxn = bundle.txns[bundle.txns.length - 1]\n  // terribly hacky; @TODO fix\n  // all of the values are prob checksummed so we may not need toLowerCase\n  const lastTxnSummary = getTransactionSummary(lastTxn, bundle.network, bundle.identity)\n  const hasFeeMatch = lastTxnSummary.match(new RegExp(`to ${accountPresets.feeCollector}`, 'i'))\n  const txns = hasFeeMatch ? bundle.txns.slice(0, -1) : bundle.txns\n  const toLocaleDateTime = date => `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n\n  return (<div className='bundlePreview bundle' key={bundle._id}>\n    {txns.map((txn, i) => (<TxnPreview\n      key={i} // safe to do this, individual TxnPreviews won't change within a specific bundle\n      txn={txn} network={bundle.network} account={bundle.identity} mined={mined} />\n    ))}\n    <ul className=\"details\">\n      {\n        hasFeeMatch ?\n          <li>\n            <label><BsCoin/>Fee</label>\n            <p>{lastTxnSummary.slice(5, -hasFeeMatch[0].length)}</p>\n          </li>\n          :\n          null\n      }\n      {\n        bundle.executed && !bundle.executed.success && (\n          <li>\n            <label>Error</label>\n            <p>{bundle.executed.errorMsg || 'unknown error'}</p>\n          </li>\n        )\n      }\n      <li>\n        <label><BsCalendarWeek/>Submitted on</label>\n        <p>{bundle.submittedAt && (toLocaleDateTime(new Date(bundle.submittedAt))).toString()}</p>\n      </li>\n      {\n        bundle.replacesTxId ?\n          <li>\n            <label><MdShuffle/>Replaces transaction</label>\n            <p>{bundle.replacesTxId}</p>\n          </li>\n          :\n          null\n      }\n      {\n        bundle.txId ?\n          <li>\n            <label><BsGlobe2/>Block Explorer</label>\n            <p><a href={network.explorerUrl+'/tx/'+bundle.txId} target='_blank' rel='noreferrer'>{network.explorerUrl.split('/')[2]}</a></p>\n          </li>\n          :\n          null\n      }\n    </ul>\n  </div>)\n}\n\nexport default Transactions\n","import './GnosisSafeApps.scss'\nimport GnosisSafeAppIframe from './GnosisSafeAppIframe'\n\nimport { useState } from 'react'\n\nconst dapps = [{\n  name: 'LocalTest',\n  url: 'http://localhost:3002',\n  logo: 'http://localhost:3002/logo-test.png',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  name: 'TxBuilder',\n  url: 'https://safe-apps.dev.gnosisdev.com/tx-builder/',\n  logo: 'https://safe-apps.dev.gnosisdev.com/tx-builder/logo.svg',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  name: 'ParaSwap',\n  url: 'https://paraswap.io',\n  logo: 'https://paraswap.io/paraswap.svg',\n  desc: 'ParaSwap allows dApps and traders to get the best DEX liquidity by aggregating multiple markets and offering the best rates'\n},\n{\n  name: '0xPlasma Finance',\n  url: 'https://apy.plasma.finance',\n  logo: 'https://apy.plasma.finance/logo.svg',\n  desc: 'Cross-chain DeFi & DEX aggregator, farming, asset management, fiat on-ramp'\n},\n{\n  name: 'MEW',\n  url: 'https://www.myetherwallet.com/wallet/sign',\n  logo: 'https://www.myetherwallet.com/wallet/sign/logo.svg',\n  desc: 'MEW as dapp'\n},\n]\n\nexport default function GnosisSafeApps({\n  network,\n  selectedAcc,\n  gnosisConnect,\n  gnosisDisconnect\n}) {\n\n  const [selectedApp, setSelectedApp] = useState(null)\n\n  return (\n    <div id=\"plugin-gnosis-container\">\n      <ul id=\"dapps-container\" className={selectedApp ? 'small-thumbs' : ''}>\n        {dapps.map((dapp, index) => (\n          <li\n            key={index}\n            onClick={() => setSelectedApp(dapp)}\n            className={(selectedApp && dapp.url === selectedApp.url) ? 'selected' : ''}\n          >\n            <div className=\"logo-container\" style={{ backgroundImage: `url(${dapp.logo})` }}></div>\n            <div className=\"dapp-name\">{dapp.name}</div>\n            <div className=\"dapp-desc\">{dapp.desc}</div>\n          </li>\n        ))}\n      </ul>\n      {selectedApp &&\n        <GnosisSafeAppIframe\n          network={network}\n          selectedApp={selectedApp}\n          selectedAcc={selectedAcc}\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n\n        />\n      }\n    </div>)\n}\n","const ERC721Abi = [\n    \"function name() view returns (string memory)\",\n    \"function tokenURI(uint256 _tokenId) view returns (string memory)\",\n    \"function uri(uint256 _tokenId) view returns (string memory)\",\n    \"function ownerOf(uint256 tokenId) view returns (address)\",\n    \"function transferFrom(address from, address to, uint256 tokenId)\"\n]\n\nexport default ERC721Abi\n","import './Collectible.scss'\n\nimport { useParams } from 'react-router-dom'\nimport { ethers } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport { useCallback, useEffect, useState } from 'react'\nimport { AiOutlineSend } from 'react-icons/ai'\nimport { BsFillImageFill } from 'react-icons/bs'\nimport * as blockies from 'blockies-ts';\nimport { useToasts } from 'hooks/toasts'\nimport { TextInput, Button, Loading, AddressBook, AddressWarning } from 'components/common'\nimport ERC721Abi from 'consts/ERC721Abi'\nimport networks from 'consts/networks'\nimport { validateSendNftAddress } from 'lib/validations/formValidations'\nimport { BsXLg } from 'react-icons/bs'\nimport { getProvider } from 'lib/provider'\nimport { VELCRO_API_ENDPOINT } from 'config'\nimport { fetchGet } from 'lib/fetch'\n\nconst ERC721 = new Interface(ERC721Abi)\n\nconst handleUri = uri => {\n    uri = uri.startsWith('data:application/json') ? uri.replace('data:application/json;utf8,', '') : uri\n\n    if (uri.startsWith('ipfs://')) return uri.replace(/ipfs:\\/\\/ipfs\\/|ipfs:\\/\\//g, 'https://ipfs.io/ipfs/')\n    if (uri.split('/')[2].endsWith('mypinata.cloud')) return 'https://ipfs.io/ipfs/' + uri.split('/').slice(4).join('/')\n        \n    return uri\n}\n\nconst Collectible = ({ selectedAcc, selectedNetwork, addRequest, addressBook }) => {\n    const { addresses, addAddress, removeAddress, isKnownAddress } = addressBook\n\n    const { addToast } = useToasts()\n    const { network, collectionAddr, tokenId } = useParams()\n    const [isLoading, setLoading] = useState(true)\n    const [metadata, setMetadata] = useState({\n        owner: {\n            address: '',\n            icon: ''\n        },\n        name: '',\n        description: '',\n        image: '',\n        collection: '',\n        explorerUrl: ''\n    })\n    const [recipientAddress, setRecipientAddress] = useState('')\n    const [isTransferDisabled, setTransferDisabled] = useState(true)\n    const [addressConfirmed, setAddressConfirmed] = useState(false)\n    const [newAddress, setNewAddress] = useState(null)\n    const [validationFormMgs, setValidationFormMgs] = useState({ \n        success: false, \n        message: ''\n    })\n\n    const sendTransferTx = () => {\n        try {\n            addRequest({\n                id: `transfer_nft_${Date.now()}`,\n                type: 'eth_sendTransaction',\n                chainId: selectedNetwork.chainId,\n                account: selectedAcc,\n                txn: {\n                    to: collectionAddr,\n                    value: '0',\n                    data: ERC721.encodeFunctionData('transferFrom', [metadata.owner.address, recipientAddress, tokenId])\n                }\n            })\n        } catch(e) {\n            console.error(e)\n            addToast(`Error: ${e.message || e}`, { error: true })\n        }\n    }\n\n    useEffect(() => {\n        const isAddressValid = validateSendNftAddress(recipientAddress, selectedAcc, addressConfirmed, isKnownAddress, metadata, selectedNetwork, network)\n        \n        setTransferDisabled(!isAddressValid.success)\n        setValidationFormMgs({ \n            success: isAddressValid.success, \n            message: isAddressValid.message ? isAddressValid.message : ''\n        })\n\n    }, [recipientAddress, metadata, selectedNetwork, selectedAcc, network, addressConfirmed, isKnownAddress])\n\n    const fetchMetadata = useCallback(async () => {\n        setLoading(true)\n        setMetadata({})\n    \n        try {\n            const networkDetails = networks.find(({ id }) => id === network)\n            if (!networkDetails) throw new Error('This network is not supported')\n\n            const { explorerUrl } = networkDetails\n            const provider = getProvider(networkDetails.id)\n            const contract = new ethers.Contract(collectionAddr, ERC721Abi, provider)\n\n            const [collection, address, maybeUri1, maybeUri2] = await Promise.all([\n                contract.name(),\n                contract.ownerOf(tokenId),\n                contract.tokenURI(tokenId).then(uri => ({ uri })).catch(err => ({ err })),\n                contract.uri(tokenId).then(uri => ({ uri })).catch(err => ({ err }))\n            ])\n            const uri = maybeUri1.uri || maybeUri2.uri\n            if (!uri) throw maybeUri1.err || maybeUri2.err\n\n            let json = {}\n\n            if (uri.startsWith('data:application/json')) {\n                json = JSON.parse(uri.replace('data:application/json;utf8,', ''))\n            } else {\n                const jsonUrl = handleUri(uri)\n                const response = await fetch(jsonUrl)\n                json = await response.json()\n            }\n\n            const image = json ? handleUri(json.image) : null\n            setMetadata(metadata => ({\n                ...metadata,\n                ...json,\n                image\n            }))\n\n            setMetadata(metadata => ({\n                ...metadata,\n                collection,\n                owner: {\n                    address,\n                    icon: blockies.create({ seed: address }).toDataURL()\n                },\n                explorerUrl\n            }))\n\n            setLoading(false)\n        } catch(e) {\n            try {\n                const { success, collection, description, image, name, owner, message } = await fetchGet(\n                    `${VELCRO_API_ENDPOINT}/nftmeta/${collectionAddr}/${tokenId}?network=${network}`\n                    )                \n                if (!success) throw new Error(message)\n\n                const networkDetails = networks.find(({ id }) => id === network)\n                if (!networkDetails) throw new Error('This network is not supported')\n                \n                const { explorerUrl } = networkDetails\n                setMetadata(metadata => ({\n                    ...metadata,\n                    collection,\n                    description,\n                    image,\n                    name,\n                    owner: {\n                        address: owner,\n                        icon: blockies.create({ seed: owner }).toDataURL()\n                    },\n                    explorerUrl\n                })) \n                \n                setLoading(false)\n            } catch(e) {\n                console.error(e)\n                addToast(`Collectible error: ${e.message || e}`, { error: true })\n            }\n        }\n    }, [addToast, tokenId, collectionAddr, network])\n\n    useEffect(() => fetchMetadata(), [fetchMetadata])\n\n    return (\n        <div id=\"collectible\">\n            <div className=\"panel\">\n                <div className=\"heading\">\n                    <div className=\"title\">{ metadata.collection } #{ tokenId }</div>\n                    <div className=\"contract\">\n                        Contract address: <a className=\"address\" href={`${metadata.explorerUrl}/address/${collectionAddr}`} target=\"_blank\" rel=\"noreferrer\">{ collectionAddr }</a>\n                    </div>\n                </div>\n                {\n                    isLoading ?\n                        <Loading/>\n                        :\n                        <div className=\"metadata\">\n                            <div className=\"image\" style={{backgroundImage: `url(${handleUri(metadata.image)})`}}>\n                                { !metadata.image ? <BsFillImageFill/> : null }\n                            </div>\n                            <div className=\"info\">\n                                <div className=\"name\">\n                                    { metadata.name }\n                                </div>\n                                <div className=\"description\">\n                                    { metadata.description }\n                                </div>\n                            </div>\n                            <div className=\"owner\">\n                                Owner:\n                                <a className=\"address\" href={`${metadata.explorerUrl}/address/${metadata.owner.address}`} target=\"_blank\" rel=\"noreferrer\">\n                                    <div className=\"icon\" style={{backgroundImage: `url(${metadata.owner.icon})`}}></div>\n                                    { \n                                        metadata.owner.address === selectedAcc ? \n                                            <span>You ({ metadata.owner.address })</span>\n                                            :\n                                            metadata.owner.address\n                                    }\n                                    \n                                </a>\n                            </div>\n                        </div>\n                }\n            </div>\n            <div className=\"panel\">\n                <div className=\"title\">Transfer</div>\n                <div className=\"content\">\n                    <div id=\"recipient-address\">\n                        <TextInput placeholder=\"Recipient Address\" value={recipientAddress} onInput={(value) => setRecipientAddress(value)}/>\n                        <AddressBook \n                            addresses={addresses.filter(x => x.address !== selectedAcc)}\n                            addAddress={addAddress}\n                            removeAddress={removeAddress}\n                            newAddress={newAddress}\n                            onClose={() => setNewAddress(null)}\n                            onSelectAddress={address => setRecipientAddress(address)}\n                        />\n                    </div>\n                    { validationFormMgs.message && \n                        (<div className='validation-error'><BsXLg size={12}/>&nbsp;{validationFormMgs.message}</div>) \n                    }\n                    <div className=\"separator\"></div>\n                    <AddressWarning\n                        address={recipientAddress}\n                        onAddNewAddress={() => setNewAddress(recipientAddress)}\n                        onChange={(value) => setAddressConfirmed(value)}\n                        isKnownAddress={isKnownAddress}\n                    />\n                    <Button icon={<AiOutlineSend/>} disabled={isTransferDisabled} onClick={sendTransferTx}>Send</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Collectible\n","import { useCallback } from \"react\";\nimport { fetchGet } from \"lib/fetch\";\n\nconst baseURL = 'https://backend.movr.network/v1'\nconst watcherBaseURL = 'https://watcherapi.fund.movr.network/api/v1'\n\nconst useMovr = () => {\n    const fetchChains = useCallback(async () => {\n        const response = await fetchGet(`${baseURL}/supported/chains`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    const fetchFromTokens = useCallback(async (from, to) => {\n        const response = await fetchGet(`${baseURL}/supported/from-token-list?fromChainId=${from}&toChainId=${to}`)\n        if (!response) return null\n        return response.result.map(({ token }) => token)\n    }, [])\n\n    const fetchToTokens = useCallback(async (from, to) => {\n        const response = await fetchGet(`${baseURL}/supported/to-token-list?fromChainId=${from}&toChainId=${to}`)\n        if (!response) return null\n        return response.result.map(({ token }) => token)\n    }, [])\n\n    const fetchQuotes = useCallback(async (fromAsset, fromChainId, toAsset, toChainId, amount, excludeBridges, sort = 'cheapestRoute') => {\n        const response = await fetchGet(`${baseURL}/quote?fromAsset=${fromAsset}&fromChainId=${fromChainId}&toAsset=${toAsset}&toChainId=${toChainId}&amount=${amount}&excludeBridges=${excludeBridges}&sort=${sort}`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    const checkApprovalAllowance = useCallback(async (chainID, owner, allowanceTarget, tokenAddress) => {\n        const response = await fetchGet(`${baseURL}/approval/check-allowance?chainID=${chainID}&owner=${owner}&allowanceTarget=${allowanceTarget}&tokenAddress=${tokenAddress}`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    const approvalBuildTx = useCallback(async (chainID, owner, allowanceTarget, tokenAddress, amount) => {\n        const response = await fetchGet(`${baseURL}/approval/build-tx?chainID=${chainID}&owner=${owner}&allowanceTarget=${allowanceTarget}&tokenAddress=${tokenAddress}&amount=${amount}`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    const sendBuildTx = useCallback(async (recipient, fromAsset, fromChainId, toAsset, toChainId, amount, output, routePath) => {\n        const response = await fetchGet(`${baseURL}/send/build-tx?recipient=${recipient}&fromAsset=${fromAsset}&fromChainId=${fromChainId}&toAsset=${toAsset}&toChainId=${toChainId}&amount=${amount}&output=${output}&fromAddress=${recipient}&routePath=${routePath}`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    const checkTxStatus = useCallback(async (transactionHash, fromChainId, toChainId) => {\n        const response = await fetchGet(`${watcherBaseURL}/transaction-status?transactionHash=${transactionHash}&fromChainId=${fromChainId}&toChainId=${toChainId}`)\n        if (!response) return null\n        return response.result\n    }, [])\n\n    return {\n        fetchChains,\n        fetchToTokens,\n        fetchFromTokens,\n        fetchQuotes,\n        checkApprovalAllowance,\n        approvalBuildTx,\n        sendBuildTx,\n        checkTxStatus\n    }\n}\n\nexport default useMovr","import './Quotes.scss'\n\nimport { MdOutlineArrowBack, MdOutlineArrowForward, MdOutlineCheck, MdOutlineClose } from 'react-icons/md';\nimport { Button, Loading, Radios } from 'components/common';\nimport { useState } from 'react';\nimport networks from 'consts/networks';\nimport useMovr from 'components/Wallet/CrossChain/useMovr';\nimport { useToasts } from 'hooks/toasts';\n\n\nconst formatAmount = (amount, asset) => amount / Math.pow(10, asset.decimals)\nconst formatFeeAmount = (fee, route) => {\n    const asset = fee.address === route.toAsset.address ? route.toAsset : route.fromAsset\n    return formatAmount(fee.amount, asset)\n}\nconst getNetwork = id => networks.find(({ chainId }) => chainId === id)\n\nconst Quotes = ({ addRequest, selectedAccount, fromTokensItems, quotes, onQuotesConfirmed, onCancel }) => {\n    const { addToast } = useToasts()\n    const { approvalBuildTx, sendBuildTx } = useMovr()\n\n    const { toAsset } = quotes;\n    const fromAsset = fromTokensItems.find(({ value }) => value === quotes.fromAsset.address)\n    const fromNetwork = getNetwork(quotes.fromAsset.chainId)\n    const toNetwork = getNetwork(toAsset.chainId)\n    const [selectedRoute, setSelectedRoute] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    const routes = quotes.routes.map(route => {\n        const { fees, middlewareRoute, bridgeRoute } = route\n        return {\n            ...route,\n            middlewareFee: middlewareRoute ? formatFeeAmount(fees.middlewareFee, middlewareRoute) : 0,\n            bridgeFee: bridgeRoute ? formatFeeAmount(fees.bridgeFee, bridgeRoute) : 0\n        }\n    })\n\n    const radios = routes.map(({ routePath, middlewareFee, bridgeFee, middlewareRoute, bridgeRoute }) => ({\n        label:\n            <div className=\"route\">\n                <div className=\"info\">\n                    {\n                        middlewareRoute ?\n                            <div className=\"middleware\">\n                                <div className=\"icon\" style={{backgroundImage: `url(${middlewareRoute.middlewareInfo.icon})`}}></div>\n                                <div className=\"name\">{ middlewareRoute.middlewareInfo.displayName }</div>\n                            </div>\n                            :\n                            null\n                    }\n                    <div className=\"bridge\">\n                        <div className=\"icon\" style={{backgroundImage: `url(${bridgeRoute.bridgeInfo.icon})`}}></div>\n                        <div className=\"name\">{ bridgeRoute.bridgeInfo.displayName }</div>\n                    </div>\n                </div>\n                <div className=\"summary\">\n                    <div className=\"amounts\">\n                        {\n                            middlewareRoute ?\n                                <div className=\"amount\">\n                                    { formatAmount(middlewareRoute.inputAmount, middlewareRoute.fromAsset) } { middlewareRoute.fromAsset.symbol }\n                                </div>\n                                :\n                                null\n                        }   \n                        <div className=\"amount\">\n                            { formatAmount(bridgeRoute.outputAmount, bridgeRoute.toAsset) } { bridgeRoute.toAsset.symbol }\n                        </div>\n                    </div>\n                    <div className=\"fees\">\n                        {\n                            middlewareRoute ?\n                                <div className=\"fee\">\n                                    { middlewareFee ? <>Fee: { middlewareFee } { middlewareRoute.fromAsset.symbol }</> : null }\n                                </div>\n                                :\n                                null\n                        }\n                        <div className=\"fee\">\n                            { bridgeFee ? <>Fee: { bridgeFee } { bridgeRoute.toAsset.symbol }</> : null }\n                        </div>\n                    </div>\n                </div>\n            </div>,\n        value: routePath\n    }))\n\n    const sendTx = (id, chainId, to, data, value = '0x00') => {\n        addRequest({\n            id,\n            chainId,\n            account: selectedAccount,\n            type: 'eth_sendTransaction',\n            txn: {\n                to,\n                data,\n                value\n            }\n        })\n    }\n\n    const onConfirm = async () => {\n        setLoading(true)\n\n        try {\n            const { allowanceTarget, isApprovalRequired, middlewareRoute, bridgeRoute, routePath } = routes.find(({ routePath }) => routePath === selectedRoute)\n\n            let fromAsset, inputAmount = null\n            if (middlewareRoute) {\n                fromAsset = middlewareRoute.fromAsset\n                inputAmount = middlewareRoute.inputAmount\n            } else {\n                fromAsset = bridgeRoute.fromAsset\n                inputAmount = bridgeRoute.inputAmount\n            }\n\n            const { toAsset, outputAmount, bridgeInfo } = bridgeRoute\n            \n            if (isApprovalRequired) {\n                const { to, data } = await approvalBuildTx(fromAsset.chainId, selectedAccount, allowanceTarget, fromAsset.address, inputAmount)\n                sendTx(`transfer_approval_crosschain_${Date.now()}`, fromAsset.chainId, to, data)\n            }\n\n            const { tx } = await sendBuildTx(selectedAccount, fromAsset.address, fromAsset.chainId, toAsset.address, toAsset.chainId, inputAmount, outputAmount, routePath)\n            sendTx(`transfer_send_crosschain_${Date.now()}`, fromAsset.chainId, tx.to, tx.data, tx.value.hex)\n\n            const serviceTimeMinutes = new Date((bridgeInfo?.serviceTime || 0) + (middlewareRoute?.serviceTime || 0)).getMinutes()\n            onQuotesConfirmed({\n                txData: tx.data,\n                serviceTimeMinutes,\n                to: {\n                    chainId: toAsset.chainId,\n                    asset: toAsset,\n                    amount: outputAmount\n                }\n            })\n            onCancel()\n        } catch(e) {\n            console.error(e);\n            addToast(e.message || e, { error: true })\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <div id=\"quotes\">\n            <div id=\"summary\">\n                <div className=\"path\">\n                    <div className=\"network\">\n                        <div className=\"icon\" style={{backgroundImage: `url(${fromNetwork.icon})`}}></div>\n                        <div className=\"name\">{ fromNetwork.name }</div>\n                    </div>\n                    <div className=\"token\">\n                        <div className=\"icon\" style={{backgroundImage: `url(${fromAsset.icon})`}}></div>\n                        <div className=\"name\">{ fromAsset.label }</div>\n                    </div>\n                </div>\n                <MdOutlineArrowForward/>\n                <div className=\"path\">\n                    <div className=\"network\">\n                        <div className=\"icon\" style={{backgroundImage: `url(${toNetwork.icon})`}}></div>\n                        <div className=\"name\">{ toNetwork.name }</div>\n                    </div>\n                    <div className=\"token\">\n                        <div className=\"icon\" style={{backgroundImage: `url(${toAsset.icon})`}}></div>\n                        <div className=\"name\">{ toAsset.name } ({ toAsset.symbol })</div>\n                    </div>\n                </div>\n            </div>\n\n            {\n                loading ?\n                    <Loading/>\n                    :\n                    <div id=\"routes\">\n                        <div className=\"title\">Routes</div>\n                        {\n                            !radios.length ?\n                                <div id=\"no-routes-placeholder\">\n                                    There is no routes available for this configuration at the moment.<br/>\n                                    Try increasing the amount or switching token.\n                                </div>\n                                :\n                                <Radios radios={radios} onChange={value => setSelectedRoute(value)}/>\n                        }\n                    </div>\n            }\n\n            <div className=\"separator\"></div>\n\n            <div id=\"buttons\">\n                <Button small clear icon={routes.length ? <MdOutlineClose/> : <MdOutlineArrowBack/>} disabled={loading} onClick={onCancel}>{ routes.length ? 'Cancel' : 'Go Back' }</Button>\n                { routes.length ? \n                    <Button small icon={<MdOutlineCheck/>} disabled={!selectedRoute || loading} onClick={onConfirm}>Confirm</Button>\n                : null }\n            </div>\n        </div>\n    )\n}\n\nexport default Quotes","import { abis } from 'consts/humanizerInfo'\nimport { tokens } from 'consts/humanizerInfo'\nimport { formatNativeTokenAddress, knownTokens } from 'lib/humanReadableTransactions'\nimport { Interface } from 'ethers/lib/utils'\nimport networks from 'consts/networks'\n\nconst MovrAnyswapInterface = new Interface(abis.MovrAnyswap)\nconst MovrRouterInterface = new Interface(abis.MovrRouter)\n\nconst getAssetInfo = address => {\n    const formattedAddress = formatNativeTokenAddress(address)\n    return tokens[formattedAddress] || knownTokens[formattedAddress] || ['Unknown', 0]\n}\n\nconst getAssetIcon = (address, chainId) => {\n    const network = networks.find(n => n.chainId === chainId)\n    return network ? `https://storage.googleapis.com/zapper-fi-assets/tokens/${network.id}/${formatNativeTokenAddress(address)}.png` : null\n}\n\nconst formatTx = (fromChainId, toChainId, inputToken, outputToken, amount) => {\n    const fromAsset = getAssetInfo(inputToken)\n    const toAsset = getAssetInfo(outputToken)\n    const fromAssetIcon = getAssetIcon(inputToken, fromChainId)\n    const toAssetIcon = getAssetIcon(outputToken, fromChainId)\n\n    return {\n        from: {\n            chainId: fromChainId,\n            asset: {\n                address: inputToken,\n                symbol: fromAsset[0],\n                decimals: fromAsset[1],\n                icon: fromAssetIcon\n            },\n            amount: amount.toString()\n        },\n        to: {\n            chainId: toChainId.toNumber(),\n            asset: {\n                address: outputToken,\n                symbol: toAsset[0],\n                decimals: toAsset[1],\n                icon: toAssetIcon\n            },\n            amount: null\n        }\n    }\n}\n\nconst movrTxParser = {\n    [MovrAnyswapInterface.getSighash('outboundTransferTo')]: (value, data, currentNetwork) => {\n        const { middlewareInputToken, amount, tokenToBridge, toChainId } = MovrAnyswapInterface.parseTransaction({ data, value }).args[0]\n        return formatTx(currentNetwork.chainId, toChainId, middlewareInputToken, tokenToBridge, amount)\n    },\n    [MovrRouterInterface.getSighash('outboundTransferTo')]: (value, data, currentNetwork) => {\n        const { middlewareRequest, amount, bridgeRequest, toChainId } = MovrRouterInterface.parseTransaction({ data, value }).args[0]\n        const { inputToken } = middlewareRequest\n        const { inputToken: outputToken } = bridgeRequest\n        return formatTx(currentNetwork.chainId, toChainId, inputToken, outputToken, amount)\n    }\n}\n\nexport default movrTxParser","import './History.scss'\n\nimport { useState, useEffect, useMemo, useRef } from 'react'\nimport { MdOutlineArrowForward, MdOutlineCheck, MdOutlineClose } from 'react-icons/md'\nimport { HiOutlineExternalLink } from 'react-icons/hi'\nimport { Loading } from 'components/common'\nimport useMovr from 'components/Wallet/CrossChain/useMovr'\nimport networks from 'consts/networks'\nimport { useToasts } from 'hooks/toasts'\nimport { useRelayerData } from 'hooks'\nimport movrTxParser from './movrTxParser'\n\nconst History = ({ relayerURL, network, account, quotesConfirmed }) => {\n    const { addToast } = useToasts()\n    const { checkTxStatus } = useMovr()\n\n    const [txStatuses, setTxStatuses] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n    const currentNetwork = useRef(network.id)\n\n    const getNetworkDetails = chainId => networks.find(n => n.chainId === chainId)\n    const formatAmount = (amount, asset) => amount / Math.pow(10, asset.decimals)\n\n    // @TODO refresh this after we submit a bundle; perhaps with the upcoming transactions service\n    // We want this pretty much on every rerender with a 5 sec debounce\n    useEffect(() => {\n        if ((Date.now() - cacheBreak) > 5000) setCacheBreak(Date.now())\n        const intvl = setTimeout(() => setCacheBreak(Date.now()), 10000)\n        return () => clearTimeout(intvl)\n    }, [cacheBreak])\n\n    const url = relayerURL\n        ? `${relayerURL}/identity/${account}/${network.id}/transactions?cacheBreak=${cacheBreak}`\n        : null\n\n    const { data: relayerTransactions, errMsg, isLoading: isRelayerLoading } = useRelayerData(url)\n    \n    // Return relayer txs that contains outboundTransferTo calls to Movr contracts and parse them\n    const txTransfers = useMemo(() => {\n        if (network.id !== currentNetwork.current) return []\n\n        const transactions = relayerTransactions && relayerTransactions.txns ? relayerTransactions.txns : []\n        return transactions.map(({ txId, txns }) => {\n            const outboundTransferTo = txns.map(([, value, data]) => {\n                const sigHash = data.slice(0, 10)\n                const parseOutboundTransferTo = movrTxParser[sigHash]\n                if (parseOutboundTransferTo) return {\n                    txData: data,\n                    ...parseOutboundTransferTo(value, data, network)\n                }\n                return null\n            }).filter(call => call)\n\n            return outboundTransferTo.length ? {\n                hash: txId,\n                ...outboundTransferTo[0]\n            } : null\n        }).filter(tx => tx)\n    }, [relayerTransactions, network])\n\n    useEffect(() => {\n        async function getStatuses() {\n            const statuses = await Promise.all(txTransfers.map(async ({ hash, txData, from, to }) => {\n                const storedQuote = quotesConfirmed.find(q => q.txData === txData)\n                const serviceTimeMinutes = storedQuote ? storedQuote.serviceTimeMinutes || null : null\n                const fromNetwork = getNetworkDetails(from.chainId)\n                const toNetwork = getNetworkDetails(to.chainId)\n\n                try {\n                    const status = await checkTxStatus(hash, from.chainId, to.chainId)\n                    return {\n                        ...status,\n                        from,\n                        to: storedQuote ? storedQuote.to || null : to,\n                        serviceTimeMinutes,\n                        fromNetwork,\n                        toNetwork,\n                        isPending: !(status.sourceTxStatus === 'COMPLETED' && status.destinationTxStatus === 'COMPLETED')\n                    }\n                } catch(e) {\n                    console.error(e)\n                    addToast('Cross-Chain History: Unable to fetch transfer status.', { error: true })\n                    return {\n                        sourceTx: hash,\n                        from,\n                        to,\n                        serviceTimeMinutes,\n                        fromNetwork,\n                        toNetwork,\n                        statusError: true\n                    }\n                }\n            }))\n\n            if (network.id !== currentNetwork.current) return\n            setTxStatuses(statuses)\n        }\n\n        getStatuses()\n    }, [txTransfers, quotesConfirmed, network, checkTxStatus, addToast])\n\n    useEffect(() => {\n        if (!errMsg) return\n        console.error(errMsg)\n        addToast(`Cross-Chain History: ${errMsg}`, { error: true })\n    }, [errMsg, addToast])\n\n    useEffect(() => {\n        setLoading(isRelayerLoading && !txStatuses.length)\n    }, [isRelayerLoading, txStatuses])\n\n    useEffect(() => {\n        currentNetwork.current = network.id\n        setTxStatuses([])\n        setCacheBreak(Date.now())\n    }, [network])\n\n    return (\n        <div id=\"history\" className=\"panel\">\n            <div className=\"title\">\n               History\n            </div>\n            <div>\n                {\n                    loading ?\n                        <Loading/>\n                        :\n                        !txStatuses.length ?\n                            <div>No pending transfer/swap on this network.</div>\n                            :\n                            txStatuses.map(({ sourceTx, fromNetwork, toNetwork, from, to, serviceTimeMinutes, isPending, statusError }) => (\n                                <div className=\"tx-status\" key={sourceTx}>\n                                    <div className=\"summary\">\n                                        <div className=\"path\">\n                                            <div className=\"network\">\n                                                <div className=\"icon\" style={{backgroundImage: `url(${fromNetwork.icon})`}}></div>\n                                                <div className=\"name\">{ fromNetwork.name }</div>\n                                            </div>\n                                            <div className=\"amount\">\n                                                { from.amount ? formatAmount(from.amount, from.asset) : '' }\n                                                <div className=\"asset\">\n                                                    <div className=\"icon\" style={{backgroundImage: `url(${from?.asset?.icon})`}}></div>\n                                                    <div className=\"name\">{ from?.asset?.symbol }</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <MdOutlineArrowForward/>\n                                        <div className=\"path\">\n                                            <div className=\"network\">\n                                                <div className=\"icon\" style={{backgroundImage: `url(${toNetwork.icon})`}}></div>\n                                                <div className=\"name\">{ toNetwork.name }</div>\n                                            </div>\n\n                                            <div className=\"amount\">\n                                                { to.amount ? formatAmount(to.amount, to.asset) : '' }\n                                                <div className=\"asset\">\n                                                    <div className=\"icon\" style={{backgroundImage: `url(${to?.asset?.icon})`}}></div>\n                                                    <div className=\"name\">{ to?.asset?.symbol }</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"details\">\n                                        <a href={`${fromNetwork.explorerUrl}/tx/${sourceTx}`} target=\"_blank\" rel=\"noreferrer\">View on Block Explorer <HiOutlineExternalLink/></a>\n                                        {\n                                            statusError ? \n                                                <div className=\"status error\">\n                                                    <MdOutlineClose/>\n                                                    Could not fetch status\n                                                </div>\n                                                :\n                                                isPending ? \n                                                    <div className=\"status pending\">\n                                                        <Loading/>\n                                                        Pending\n                                                        <span>(Usually takes { serviceTimeMinutes || 20 } minutes)</span>\n                                                    </div>\n                                                    :\n                                                    <div className=\"status confirmed\">\n                                                        <MdOutlineCheck/>\n                                                        Confirmed\n                                                    </div>\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default History","import './CrossChain.scss'\n\nimport { BsArrowDown } from 'react-icons/bs'\n\nimport { useEffect, useState, useCallback, useMemo, useRef } from 'react'\nimport { ethers } from 'ethers'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { NumberInput, Button, Select, Loading, NoFundsPlaceholder } from 'components/common'\nimport useMovr from './useMovr'\nimport networks from 'consts/networks'\nimport { useToasts } from 'hooks/toasts'\nimport { useLocalStorage } from 'hooks'\nimport Quotes from './Quotes/Quotes'\nimport History from './History/History'\n\nconst CrossChain = ({ addRequest, selectedAccount, portfolio, network, relayerURL }) => {\n    const { addToast } = useToasts()\n    const { fetchChains, fetchFromTokens, fetchQuotes, fetchToTokens } = useMovr()\n\n    const [disabled, setDisabled] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [loadingFromTokens, setLoadingFromTokens] = useState(false)\n    const [loadingToTokens, setLoadingToTokens] = useState(false)\n    const [loadingQuotes, setLoadingQuotes] = useState(false)\n\n    const [fromTokensItems, setFromTokenItems] = useState([])\n    const [fromToken, setFromToken] = useState(null)\n    const [amount, setAmount] = useState(0)\n    const [chainsItems, setChainsItems] = useState([])\n    const [toChain, setToChain] = useState(null)\n    const [toTokenItems, setToTokenItems] = useState([])\n    const [toToken, setToToken] = useState(null)\n    const [quotes, setQuotes] = useState(null)\n    const portfolioTokens = useRef([])\n    const [quotesConfirmed, setQuotesConfirmed] = useLocalStorage({ key: 'quotesConfirmed', defaultValue: [] })\n\n    const fromChain = useMemo(() => network.chainId, [network.chainId])\n    const formDisabled = !(fromToken && toToken && fromChain && toChain && amount > 0)\n    const hasNoFunds = !portfolio.balance.total.full\n    const getTokenFromPortofolio = useCallback(tokenAddress => portfolio.tokens\n        .map(token => ({\n            ...token,\n            address: Number(token.address) === 0 ? `0x${'e'.repeat(40)}` : token.address\n        }))\n        .find(({ address }) => address === tokenAddress), [portfolio.tokens])\n\n    const loadChains = useCallback(async () => {\n        try {\n            const chains = await fetchChains()\n            const isSupported = chains.find(({ chainId }) => chainId === fromChain)\n            setDisabled(!isSupported)\n            if (!isSupported) return\n\n            const chainsItems = chains\n                .filter(({ chainId }) => chainId !== fromChain && networks.map(({ chainId }) => chainId).includes(chainId))\n                .map(({ icon, chainId, name }) => ({\n                    icon,\n                    label: name,\n                    value: chainId\n                }))\n            setChainsItems(chainsItems)\n            setToChain(chainsItems[0].value)\n            return true\n        } catch(e) {\n            console.error(e);\n            addToast(`Error while loading chains: ${e.message || e}`, { error: true })\n            return false\n        }\n    }, [fromChain, fetchChains, addToast])\n\n    const loadFromTokens = useCallback(async () => {\n        if (!fromChain || !toChain) return\n\n        try {\n            const fromTokens = await fetchFromTokens(fromChain, toChain)\n            const filteredFromTokens = fromTokens.filter(({ name }) => name)\n            const uniqueFromTokenAddresses = [\n                ...new Set(fromTokens\n                    .filter(({ address }) => portfolioTokens.current\n                        .map(({ address }) => address)\n                        .map(address => Number(address) === 0 ? `0x${'e'.repeat(40)}` : address).includes(address))\n                    .map(({ address }) => address)\n                )\n            ]\n\n            const fromTokensItems = uniqueFromTokenAddresses\n                .map(address => filteredFromTokens.find(token => token.address === address))\n                .filter(token => token)\n                .map(({ icon, name, symbol, address }) => ({\n                    icon,\n                    label: `${name} (${symbol})`,\n                    value: address,\n                    symbol\n                }))\n            setFromTokenItems(fromTokensItems)\n            return true\n        } catch(e) {\n            console.error(e);\n            addToast(`Error while loading from tokens: ${e.message || e}`, { error: true })\n            return false\n        }\n    }, [fromChain, toChain, fetchFromTokens, addToast])\n\n    const loadToTokens = useCallback(async () => {\n        if (!fromChain || !toChain) return\n\n        try {\n            const toTokens = await fetchToTokens(fromChain, toChain)\n            const filteredToTokens = toTokens.filter(({ name }) => name)\n            const uniqueTokenAddresses = [...new Set(toTokens.map(({ address }) => address))]\n            const tokenItems = uniqueTokenAddresses\n                .map(address => filteredToTokens.find(token => token.address === address))\n                .filter(token => token)\n                .map(({ icon, name, symbol, address }) => ({\n                    icon,\n                    label: `${name} (${symbol})`,\n                    value: address,\n                    symbol\n                }))\n                .sort((a, b) => a.label.localeCompare(b.label))\n            setToTokenItems(tokenItems)\n            return true\n        } catch(e) {\n            console.error(e);\n            addToast(`Error while loading to tokens: ${e.message || e}`, { error: true })\n            return false\n        }\n    }, [fromChain, toChain, fetchToTokens, addToast])\n\n    const maxAmount = useMemo(() => {\n        try {\n            const portfolioToken = getTokenFromPortofolio(fromToken)\n            if (!portfolioToken) return 0\n            const { balanceRaw, decimals } = portfolioToken\n            return ethers.utils.formatUnits(balanceRaw, decimals)\n        } catch(e) {\n            console.error(e);\n            addToast(`Error while formating amount: ${e.message || e}`, { error: true })\n        }\n    }, [getTokenFromPortofolio, fromToken, addToast])\n\n    const getQuotes = async () => {\n        setLoadingQuotes(true)\n\n        try {\n            const portfolioToken = getTokenFromPortofolio(fromToken)\n            if (!portfolioToken) return\n            const { decimals } = portfolioToken\n            const flatAmount = parseUnits(amount, decimals).toString()\n            const quotes = await fetchQuotes(fromToken, fromChain, toToken, toChain, flatAmount, ['hyphen', 'anyswap-router-v4'])\n            setQuotes(quotes)\n        } catch(e) {\n            console.error(e);\n            addToast(`Error while loading quotes: ${e.message || e}`, { error: true })\n        }\n\n        setLoadingQuotes(false)\n    }\n\n    const onQuotesConfirmed = quoteRequest => {\n        const updatedQuotesConfirmed = [...quotesConfirmed, quoteRequest]\n        setQuotesConfirmed(updatedQuotesConfirmed)\n    }\n\n    useEffect(() => setAmount(0), [fromToken])\n    useEffect(() => {\n        const fromTokenItem = fromTokensItems.find(({ value }) => value === fromToken)\n        if (!fromTokenItem) return\n        const equivalentToken = toTokenItems.find(({ symbol }) => symbol === fromTokenItem.symbol)\n        if (equivalentToken) setToToken(equivalentToken.value)\n    }, [fromTokensItems, toTokenItems, fromToken])\n\n    const asyncLoad = async (setStateLoading, loadCallback) => {\n        setStateLoading(true)\n        const loaded = await loadCallback()\n        setStateLoading(!loaded)\n    }\n\n    useEffect(() => {\n        if (!toChain) return\n        asyncLoad(setLoadingToTokens, loadToTokens)\n    }, [toChain, loadToTokens])\n\n    useEffect(() => {\n        if (!toChain) return\n        asyncLoad(setLoadingFromTokens, loadFromTokens)\n    }, [toChain, loadFromTokens])\n\n    useEffect(() => {\n        if (!fromChain || portfolio.isBalanceLoading) return\n        setQuotes(null)\n        asyncLoad(setLoading, loadChains)\n    }, [fromChain, portfolio.isBalanceLoading, loadChains])\n\n    useEffect(() => portfolioTokens.current = portfolio.tokens, [portfolio.tokens])\n\n    const amountLabel = <div className=\"amount-label\">Available Amount: <span>{ maxAmount }</span></div>\n\n    return (\n        <div id=\"cross-chain\">\n            <div className='panel'>\n                <div className=\"title\">\n                    Cross-chain transfers/swaps\n                    <div id=\"powered\">\n                        Powered by Movr\n                    </div>\n                </div>\n                {\n                    disabled ?\n                        <div className=\"placeholder\">Not supported on this Network</div>\n                        :\n                        loading || portfolio.isBalanceLoading ?\n                            <Loading/>\n                            :\n                            hasNoFunds ?\n                                <NoFundsPlaceholder/>\n                                :\n                                !loadingFromTokens && !loadingToTokens && !fromTokensItems.length ?\n                                    <div className=\"placeholder\">You don't have any available tokens to swap</div>\n                                    :\n                                    loadingQuotes ?\n                                            <Loading/>\n                                            :\n                                            quotes ?\n                                                <Quotes\n                                                    addRequest={addRequest}\n                                                    selectedAccount={selectedAccount}\n                                                    fromTokensItems={fromTokensItems}\n                                                    quotes={quotes}\n                                                    onQuotesConfirmed={onQuotesConfirmed}\n                                                    onCancel={() => setQuotes(null)}\n                                                />\n                                                :\n                                                <div className=\"form\">\n                                                    <label>From</label>\n                                                    <div className=\"inputs\">\n                                                        { loadingFromTokens ? <Loading/> : null }\n                                                        <Select searchable defaultValue={fromToken} items={fromTokensItems} onChange={value => setFromToken(value)}/>\n                                                        <NumberInput min=\"0\" label={amountLabel} value={amount} onInput={value => setAmount(value)} button=\"MAX\" onButtonClick={() => setAmount(maxAmount)}/>\n                                                    </div>\n                                                    <div className=\"separator\">\n                                                        <BsArrowDown/>\n                                                    </div>\n                                                    <label>To</label>\n                                                    <div className=\"inputs\">\n                                                        { loadingToTokens ? <Loading/> : null }\n                                                        <Select searchable defaultValue={toChain} items={chainsItems} onChange={value => setToChain(value)}/>\n                                                        <Select searchable defaultValue={toToken} items={toTokenItems} onChange={value => setToToken(value)}/>\n                                                    </div>\n                                                    <Button disabled={formDisabled} onClick={getQuotes}>Get Quotes</Button>\n                                                </div>\n                }\n            </div>\n            <History\n                network={network}\n                account={selectedAccount}\n                quotesConfirmed={quotesConfirmed}\n                relayerURL={relayerURL}\n            />\n        </div>\n    )\n}\n\nexport default CrossChain\n","const unsupportedDApps = [\n    'https://opensea.io',\n    'https://curve.fi',\n    'https://loopring.io',\n    'https://dydx.exchange',\n    'https://trade.dydx.exchange',\n    'https://zks.app',\n    'https://bridge.avax.network',\n    'https://app.pangolin.exchange'\n]\n\nexport default unsupportedDApps\n","import \"./Wallet.scss\"\n\nimport { Switch, Route, Redirect, useLocation  } from \"react-router-dom\"\nimport Dashboard from \"./Dashboard/Dashboard\"\nimport TopBar from \"./TopBar/TopBar\"\nimport SideBar from \"./SideBar/SideBar\"\nimport Deposit from \"./Deposit/Deposit\"\nimport Swap from \"./Swap/Swap\"\nimport Transfer from \"./Transfer/Transfer\"\nimport Earn from \"./Earn/Earn\"\nimport Security from \"./Security/Security\"\nimport Transactions from './Transactions/Transactions'\nimport PluginGnosisSafeApps from 'components/Plugins/GnosisSafeApps/GnosisSafeApps'\nimport Collectible from \"./Collectible/Collectible\"\nimport { PermissionsModal, UnsupportedDAppsModal } from 'components/Modals'\nimport { useModals, usePermissions, useLocalStorage } from 'hooks'\nimport { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { isFirefox } from 'lib/isFirefox'\nimport CrossChain from \"./CrossChain/CrossChain\"\nimport unsupportedDApps from 'consts/unsupportedDApps'\n\nexport default function Wallet(props) {\n  const { showModal } = useModals()\n  const { isClipboardGranted, isNoticationsGranted, arePermissionsLoaded, modalHidden } = usePermissions()\n  const { pathname } = useLocation()\n  const walletContainer = useRef()\n\n  const isLoggedIn = useMemo(() => props.accounts.length > 0, [props.accounts])\n  const [advancedModeList, setAdvancedModeList] = useLocalStorage({ key: 'dAppsAdvancedMode', defaultValue: [] })\n\n  const routes = [\n    {\n      path: '/dashboard/:tabId?',\n      component: <Dashboard\n        portfolio={props.portfolio}\n        selectedNetwork={props.network}\n        selectedAccount={props.selectedAcc}\n        setNetwork={props.setNetwork}\n        privateMode={props.privateMode}\n      />\n    },\n    {\n      path: '/deposit',\n      component: <Deposit selectedAcc={props.selectedAcc} selectedNetwork={props.network.id} />\n    },\n    {\n      path: '/transfer/:tokenAddressOrSymbol?',\n      component: <Transfer\n        portfolio={props.portfolio}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n      />\n    },\n    {\n      path: '/cross-chain',\n      component: <CrossChain\n        addRequest={props.addRequest}\n        selectedAccount={props.selectedAcc}\n        portfolio={props.portfolio}\n        network={props.network}\n        relayerURL={props.relayerURL}\n      />\n    },\n    {\n      path: '/earn',\n      component: <Earn portfolio={props.portfolio} selectedNetwork={{ ...props.network }} selectedAcc={props.selectedAcc} addRequest={props.addRequest} />\n    },\n    {\n      path: '/security',\n      component: <Security\n        relayerURL={props.relayerURL}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        accounts={props.accounts}\n        addRequest={props.addRequest}\n        showSendTxns={props.showSendTxns}\n        onAddAccount={props.onAddAccount}\n      />\n    },\n    {\n      path: '/transactions/:page?',\n      component: <Transactions relayerURL={props.relayerURL} selectedAcc={props.selectedAcc} selectedNetwork={props.network} addRequest={props.addRequest} eligibleRequests={props.eligibleRequests} showSendTxns={props.showSendTxns} />\n    },\n    {\n      path: '/swap',\n      component: <Swap\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/nft/:network/:collectionAddr/:tokenId',\n      component: <Collectible\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n      />\n    },\n    {\n      path: '/gnosis/plugins',\n      component: <PluginGnosisSafeApps\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    }\n  ]\n\n  const LoggedInGuard = () => (\n    !isLoggedIn ? <Redirect to=\"/add-account\"/> : null\n  )\n\n  const handlePermissionsModal = useCallback(async () => {\n    const account = props.accounts.find(({ id }) => id === props.selectedAcc)\n    if (!account) return\n\n    const relayerIdentityURL = `${props.relayerURL}/identity/${account.id}`\n\n    const areBlockedPermissions = arePermissionsLoaded\n      && ((!isFirefox() && !isClipboardGranted) || !isNoticationsGranted)\n    const showCauseOfPermissions = areBlockedPermissions && !modalHidden\n    const showCauseOfEmail = !!account.emailConfRequired\n    const showCauseOfBackupOptout = account.backupOptout\n\n    const permissionsModal = <PermissionsModal\n      relayerIdentityURL={relayerIdentityURL}\n      account={account}\n      onAddAccount={props.onAddAccount}\n      isCloseBtnShown={!showCauseOfBackupOptout}\n      isBackupOptout={!showCauseOfBackupOptout}\n    />\n\n    if (showCauseOfEmail || showCauseOfPermissions || showCauseOfBackupOptout) showModal(permissionsModal, { disableClose: true })\n  }, [props.accounts, props.relayerURL, props.onAddAccount, props.selectedAcc, arePermissionsLoaded, isClipboardGranted, isNoticationsGranted, modalHidden, showModal])\n\n  useEffect(() => handlePermissionsModal(), [handlePermissionsModal])\n\n  useEffect(() => {\n    const scrollTimeout = setTimeout(() => walletContainer.current && walletContainer.current.scrollTo({ top: 0, behavior: 'smooth' }), 0)\n    return () => clearTimeout(scrollTimeout)\n  }, [pathname])\n\n  useEffect(() => {\n    const unsupported = props.connections\n      .filter(({ session }) => session && session.peerMeta && unsupportedDApps.includes(session.peerMeta.url) && !advancedModeList.includes(session.peerMeta.url))\n\n    if (unsupported.length) showModal(<UnsupportedDAppsModal connections={unsupported} disconnect={props.disconnect} advancedModeList={advancedModeList} onContinue={setAdvancedModeList} />)\n  }, [props.connections, props.disconnect, showModal, advancedModeList, setAdvancedModeList])\n\n  return (\n    <div id=\"wallet\">\n      <SideBar match={props.match} portfolio={props.portfolio} hidePrivateValue={props.privateMode.hidePrivateValue} />\n      <TopBar {...props} />\n\n      <div id=\"wallet-container\" ref={walletContainer}>\n        <div id=\"wallet-container-inner\">\n          <Switch>\n            {\n              routes.map(({ path, component }) => (\n                <Route exact path={props.match.url + path} key={path}>\n                  <LoggedInGuard/>\n                  { component ? component : null }\n                </Route>\n              ))\n            }\n            <Route path={props.match.url + '/*'}>\n              <Redirect to={props.match.url + '/dashboard'} />\n            </Route>\n            <Route path={props.match.url}>\n              <LoggedInGuard/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TrezorSubprovider } from '@0x/subproviders/lib/src/subproviders/trezor' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport TrezorConnect from 'trezor-connect'\nimport { ethers } from 'ethers'\nimport HDNode from 'hdkey'\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerSignMessage, ledgerSignTransaction } from './ledgerWebHID'\n\nlet wallets = {}\n\n// opts\n// passphrase: string\n// noCache: boolean\nexport function getWallet({ signer, signerExtra, chainId }, opts = {}) {\n  const id = `${signer.address || signer.one}${chainId}`\n  if (wallets[id]) return wallets[id]\n  return wallets[id] = getWalletNew({ signer, signerExtra, chainId }, opts)\n}\n\nfunction getWalletNew({ chainId, signer, signerExtra }, opts) {\n  if (signerExtra && signerExtra.type === 'trezor') {\n    const providerTrezor = new TrezorSubprovider({\n      trezorConnectClientApi: TrezorConnect,\n      networkId: chainId\n    })\n    providerTrezor._initialDerivedKeyInfo = getInitialDerivedKeyInfo(signerExtra)\n    // for Trezor/ledger, alternatively we can shim using https://www.npmjs.com/package/web3-provider-engine and then wrap in Web3Provider\n    return {\n      signMessage: hash => providerTrezor.signPersonalMessageAsync(ethers.utils.hexlify(hash), signer.address),\n      signTransaction: params => providerTrezor.signTransactionAsync({ ...params, from: signer.address })\n    }\n  } else if (signerExtra && signerExtra.type === 'ledger') {\n    if (signerExtra.transportProtocol === 'webHID') {\n      return {\n        signMessage: hash => ledgerSignMessage(ethers.utils.hexlify(hash), signer.address),\n        signTransaction: params => ledgerSignTransaction(params, chainId)\n      }\n    } else {\n      const provider = new LedgerSubprovider({\n        networkId: chainId,\n        ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\n        baseDerivationPath: signerExtra.info.baseDerivationPath\n      })\n      return {\n        signMessage: hash => provider.signPersonalMessageAsync(ethers.utils.hexlify(hash), signer.address),\n        signTransaction: params => provider.signTransactionAsync({ ...params, from: signer.address })\n      }\n    }\n  } else if (signer.address) {\n    if (!window.ethereum) throw new Error('No web3 support detected in your browser: if you created this account through MetaMask, please install it.')\n    // NOTE: for metamask, use `const provider = new ethers.providers.Web3Provider(window.ethereum)`\n    // 'any' is explained here: https://github.com/ethers-io/ethers.js/issues/1107\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any')\n    return provider.getSigner(signer.address)\n  } else if (signer.one) {\n    throw new Error('getWallet not applicable for QuickAccounts: use primaryKeyBackup with the passphrase and /second-sig')\n  } else {\n    throw new Error('unknown signer type')\n  }\n}\n\nfunction getInitialDerivedKeyInfo(signerExtra) {\n  return {\n    hdKey: HDNode.fromExtendedKey(signerExtra.info.hdKey.xpub),\n    derivationPath: signerExtra.info.derivationPath,\n    baseDerivationPath: signerExtra.info.baseDerivationPath\n  }\n}\n","// It costs around 19k to send a token, if that token was interacted with before in the same transaction,\n// because of SLOAD costs - they depend on whether a slot has been read\n// however, it costs 30k if the token has not been interacted with\n// we may decrease it a bit and lean on the relayer failsafe values (cfg.gasAddedOnEstimate) later on\nconst ADDED_GAS_TOKEN = 30000\nconst ADDED_GAS_NATIVE = 12000\n\nexport function isTokenEligible (token, speed, estimation) {\n  if (!token) return false\n  const min = token.isStable ? estimation.feeInUSD[speed] : estimation.feeInNative[speed]\n  return parseInt(token.balance) / Math.pow(10, token.decimals) > min\n}\n\n// can't think of a less funny name for that\nexport function getFeePaymentConsequences (token, estimation) {\n  // Relayerless mode\n  if (!estimation.feeInUSD) return { multiplier: 1, addedGas: 0 }\n  // Relayer mode\n  const addedGas = !token.address || token.address === '0x0000000000000000000000000000000000000000'\n    ? ADDED_GAS_NATIVE\n    : ADDED_GAS_TOKEN\n  return {\n    // otherwise we get very long floating point numbers with trailing .999999\n    multiplier: parseFloat(((estimation.gasLimit + addedGas) / estimation.gasLimit).toFixed(4)),\n    addedGas\n  }\n}\n\nconst contractErrors = ['caller is a contract', 'contract not allowed', 'contract not supported', 'No contractz allowed', /*no */'contracts allowed', /* c or C*/'ontract is not allowed']\n\nexport function mapTxnErrMsg(msg) {\n  if (!msg) return\n  if (msg.includes('Router: EXPIRED')) return 'Swap expired'\n  if (msg.includes('Router: INSUFFICIENT_OUTPUT_AMOUNT')) return 'Swap will suffer slippage higher than your requirements'\n  if (msg.includes('INSUFFICIENT_PRIVILEGE')) return 'Your signer address is not authorized.'\n  if (contractErrors.find(contractMsg => msg.includes(contractMsg))) return 'This dApp does not support smart wallets.'\n  return msg\n}\n\nexport function getErrHint(msg) {\n  if (!msg) return\n  if (msg.includes('Router: EXPIRED')) return 'Try performing the swap again'\n  if (msg.includes('Router: INSUFFICIENT_OUTPUT_AMOUNT')) return 'Try performing the swap again or increase your slippage requirements'\n  if (msg.includes('INSUFFICIENT_PRIVILEGE')) return 'If you set a new signer for this account, try re-adding the account.'\n  if (contractErrors.find(contractMsg => msg.includes(contractMsg))) return 'Contact the dApp developers to tell them to implement smart wallet support by not blocking contract interactions and/or implementing EIP1271.'\n  return 'Sending this transaction batch would have resulted in an error, so we prevented it.'\n}\n","import './FeeSelector.scss'\n\nimport { AiOutlineWarning } from 'react-icons/ai'\nimport { Loading, Select, TextInput, ToolTip } from 'components/common'\nimport { isTokenEligible, getFeePaymentConsequences, mapTxnErrMsg, getErrHint } from './helpers'\nimport { MdEdit } from 'react-icons/md'\nimport { useState } from 'react'\n\nconst SPEEDS = ['slow', 'medium', 'fast', 'ape']\n\nconst zapperStorageTokenIcons = 'https://storage.googleapis.com/zapper-fi-assets/tokens'\n\nexport function FeeSelector ({ disabled, signer, estimation, network, setEstimation, feeSpeed, setFeeSpeed }) {\n    const [editCustomFee, setEditCustomFee] = useState(false)\n\n    if (!estimation) return (<Loading/>)\n\n    // Only check for insufficient fee in relayer mode (.feeInUSD is available)\n    // Otherwise we don't care whether the user has enough for fees, their signer wallet will take care of it\n    const insufficientFee = estimation && estimation.feeInUSD\n      && !isTokenEligible(estimation.selectedFeeToken, feeSpeed, estimation)\n    if (estimation && !estimation.success) return (<FailingTxn\n      message={<>The current transaction batch cannot be sent because it will fail: {mapTxnErrMsg(estimation.message)}</>}\n      tooltip={getErrHint(estimation.message)}\n    />)\n  \n    if (!estimation.feeInNative) return (<></>)\n    if (estimation && !estimation.feeInUSD && estimation.gasLimit < 40000) {\n      return (<div>\n        <b>WARNING:</b> Fee estimation unavailable when you're doing your first account transaction and you are not connected to a relayer. You will pay the fee from <b>{signer.address}</b>, make sure you have {network.nativeAssetSymbol} there.\n      </div>)\n    }\n    if (estimation && estimation.feeInUSD && !estimation.remainingFeeTokenBalances) {\n      return (<div className='balance-error'>Internal error: fee balances not available. This should never happen, please report this on help.ambire.com</div>)\n    }\n  \n    const { nativeAssetSymbol } = network\n    const tokens = estimation.remainingFeeTokenBalances || [{ symbol: nativeAssetSymbol, decimals: 18 }]\n    const onFeeCurrencyChange = value => {\n      const token = tokens.find(({ address, symbol }) => address === value || symbol === value)\n      setEstimation({ ...estimation, selectedFeeToken: token })\n    }\n\n    const currenciesItems = tokens\n      .filter(token => isTokenEligible(token, feeSpeed, estimation))\n      .map(({ address, symbol }) => ({\n        icon: address ? `${zapperStorageTokenIcons}/${network.id}/${address.toLowerCase()}.png` : null,\n        label: symbol,\n        value: address || symbol\n      }))\n\n    const feeCurrencySelect = estimation.feeInUSD ? (<>\n      <div className='section'>\n        <div className='section-title'>Fee Currency</div>\n        <Select\n          disabled={disabled}\n          defaultValue={estimation.selectedFeeToken?.address || estimation.selectedFeeToken?.symbol}\n          items={currenciesItems}\n          onChange={onFeeCurrencyChange}\n        />\n      </div>\n    </>) : (<></>)\n  \n    const areSelectorsDisabled = disabled || insufficientFee\n    const { isStable } = estimation.selectedFeeToken\n    const { multiplier } = getFeePaymentConsequences(estimation.selectedFeeToken, estimation)\n\n    const setCustomFee = value => setEstimation(prevEstimation => ({\n      ...prevEstimation,\n      customFee: value\n    }))\n\n    const selectFeeSpeed = speed => {\n      setFeeSpeed(speed)\n      setCustomFee(null)\n      setEditCustomFee(false)\n    }\n\n    const feeAmountSelectors = SPEEDS.map(speed => (\n      <div \n        key={speed}\n        className={`feeSquare${!estimation.customFee && feeSpeed === speed ? ' selected' : ''}${areSelectorsDisabled ? ' disabled' : ''}`}\n        onClick={() => !areSelectorsDisabled && selectFeeSpeed(speed)}\n      >\n        <div className='speed'>{speed}</div>\n        <div className='feeEstimation'>\n          {isStable\n            ? '$'+(estimation.feeInUSD[speed] * multiplier)\n            : (\n              nativeAssetSymbol === 'ETH' ?\n                'Ξ '+(estimation.feeInNative[speed] * multiplier)\n                : (estimation.feeInNative[speed] * multiplier)+' '+nativeAssetSymbol\n            )\n          }\n        </div>\n      </div>\n    ))\n  \n    return (<>\n      {insufficientFee ?\n        (<div className='balance-error'>Insufficient balance for the fee.<br/>Accepted tokens: {(estimation.remainingFeeTokenBalances || []).map(x => x.symbol).join(', ')}</div>)\n        : feeCurrencySelect\n      }\n      <div className='section'>\n        <div className='section-title'>Transaction Speed</div>\n        <div id='fee-selector'>{feeAmountSelectors}</div>\n        {\n          !editCustomFee ?\n            <div id='edit-custom-fee' onClick={() => setEditCustomFee(true)}>\n              <MdEdit/>Edit fee\n            </div>\n            :\n            <div id='custom-fee-selector'>\n              <div className='title'>Custom Fee</div>\n              <TextInput\n                small\n                placeholder='Enter amount'\n                className={`${estimation.customFee ? 'selected' : ''}`}\n                onChange={value => setCustomFee(value)}\n              />\n            </div>\n        }\n      </div>\n      { // Visualize the fee once again with a USD estimation if in native currency\n      !isStable && (<div className='native-fee-estimation'>\n        Fee: {((estimation.customFee || estimation.feeInNative[feeSpeed]) * multiplier)+' '+nativeAssetSymbol}\n        &nbsp;(~ ${((estimation.customFee || estimation.feeInNative[feeSpeed]) * multiplier * estimation.nativeAssetPriceInUSD).toFixed(2)})\n      </div>)}\n      {!estimation.feeInUSD ?\n        (<span><b>WARNING:</b> Paying fees in tokens other than {nativeAssetSymbol} is unavailable because you are not connected to a relayer. You will pay the fee from <b>{signer.address}</b>.</span>)\n        : (<></>)}\n    </>)\n}\n\nexport function FailingTxn ({ message, tooltip = '' }) {\n    return (<div className='failingTxn'>\n      <ToolTip label={tooltip}>\n        <div className='error-title'><AiOutlineWarning></AiOutlineWarning> Warning</div>\n        <div className='error-message'>{message}</div>\n      </ToolTip>\n    </div>)\n}","import { useState, useRef, useEffect } from 'react'\nimport { Button, Loading, TextInput } from 'components/common'\nimport { isTokenEligible } from './helpers'\nimport { MdCheck, MdCheckCircle, MdOutlineCheck, MdOutlineClose } from 'react-icons/md'\n\nexport default function Actions({ estimation, feeSpeed, approveTxn, rejectTxn, cancelSigning, signingStatus }) {\n  const [quickAccCredentials, setQuickAccCredentials] = useState({ code: '', passphrase: '' })\n  // reset this every time the signing status changes\n  useEffect(() => !signingStatus && setQuickAccCredentials(prev => ({ ...prev, code: '' })), [signingStatus])\n\n  const form = useRef(null)\n\n  const rejectButton = rejectTxn && (\n    // WARNING: DO NOT remove type='button' here, it indicates that this button is not a submit button in the <form>\n    // if it is, pressing Enter will reject the transaction rather than submit it\n    <Button danger icon={<MdOutlineClose/>} type='button' className='rejectTxn' onClick={rejectTxn}>Reject</Button>\n  )\n  const insufficientFee = estimation && estimation.feeInUSD\n    && !isTokenEligible(estimation.selectedFeeToken, feeSpeed, estimation)\n  const willFail = (estimation && !estimation.success) || insufficientFee\n  if (willFail) {\n    return (<div className='buttons'>\n      {rejectButton}\n    </div>)\n  }\n\n  const signButtonLabel = signingStatus && signingStatus.inProgress ?\n    <><Loading/>Signing...</>\n    : <><MdOutlineCheck/>Sign and send</>\n\n  const isRecoveryMode = signingStatus && signingStatus.finalBundle && signingStatus.finalBundle.recoveryMode\n  if (signingStatus && signingStatus.quickAcc) {\n    return (<>\n      {\n        signingStatus.confCodeRequired ?\n          <div className='confirmation-code-info'>\n            <div className='confirmation-code-info-title'><MdCheckCircle/>Confirmation</div>\n            <div className='confirmation-code-info-message'>\n              {signingStatus.confCodeRequired === 'otp' ? <>Please enter your OTP code and your password.</> : null}\n              {signingStatus.confCodeRequired === 'email' ?\n                (isRecoveryMode\n                  ? <>A confirmation code was sent to your email, please enter it to initiate the recovery.</>\n                  : <>A confirmation code was sent to your email, please enter it along with your password.</>)\n                      : null\n\t      }\n            </div>\n          </div>\n          :\n          null\n      }\n  \n      <form ref={form} className='quickAccSigningForm' onSubmit={e => { e.preventDefault() }}>\n        <div className='inputs-container'>\n          <TextInput\n            small\n            password\n            required\n            minLength={3}\n            placeholder='Password'\n            value={quickAccCredentials.passphrase}\n            style={isRecoveryMode ? { visibility: 'hidden' } : {} }\n            disabled={isRecoveryMode}\n            onChange={value => setQuickAccCredentials({ ...quickAccCredentials, passphrase: value })}\n          ></TextInput>\n          {/* Changing the autoComplete prop to a random string seems to disable it in more cases */}\n          <TextInput\n            small\n            pattern='[0-9]+'\n            title='Confirmation code should be 6 digits'\n            autoComplete='nope'\n            required minLength={6} maxLength={6}\n            placeholder={signingStatus.confCodeRequired === 'otp' ? 'Authenticator OTP code' : 'Confirmation code'}\n            value={quickAccCredentials.code}\n            onChange={value => setQuickAccCredentials({ ...quickAccCredentials, code: value })}\n          ></TextInput>\n        </div>\n        <div className='buttons'>\n          <Button\n            clear\n            disabled={signingStatus && signingStatus.inProgress}\n            icon={<MdOutlineClose/>}\n            type='button'\n            className='cancelSigning'\n            onClick={cancelSigning}\n          >\n            Cancel\n          </Button>\n          <Button \n            className='confirmSigning'\n            onClick={() => {\n              if (!form.current.checkValidity()) return\n              approveTxn({ quickAccCredentials })\n            }}\n          >\n            { signingStatus && signingStatus.inProgress ? <Loading/> : <><MdCheck/> Confirm</>}\n          </Button>\n        </div>\n      </form>\n    </>)\n  }\n\n  return (<div className='buttons'>\n      {rejectButton}\n      <Button className='approveTxn' disabled={!estimation || signingStatus} onClick={approveTxn}>\n        {signButtonLabel}\n      </Button>\n  </div>)\n}\n","import { Interface, hexlify } from 'ethers/lib/utils'\nconst IdentityInterface = new Interface(require('adex-protocol-eth/abi/Identity5.2'))\nconst FactoryInterface = new Interface(require('adex-protocol-eth/abi/IdentityFactory5.2'))\n\nexport async function sendNoRelayer ({ finalBundle, account, network, wallet, estimation, feeSpeed, provider }) {\n    const { signer } = finalBundle\n    // @TODO: in case we need deploying, run using deployAndCall pipeline with signed msgs\n    // @TODO: quickAccManager\n    if (signer.quickAccManager) throw new Error('quickAccManager not supported in relayerless mode yet')\n    // currently disabled quickAccManager cause 1) we don't have a means of getting the second sig 2) we still have to sign txes so it's inconvenient\n    // if (signer.quickAccManager) await finalBundle.sign(wallet)\n    //const [to, data] = signer.quickAccManager ? [signer.quickAccManager, QuickAccManagerInterface.encodeFunctionData('send', [finalBundle.identity, [signer.timelock, signer.one, signer.two], [false, finalBundle.signature, '0x']])] :\n\n    // NOTE: just adding values to gasLimit is bad because 1) they're hardcoded estimates\n    // and 2) the fee displayed in the UI does not reflect that\n    const isDeployed = await provider.getCode(finalBundle.identity).then(code => code !== '0x')\n    let gasLimit\n    let to, data\n    if (isDeployed) {\n      gasLimit = estimation.gasLimit + 20000\n      to = finalBundle.identity\n      data = IdentityInterface.encodeFunctionData('executeBySender', [finalBundle.txns])\n    } else {\n      await finalBundle.getNonce(provider)\n      // just some hardcoded value to make the signing pass\n      finalBundle.gasLimit = 400000\n      await finalBundle.sign(wallet)\n      to = account.identityFactoryAddr\n      data = FactoryInterface.encodeFunctionData('deployAndExecute', [account.bytecode, account.salt, finalBundle.txns, finalBundle.signature])\n      gasLimit = (await provider.estimateGas({ to, data, from: signer.address })).toNumber() + 20000\n    }\n\n    const txn = {\n      from: signer.address,\n      to, data,\n      gas: hexlify(gasLimit),\n      gasPrice: hexlify(Math.floor(estimation.feeInNative[feeSpeed] / estimation.gasLimit * 1e18)),\n      nonce: hexlify(await provider.getTransactionCount(signer.address))\n    }\n    try {\n      let txId\n      if (!wallet.sendTransaction) {\n        // HW wallets which only sign\n        const signed = await wallet.signTransaction(txn)\n        txId = (await provider.sendTransaction(signed)).hash\n      } else {\n        // web3 injectors which can't sign, but can sign+send\n        // they also don't like the gas arg they fully control the chain ID\n        const { chainId } = await wallet.provider.getNetwork()\n        if (network.chainId !== chainId) throw new Error(`Connected to the wrong network: please switch to ${network.name}`)\n        txId = (await wallet.sendTransaction({ from: txn.from, to: txn.to, data: txn.data, gasPrice: txn.gasPrice, nonce: txn.nonce })).hash\n      }\n      return { success: true, txId }\n    } catch(e) {\n      if (e.code === 'INSUFFICIENT_FUNDS') throw new Error(`Insufficient gas fees: you need to have ${network.nativeAssetSymbol} on ${signer.address}`)\n      throw e\n    }\n  }\n","//import { GrInspect } from 'react-icons/gr'\n// GiObservatory is also interesting\nimport { GiGorilla } from 'react-icons/gi'\nimport { FaChevronLeft } from 'react-icons/fa'\nimport './SendTransaction.scss'\nimport { useEffect, useState, useMemo, useRef } from 'react'\nimport fetch from 'node-fetch'\nimport { Bundle } from 'adex-protocol-eth/js'\nimport { Wallet } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport * as blockies from 'blockies-ts';\nimport { useToasts } from 'hooks/toasts'\nimport { getWallet } from 'lib/getWallet'\nimport accountPresets from 'consts/accountPresets'\nimport { FeeSelector, FailingTxn } from './FeeSelector'\nimport Actions from './Actions'\nimport TxnPreview from 'components/common/TxnPreview/TxnPreview'\nimport { sendNoRelayer } from './noRelayer'\nimport { isTokenEligible, getFeePaymentConsequences } from './helpers'\nimport { fetchPost } from 'lib/fetch'\nimport { toBundleTxn } from 'lib/requestToBundleTxn'\nimport { getProvider } from 'lib/provider'\nimport { MdInfo } from 'react-icons/md'\nimport { useCallback } from 'react'\n\nconst ERC20 = new Interface(require('adex-protocol-eth/abi/ERC20'))\n\nconst DEFAULT_SPEED = 'fast'\nconst REESTIMATE_INTERVAL = 15000\n\nconst REJECT_MSG = 'Ambire user rejected the request'\n\nfunction makeBundle(account, networkId, requests) {\n  const bundle = new Bundle({\n    network: networkId,\n    identity: account.id,\n    txns: requests.map(({ txn }) => toBundleTxn(txn, account.id)),\n    signer: account.signer\n  })\n  bundle.extraGas = requests.map(x => x.extraGas || 0).reduce((a, b) => a + b, 0)\n  bundle.requestIds = requests.map(x => x.id)\n  return bundle\n}\n\nfunction getErrorMessage(e){\n  if (e && e.message === 'NOT_TIME') {\n    return \"Your 72 hour recovery waiting period still hasn't ended. You will be able to use your account after this lock period.\"\n  } else if (e && e.message === 'WRONG_ACC_OR_NO_PRIV' ) {\n    return \"Unable to sign with this email/password account. Please contact support.\"\n  } else if (e && e.message === 'INVALID_SIGNATURE') {\n    return \"Invalid signature. This may happen if you used password/derivation path on your hardware wallet.\"\n  } else {\n    return e.message || e \n  }\n}\n\nexport default function SendTransaction({ relayerURL, accounts, network, selectedAcc, requests, resolveMany, replacementBundle, onBroadcastedTxn, onDismiss }) {\n  // NOTE: this can be refactored at a top level to only pass the selected account (full object)\n  // keeping it that way right now (selectedAcc, accounts) cause maybe we'll need the others at some point?\n  const account = accounts.find(x => x.id === selectedAcc)\n\n  // Also filtered in App.js, but better safe than sorry here\n  const eligibleRequests = useMemo(() => requests\n    .filter(({ type, chainId, account, txn }) =>\n      type === 'eth_sendTransaction'\n      && chainId === network.chainId\n      && account === selectedAcc\n      && txn && (!txn.from || txn.from.toLowerCase() === selectedAcc.toLowerCase())\n    // we only need to update on change of IDs\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ), [requests.map(x => x.id).join(','), network.chainId, selectedAcc])\n  const bundle = useMemo(\n    () => replacementBundle || makeBundle(account, network.id, eligibleRequests),\n    [replacementBundle, network.id, account, eligibleRequests]\n  )\n\n  if (!account || !bundle.txns.length) return (<div id='sendTransaction'>\n      <h3 className='error'>SendTransactions: No account or no requests: should never happen.</h3>\n  </div>)\n  return (<SendTransactionWithBundle\n      relayerURL={relayerURL}\n      bundle={bundle}\n      network={network}\n      account={account}\n      resolveMany={resolveMany}\n      onBroadcastedTxn={onBroadcastedTxn}\n      onDismiss={onDismiss}\n  />)\n}\n\nfunction SendTransactionWithBundle ({ bundle, network, account, resolveMany, relayerURL, onBroadcastedTxn, onDismiss }) {\n  const [estimation, setEstimation] = useState(null)\n  const [signingStatus, setSigningStatus] = useState(false)\n  const [feeSpeed, setFeeSpeed] = useState(DEFAULT_SPEED)\n  const { addToast } = useToasts()\n  useEffect(() => {\n    if (!bundle.txns.length) return\n    setEstimation(null)\n  }, [bundle, setEstimation])\n\n  // Estimate the bundle & reestimate periodically\n  const currentBundle = useRef(null)\n  currentBundle.current = bundle\n  useEffect(() => {    // eslint-disable-next-line react-hooks/exhaustive-deps\n    // We don't need to reestimate the fee when a signing process is in progress\n    if (signingStatus) return\n    // nor when there are no txns in the bundle, if this is even possible\n    if (!bundle.txns.length) return\n\n    // track whether the effect has been unmounted\n    let unmounted = false\n\n    // get latest estimation\n    const reestimate = () => (relayerURL\n      ? bundle.estimate({ relayerURL, fetch, replacing: !!bundle.minFeeInUSDPerGas })\n      : bundle.estimateNoRelayer({ provider: getProvider(network.id) })\n    )\n      .then(estimation => {\n        if (unmounted || bundle !== currentBundle.current) return\n        estimation.selectedFeeToken = { symbol: network.nativeAssetSymbol }\n        setEstimation(prevEstimation => {\n          if (prevEstimation && prevEstimation.customFee) return prevEstimation\n          if (estimation.remainingFeeTokenBalances) {\n            // If there's no eligible token, set it to the first one cause it looks more user friendly (it's the preferred one, usually a stablecoin)\n            estimation.selectedFeeToken = (\n                prevEstimation\n                && isTokenEligible(prevEstimation.selectedFeeToken, feeSpeed, estimation)\n                && prevEstimation.selectedFeeToken\n              ) || estimation.remainingFeeTokenBalances.find(token => isTokenEligible(token, feeSpeed, estimation))\n              || estimation.remainingFeeTokenBalances[0]\n          }\n          return estimation\n        })\n      })\n      .catch(e => {\n        if (unmounted) return\n        console.log('estimation error', e)\n        addToast(`Estimation error: ${e.message || e}`, { error: true })\n      })\n\n    reestimate()\n    const intvl = setInterval(reestimate, REESTIMATE_INTERVAL)\n\n    return () => {\n      unmounted = true\n      clearInterval(intvl)\n    }\n  }, [bundle, setEstimation, feeSpeed, addToast, network, relayerURL, signingStatus])\n\n  const getFinalBundle = useCallback(() => {\n    if (!relayerURL) {\n      return new Bundle({\n        ...bundle,\n        gasLimit: estimation.gasLimit\n        // set nonce here when we implement \"replace current pending transaction\"\n      })\n    }\n\n    const feeToken = estimation.selectedFeeToken\n    const { addedGas, multiplier } = getFeePaymentConsequences(feeToken, estimation)\n    const toHexAmount = amnt => '0x'+Math.round(amnt).toString(16)\n    const feeTxn = feeToken.symbol === network.nativeAssetSymbol\n      ? [accountPresets.feeCollector, toHexAmount(estimation.feeInNative[feeSpeed]*multiplier*1e18), '0x']\n      : [feeToken.address, '0x0', ERC20.encodeFunctionData('transfer', [\n        accountPresets.feeCollector,\n        toHexAmount(\n          (feeToken.isStable ? estimation.feeInUSD[feeSpeed] : estimation.feeInNative[feeSpeed])\n          * multiplier\n          * Math.pow(10, feeToken.decimals)\n        )\n    ])]\n    return new Bundle({\n      ...bundle,\n      txns: [...bundle.txns, feeTxn],\n      gasLimit: estimation.gasLimit + addedGas + (bundle.extraGas || 0)\n    })\n  }, [relayerURL, bundle, estimation, feeSpeed, network.nativeAssetSymbol])\n\n  const approveTxnImpl = async () => {\n    if (!estimation) throw new Error('no estimation: should never happen')\n\n    const finalBundle = getFinalBundle()\n    const provider = getProvider(network.id)\n    const signer = finalBundle.signer\n\n    const wallet = getWallet({\n      signer,\n      signerExtra: account.signerExtra,\n      chainId: network.chainId\n    })\n\n    if (relayerURL) {\n      // Temporary way of debugging the fee cost\n      // const initialLimit = finalBundle.gasLimit - getFeePaymentConsequences(estimation.selectedFeeToken, estimation).addedGas\n      // finalBundle.estimate({ relayerURL, fetch }).then(estimation => console.log('fee costs: ', estimation.gasLimit - initialLimit), estimation.selectedFeeToken).catch(console.error)\n      if (typeof finalBundle.nonce !== 'number') await finalBundle.getNonce(provider)\n      await finalBundle.sign(wallet)\n      return await finalBundle.submit({ relayerURL, fetch })\n    } else {\n      return await sendNoRelayer({\n        finalBundle, account, network, wallet, estimation, feeSpeed, provider\n      })\n    }\n  }\n\n  const approveTxnImplQuickAcc = async ({ quickAccCredentials }) => {\n    if (!estimation) throw new Error('no estimation: should never happen')\n    if (!relayerURL) throw new Error('Email/Password account signing without the relayer is not supported yet')\n\n    const finalBundle = (signingStatus && signingStatus.finalBundle) || getFinalBundle()\n    const signer = finalBundle.signer\n\n    if (typeof finalBundle.nonce !== 'number') {\n      await finalBundle.getNonce(getProvider(network.id))\n    }\n\n    const { signature, success, message, confCodeRequired } = await fetchPost(\n      `${relayerURL}/second-key/${bundle.identity}/${network.id}/sign`, {\n        signer, txns: finalBundle.txns, nonce: finalBundle.nonce, gasLimit: finalBundle.gasLimit,\n        code: quickAccCredentials && quickAccCredentials.code,\n        // This can be a boolean but it can also contain the new signer/primaryKeyBackup, which instructs /second-key to update acc upon successful signature\n        recoveryMode: finalBundle.recoveryMode\n      }\n    )\n    if (!success) {\n      if (!message) throw new Error(`Secondary key: no success but no error message`)\n      if (message.includes('invalid confirmation code')) {\n        addToast('Unable to sign: wrong confirmation code', { error: true })\n        return\n      }\n      throw new Error(`Secondary key error: ${message}`)\n    }\n    if (confCodeRequired) {\n      setSigningStatus({ quickAcc: true, finalBundle, confCodeRequired })\n    } else {\n      if (!signature) throw new Error(`QuickAcc internal error: there should be a signature`)\n      if (!account.primaryKeyBackup) throw new Error(`No key backup found: you need to import the account from JSON or login again.`)\n      setSigningStatus({ quickAcc: true, inProgress: true })\n      if (!finalBundle.recoveryMode) {\n        // Make sure we let React re-render without blocking (decrypting and signing will block)\n        await new Promise(resolve => setTimeout(resolve, 0))\n        const pwd = quickAccCredentials.passphrase || alert('Enter password')\n        const wallet = await Wallet.fromEncryptedJson(JSON.parse(account.primaryKeyBackup), pwd)\n        await finalBundle.sign(wallet)\n      } else {\n        // set both .signature and .signatureTwo to the same value: the secondary signature\n        // this will trigger a timelocked txn\n        finalBundle.signature = signature\n      }\n      finalBundle.signatureTwo = signature\n      return await finalBundle.submit({ relayerURL, fetch })\n    }\n  }\n\n  const approveTxn = ({ quickAccCredentials }) => {\n    if (signingStatus && signingStatus.inProgress) return\n    setSigningStatus(signingStatus || { inProgress: true })\n\n    if (account.signerExtra && account.signerExtra.type === 'ledger') {\n      addToast('Please confirm this transaction on your Ledger device.', { timeout: 10000 })\n    }\n\n    const requestIds = bundle.requestIds\n    const approveTxnPromise = bundle.signer.quickAccManager ?\n      approveTxnImplQuickAcc({ quickAccCredentials })\n      : approveTxnImpl()\n    approveTxnPromise.then(bundleResult => {\n      // special case for approveTxnImplQuickAcc\n      if (!bundleResult) return\n\n      // be careful not to call this after onDimiss, cause it might cause state to be changed post-unmount\n      setSigningStatus(null)\n\n      // Inform everything that's waiting for the results (eg WalletConnect)\n      const skipResolve = !bundleResult.success && bundleResult.message && bundleResult.message.match(/underpriced/i)\n      if (!skipResolve && requestIds) resolveMany(requestIds, { success: bundleResult.success, result: bundleResult.txId, message: bundleResult.message })\n\n      if (bundleResult.success) {\n        onBroadcastedTxn(bundleResult.txId)\n        onDismiss()\n      } else {\n        addToast(`Transaction error: ${getErrorMessage(bundleResult)}`, { error: true })  //'unspecified error'\n      }\n    })\n    .catch(e => {\n      setSigningStatus(null)\n      console.error(e)\n      if (e && e.message.includes('must provide an Ethereum address')) {\n        addToast(`Signing error: not connected with the correct address. Make sure you're connected with ${bundle.signer.address}.`, { error: true })\n      } else if (e && e.message.includes('0x6b0c')) {\n        // not sure if that's actually the case with this hellish error, but after unlocking the device it no longer appeared\n        // however, it stopped appearing after that even if the device is locked, so I'm not sure it's related...\n        addToast(`Ledger: unknown error (0x6b0c): is your Ledger unlocked and in the Ethereum application?`, { error: true })\n      } else {\n        addToast(`Signing error: ${getErrorMessage(e)}`, { error: true })\n      }\n    })\n  }\n\n  // Not applicable when .requestIds is not defined (replacement bundle)\n  const rejectTxn = bundle.requestIds && (() => {\n    onDismiss()\n    resolveMany(bundle.requestIds, { message: REJECT_MSG })\n  })\n\n  const accountAvatar = blockies.create({ seed: account.id }).toDataURL()\n\n  return (\n    <div id='sendTransaction'>\n      <div id=\"titleBar\">\n        <div className='dismiss' onClick={onDismiss}>\n          <FaChevronLeft size={35}/><span>back</span>\n        </div>\n      </div>\n\n      <div className='container'>\n        <div id='transactionPanel' className='panel'>\n          <div className='heading'>\n            <div className='title'>{ bundle.txns.length } Transaction{ bundle.txns.length > 1 ? 's' : '' } Waiting</div>\n          </div>\n          <div className='content'>\n            <div className={`listOfTransactions${bundle.requestIds ? '' : ' frozen'}`}>\n              {bundle.txns.map((txn, i) => {\n                const isFirstFailing = estimation && !estimation.success && estimation.firstFailing === i\n                // we need to re-render twice per minute cause of DEX deadlines\n                const min = Math.floor(Date.now() / 30000)\n                return (<TxnPreview\n                  key={[...txn, i].join(':')}\n                  // pasing an unused property to make it update\n                  minute={min}\n                  onDismiss={bundle.requestIds && (() => resolveMany([bundle.requestIds[i]], { message: REJECT_MSG }))}\n                  txn={txn} network={bundle.network} account={bundle.identity}\n                  isFirstFailing={isFirstFailing}\n                  disableDismiss={!!signingStatus}\n                  disableDismissLabel={\"Cannot modify transaction bundle while a signing procedure is pending\"}\n                  />\n                )\n              })}\n            </div>\n\n            <div className='separator'></div>\n\n            <div className='transactionsNote'>\n              {\n                bundle.requestIds ?\n                  <>\n                    <b><GiGorilla size={16}/> DEGEN TIP</b>\n                    <span>You can sign multiple transactions at once. Add more transactions to this batch by interacting with a connected dApp right now.</span>\n                  </>\n                  :\n                  <>\n                    <b>NOTE:</b>\n                    <span>You are currently replacing a pending transaction.</span>\n                  </>\n              }\n            </div>\n          </div>\n        </div>\n\n        <div id='detailsPanel' className='panel'>\n          <div id=\"options-container\">\n            <div className='section' id=\"signing-details\">\n              <div className='section-title'>Signing With</div>\n              <div className='section-content'>\n                <div className='account'>\n                  <div className='icon' style={{ backgroundImage: `url(${accountAvatar})` }}/>\n                  <div className='address'>{ account.id }</div>\n                </div>\n                <div className='network'>\n                  on\n                  <div className='icon' style={{ backgroundImage: `url(${network.icon})` }}/>\n                  <div className='address'>{ network.name }</div>\n                </div>\n              </div>\n            </div>\n\n            <FeeSelector\n              disabled={signingStatus && signingStatus.finalBundle && !(estimation && !estimation.success)}\n              signer={bundle.signer}\n              estimation={estimation}\n              setEstimation={setEstimation}\n              network={network}\n              feeSpeed={feeSpeed}\n              setFeeSpeed={setFeeSpeed}\n            ></FeeSelector>\n          </div>\n\n          {\n            estimation && estimation.success && estimation.isDeployed === false && bundle.gasLimit ?\n              <div className='first-tx-note'>\n                <div className='first-tx-note-title'><MdInfo/>Note</div>\n                <div className='first-tx-note-message'>\n                  Because this is your first Ambire transaction, this fee is {(60000 / bundle.gasLimit * 100).toFixed()}% higher than usual because we have to deploy your smart wallet.\n                  Subsequent transactions will be cheaper\n                </div>\n              </div>\n              :\n              null\n          }\n\n          <div id=\"actions-container\">\n            {\n              bundle.signer.quickAccManager && !relayerURL ? \n                <FailingTxn message='Signing transactions with an email/password account without being connected to the relayer is unsupported.'></FailingTxn>\n                :\n                <div className='section' id=\"actions\">\n                  <Actions\n                    estimation={estimation}\n                    approveTxn={approveTxn}\n                    rejectTxn={rejectTxn}\n                    cancelSigning={() => setSigningStatus(null)}\n                    signingStatus={signingStatus}\n                    feeSpeed={feeSpeed}\n                  />\n                </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import './SignMessage.scss'\nimport { MdBrokenImage, MdCheck, MdClose } from 'react-icons/md'\nimport { Wallet } from 'ethers'\nimport { toUtf8String, keccak256, arrayify, isHexString } from 'ethers/lib/utils'\nimport { signMsgHash } from 'adex-protocol-eth/js/Bundle'\nimport * as blockies from 'blockies-ts';\nimport { getWallet } from 'lib/getWallet'\nimport { useToasts } from 'hooks/toasts'\nimport { fetchPost } from 'lib/fetch'\nimport { useState } from 'react'\nimport { Button, Loading, TextInput } from 'components/common'\n\nexport default function SignMessage ({ toSign, resolve, account, connections, relayerURL, totalRequests }) {\n  const defaultState = () => ({ codeRequired: false, passphrase: '' })\n  const { addToast } = useToasts()\n  const [signingState, setSigningState] = useState(defaultState())\n  const [isLoading, setLoading] = useState(false)\n\n  const connection = connections.find(({ uri }) => uri === toSign.wcUri)\n  const dApp = connection ? connection?.session?.peerMeta || null : null\n\n  if (!toSign || !account) return (<></>)\n  if (toSign && !isHexString(toSign.txn)) return (<div id='signMessage'>\n    <h3 className='error'>Invalid signing request: .txn has to be a hex string</h3>\n    <Button className='reject' onClick={() => resolve({ message: 'signature denied' })}>Reject</Button>\n  </div>)\n\n  const handleSigningErr = e => {\n    console.error('Signing error', e)\n    if (e && e.message.includes('must provide an Ethereum address')) {\n      addToast(`Signing error: not connected with the correct address. Make sure you're connected with ${account.signer.address}.`, { error: true })\n    } else {\n      addToast(`Signing error: ${e.message || e}`, { error: true })\n    }\n  }\n  const approveQuickAcc = async confirmationCode => {\n    if (!relayerURL) {\n      addToast('Email/pass accounts not supported without a relayer connection', { error: true })\n      return\n    }\n    if (!signingState.passphrase) {\n      addToast('Password required to unlock the account', { error: true })\n      return\n    }\n    setLoading(true)\n    try {\n      const hash = keccak256(arrayify(toSign.txn))\n\n      const { signature, success, message, confCodeRequired } = await fetchPost(\n        // network doesn't matter when signing\n        `${relayerURL}/second-key/${account.id}/ethereum/sign`, {\n          toSign: hash,\n          code: confirmationCode\n        }\n      )\n      if (!success) {\n        if (!message) throw new Error(`Secondary key: no success but no error message`)\n        if (message.includes('invalid confirmation code')) {\n          addToast('Unable to sign: wrong confirmation code', { error: true })\n        }\n        addToast(`Second signature error: ${message}`, { error: true })\n        return\n      }\n      if (confCodeRequired) {\n        const confCode = prompt('A confirmation code has been sent to your email, it is valid for 3 minutes. Please enter it here:')\n        if (!confCode) throw new Error('You must enter a confirmation code')\n        await approveQuickAcc(confCode)\n        return\n      }\n\n      if (!account.primaryKeyBackup) throw new Error(`No key backup found: you need to import the account from JSON or login again.`)\n      const wallet = await Wallet.fromEncryptedJson(JSON.parse(account.primaryKeyBackup), signingState.passphrase)\n      const sig = await signMsgHash(wallet, account.id, account.signer, arrayify(hash), signature)\n      resolve({ success: true, result: sig })\n      addToast(`Successfully signed!`)\n    } catch(e) { handleSigningErr(e) }\n    setLoading(false)\n  }\n\n  const approve = async () => {\n    if (account.signer.quickAccManager) {\n      await approveQuickAcc()\n      return\n    }\n\n    setLoading(true)\n    try {\n      // if quick account, wallet = await fromEncryptedBackup\n      // and just pass the signature as secondSig to signMsgHash\n      const wallet = getWallet({\n        signer: account.signer,\n        signerExtra: account.signerExtra,\n        chainId: 1 // does not matter\n      })\n      // It would be great if we could pass the full data cause then web3 wallets/hw wallets can display the full text\n      // Unfortunately that isn't possible, because isValidSignature only takes a bytes32 hash; so to sign this with\n      // a personal message, we need to be signing the hash itself as binary data such that we match 'Ethereum signed message:\\n32<hash binary data>' on the contract\n      const hash = keccak256(arrayify(toSign.txn)) // hacky equivalent is: id(toUtf8String(toSign.txn)) \n      const sig = await signMsgHash(wallet, account.id, account.signer, arrayify(hash))\n      resolve({ success: true, result: sig })\n      addToast(`Successfully signed!`)\n    } catch(e) { handleSigningErr(e) }\n    setLoading(false)\n  }\n\n  return (<div id='signMessage'>\n    <div id='signingAccount' className='panel'>\n      <div className='title'>\n        Signing with account\n      </div>\n      <div className=\"content\">\n        <img className='icon' src={blockies.create({ seed: account.id }).toDataURL()} alt='Account Icon'/>\n        { account.id }\n      </div>\n    </div>\n    <div className='panel'>\n      <div className='title'>\n        Sign message\n      </div>\n\n      <div className='request-message'>\n        <div className='dapp-message'>\n          { \n            dApp ?\n              <a className='dapp' href={dApp.url} target=\"_blank\" rel=\"noreferrer\">\n                <div className='icon' style={{ backgroundImage: `url(${dApp.icons[0]})` }}>\n                 <MdBrokenImage/> \n                </div>\n                { dApp.name }\n              </a>\n              :\n              'A dApp '\n          }\n          is requesting your signature.\n        </div>\n        <span>{totalRequests > 1 ? `You have ${totalRequests - 1} more pending requests.` : ''}</span>\n      </div>\n      \n      <textarea\n        className='sign-message'\n        type='text'\n        value={getMessageAsText(toSign.txn)}\n        readOnly={true}\n      />\n\n      <div className='actions'>\n        <form onSubmit={e => { e.preventDefault() }}>\n          {account.signer.quickAccManager && (<>\n            <TextInput\n              password\n              required minLength={3}\n              placeholder='Account password'\n              value={signingState.passphrase}\n              onChange={value => setSigningState({ ...signingState, passphrase: value })}\n            ></TextInput>\n          </>)}\n\n          <div className=\"buttons\">\n            <Button\n              danger\n              icon={<MdClose/>}\n              className='reject'\n              onClick={() => resolve({ message: 'signature denied' })}\n            >Reject</Button>\n            <Button className='approve' onClick={approve} disabled={isLoading}>\n              {isLoading ? (<><Loading/>Signing...</>)\n              : (<><MdCheck/> Sign</>)}\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>)\n}\n\nfunction getMessageAsText(msg) {\n  try { return toUtf8String(msg) }\n  catch(_) { return msg }\n}","import {\n  getSDKVersion,\n  MessageFormatter,\n  Methods\n} from '@gnosis.pm/safe-apps-sdk'\n\nfunction GnosisConnector(_iframeRef, _app) {\n  this.iframeRef = _iframeRef\n  this.app = _app\n  this.handlers = {}\n\n  this.on = (method, handler) => {\n    this.handlers[method] = handler\n  }\n\n  this.isValidMessage = (msg) => {\n    // @ts-expect-error .parent doesn't exist on some possible types\n    if (!msg?.source?.parent) {\n      return false\n    }\n    const sentFromIframe = msg.source.parent === window.parent\n    const knownMethod = Object.values(Methods).includes(msg.data.method)\n\n    return sentFromIframe && knownMethod\n  }\n\n  this.canHandleMessage = (msg) => {\n    return Boolean(this.handlers[msg.data.method])\n  }\n\n  this.send = (data, requestId, error) => {\n    const sdkVersion = getSDKVersion()\n    const msg = error\n      ? MessageFormatter.makeErrorResponse(requestId, error, sdkVersion)\n      : MessageFormatter.makeResponse(requestId, data, sdkVersion)\n\n    if (this.iframeRef) {\n      //console.log(\"Posting to child\")\n      //console.log(msg)\n      this.iframeRef.current?.contentWindow?.postMessage(msg, '*')\n    } else {\n      console.log('Iframe not referenced ')\n    }\n  }\n\n  this.handleIncomingMessage = async (msg) => {\n\n    const validMessage = this.isValidMessage(msg)\n    const hasHandler = this.canHandleMessage(msg)\n\n    if (validMessage && hasHandler) {\n      const handler = this.handlers[msg.data.method]\n      try {\n        // @ts-expect-error Handler existence is checked in this.canHandleMessage\n        const response = await handler(msg)\n\n        // If response is not returned, it means the response will be send somewhere else\n        if (typeof response !== 'undefined') {\n          this.send(response, msg.data.id)\n        }\n      } catch (err) {\n        console.error(\"GS : \" + err);\n        this.send(err.message, msg.data.id, true)\n        /*trackError(Errors._901, err.message, {\n          contexts: {\n            safeApp: this.app,\n            request: msg.data,\n          },\n        })*/\n      }\n    }\n  }\n\n  this.clear = () => {\n    //console.log('removeListener...')\n    window.removeEventListener('message', this.handleIncomingMessage)\n  }\n\n  console.log('new appCommunicator')\n  window.addEventListener('message', this.handleIncomingMessage)\n}\n\nexport {GnosisConnector}\n","export default __webpack_public_path__ + \"static/media/icon.946ee983.png\";","import { useCallback, useRef, useEffect } from 'react'\nimport { getTransactionSummary } from 'lib/humanReadableTransactions'\nimport { BigNumber } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { useToasts } from './toasts'\nimport networks from 'consts/networks'\nimport AMBIRE_ICON from 'resources/icon.png'\nimport { getProvider } from 'lib/provider'\n\nconst REQUEST_TITLE_PREFIX = 'Ambire Wallet: '\nconst SUPPORTED_TYPES =  ['eth_sendTransaction', 'personal_sign']\nconst BALANCE_TRESHOLD = 1.00002\nlet currentNotifs = []\nlet isLastTotalBalanceInit = false\nlet lastTokensBalanceRaw = []\n\nconst getAmountReceived = (lastToken, newBalanceRaw, decimals) => {\n    try {\n        const amountRecieved = lastToken\n            ? (BigNumber.from(newBalanceRaw.toString(10)).sub(BigNumber.from(lastToken.balanceRaw.toString(10))))\n            : newBalanceRaw\n        return formatUnits(amountRecieved, decimals)\n    } catch(e) {\n        console.error('Notifications: ' + e);\n    }\n}\n\nexport default function useNotifications (requests, onShow, portfolio, selectedAcc, network, sentTxn, confirmSentTx) {\n    const { addToast } = useToasts()\n    const onShowRef = useRef({})\n    onShowRef.current.onShow = onShow\n\n    useEffect(() => {\n        // hack because for whatever reason it doesn't work when we access the ref directly\n        window.onClickNotif = req => onShowRef.current.onShow(req)\n    }, [])\n    \n    // Shared code for all notifications\n    const showNotification = useCallback(({ id, title, body, requireInteraction, request, onClick }) => {\n        const notification = new Notification(title, {\n            requireInteraction: requireInteraction || false,\n            body,\n            icon: AMBIRE_ICON,\n        })\n        //notification.onclose = \n        notification.onclick = onClick || (() => {\n            if (request && request.type === 'eth_sendTransaction') window.onClickNotif(request)\n            window.focus()\n            notification.close()\n        })\n        currentNotifs.push({ id, notification })\n    }, [])\n\n    // Signing request notifications\n    requests.forEach(request => {\n        // only requests we actually want a notification for\n        if (!request.notification) return\n        if (!SUPPORTED_TYPES.includes(request.type)) return\n        if (currentNotifs.find(n => n.id === request.id)) return\n        if (!request.txn) return\n        const isSign = request.type === 'personal_sign'\n        const network = networks.find(x => x.chainId === request.chainId)\n        const title = REQUEST_TITLE_PREFIX+(\n            isSign\n                ? 'you have a new message to sign'\n                : `new transaction request on ${network ? network.name : 'unknown network'}`\n        )\n        const body = isSign ? 'Click to preview' : getTransactionSummary([request.txn.to, request.txn.value, request.txn.data], request.chainId, request.account)\n        showNotification({\n            id: request.id,\n            title,\n            body,\n            request,\n            requireInteraction: true\n        })\n    })\n\n    // Balance notifications\n    useEffect(() => {\n        try {\n            if (!portfolio.isBalanceLoading && portfolio.balance) {\n                if (!isLastTotalBalanceInit) {\n                    isLastTotalBalanceInit = true\n                    lastTokensBalanceRaw = portfolio.tokens.map(({ address, balanceRaw }) => ({ address, balanceRaw }))\n                }\n\n                const changedAmounts = portfolio.tokens.filter(({ address, balanceRaw }) => {\n                    const lastToken = lastTokensBalanceRaw.find(token => token.address === address)\n                    const isSignificantChange = lastToken && ((balanceRaw / lastToken.balanceRaw) > BALANCE_TRESHOLD)\n                    return !lastToken || isSignificantChange\n                })\n\n                changedAmounts.forEach(({ address, symbol, decimals, balanceRaw }) => {\n                    const lastToken = lastTokensBalanceRaw.find(token => token.address === address)\n                    const amountRecieved = getAmountReceived(lastToken, balanceRaw, decimals)\n\n                    showNotification({\n                        id: `received_amount_${Date.now()}`,\n                        title: `${amountRecieved} ${symbol} Received.`,\n                        body: `Your ${symbol} balance increased by ${amountRecieved} ${symbol}`\n                    })\n\n                    lastToken ? lastTokensBalanceRaw = [\n                        ...lastTokensBalanceRaw.filter(token => token.address !== address),\n                        { address, balanceRaw }\n                    ] : lastTokensBalanceRaw.push({ address, balanceRaw })\n                })\n            }\n        } catch(e) {\n            console.error(e)\n            addToast(e.message | e, { error: true })\n        }\n    }, [portfolio, addToast, showNotification])\n\n    // Tx mined notifications\n    useEffect(() => {\n        const interval = network.id === 'ethereum' ? 30000 : 10000\n        const txStatusInterval = setInterval(() => {\n            sentTxn\n                .filter(({ confirmed }) => !confirmed)\n                .forEach(async ({ hash }) => {\n                    const provider = getProvider(network.id)\n                    try {\n                        const txReceipt = await provider.getTransactionReceipt(hash)\n                        if (!txReceipt) return\n\n                        confirmSentTx(hash)\n                        showNotification({\n                            id: `confirmed_tx_${Date.now()}`,\n                            title: `Ambire Transaction Confirmed`,\n                            body: `Your transaction was successfully confirmed!`,\n                            onClick: () => window.open(network.explorerUrl+'/tx/'+hash, '_blank')\n                        })\n                    } catch(e) {\n                        console.error(e);\n                    }\n                })\n        }, interval)\n        return () => clearInterval(txStatusInterval)\n    }, [sentTxn, network, showNotification, confirmSentTx])\n\n    useEffect(() => {\n        isLastTotalBalanceInit = false\n        lastTokensBalanceRaw = []\n    }, [selectedAcc, network])\n\n    currentNotifs = currentNotifs.filter(({ id, notification }) => {\n        if (!requests.find(r => r.id === id)) {\n            notification.close()\n            return false\n        }\n        return true\n    })\n  }\n  \n","import { useEffect, useCallback, useMemo, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useHistory } from 'react-router'\n\nexport const useOneTimeQueryParam = searchParam => {\n    const { search } = useLocation()\n    const history = useHistory()\n    const urlSearchParams = useMemo(() => new URLSearchParams(search), [search])\n    const [oneTimeQueryParam, setOneTimeQueryParam] = useState(urlSearchParams.get(searchParam))\n    const altParams = useMemo(() => new URLSearchParams(window.location.href.split('?').slice(1).join('?').split('#')[0]), [])\n\n    const deleteOneTimeQueryParam = useCallback(() => {\n        if (urlSearchParams.has(searchParam)) {\n            urlSearchParams.delete(searchParam)\n            history.replace({\n                search: urlSearchParams.toString(),\n            })\n        }\n    }, [history, urlSearchParams, searchParam])\n\n    useEffect(() => {\n        if (urlSearchParams && urlSearchParams.get(searchParam)) setOneTimeQueryParam(urlSearchParams.get(searchParam))\n        else if (altParams.get(searchParam)) setOneTimeQueryParam(altParams.get(searchParam))\n        deleteOneTimeQueryParam()\n    }, [deleteOneTimeQueryParam, urlSearchParams, altParams, searchParam])\n    \n    return oneTimeQueryParam\n}\n","import './App.scss'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Prompt\n} from 'react-router-dom'\nimport { useState, useEffect, useMemo, useCallback } from 'react'\nimport EmailLogin from './components/EmailLogin/EmailLogin'\nimport AddAccount from './components/AddAccount/AddAccount'\nimport Wallet from './components/Wallet/Wallet'\nimport ToastProvider from './components/ToastProvider/ToastProvider'\nimport ModalProvider from './components/ModalProvider/ModalProvider'\nimport SendTransaction from './components/SendTransaction/SendTransaction'\nimport SignMessage from './components/SignMessage/SignMessage'\nimport useAccounts from './hooks/accounts'\nimport useNetwork from './hooks/network'\nimport useWalletConnect from './hooks/walletconnect'\nimport useGnosisSafe from './hooks/useGnosisSafe'\nimport useNotifications from './hooks/notifications'\nimport { useAttentionGrabber, usePortfolio, useAddressBook, useRelayerData, usePrivateMode, useLocalStorage } from './hooks'\nimport { useToasts } from './hooks/toasts'\nimport { useOneTimeQueryParam } from './hooks/oneTimeQueryParam'\n\nconst relayerURL = process.env.hasOwnProperty('REACT_APP_RELAYER_URL') ? process.env.REACT_APP_RELAYER_URL : 'http://localhost:1934'\n\nsetTimeout(() => {\n  //console.warn('☢️ If you do, malicious code could steal your funds! ☢️')\n  //console.error('Only use the console if you are an experienced developer who knows what he\\'s doing')\n  console.log(\" ✋ Hey...! Slow down you ambitious adventurer! You want to keep your funds safe! 🦄\")\n  console.error('       💀 DO NOT PASTE ANY CODE HERE ! 💀')\n  console.error(' _          ___   ___  _  _   ___  ___  ___         _')\n  console.error('| |        |   \\\\ /   \\\\| \\\\| | / __|| __|| _ \\\\       | |')\n  console.error('|_|        | |) || - || .  || (_ || _| |   /       |_|')\n  console.error('(_)        |___/ |_|_||_|\\\\_| \\\\___||___||_|_\\\\       (_)')\n  console.log('At Ambire, we care about our users 💜. Safety is our top priority! DO NOT PASTE ANYTHING HERE or it could result in the LOSS OF YOUR FUNDS!')\n}, 4000);\n\nfunction AppInner () {\n  // basic stuff: currently selected account, all accounts, currently selected network\n  const { accounts, selectedAcc, onSelectAcc, onAddAccount, onRemoveAccount } = useAccounts(useLocalStorage)\n  const addressBook = useAddressBook({ accounts, useStorage: useLocalStorage })\n  const { network, setNetwork, allNetworks } = useNetwork({ useStorage: useLocalStorage })\n  const { addToast } = useToasts()\n  const wcUri = useOneTimeQueryParam('uri')\n\n  // Signing requests: transactions/signed msgs: all requests are pushed into .requests\n  const { connections, connect, disconnect, requests: wcRequests, resolveMany: wcResolveMany } = useWalletConnect({\n    account: selectedAcc,\n    chainId: network.chainId,\n    initialUri: wcUri,\n    allNetworks,\n    setNetwork,\n    useStorage: useLocalStorage\n  })\n\n  const { requests: gnosisRequests, resolveMany: gnosisResolveMany, connect: gnosisConnect, disconnect: gnosisDisconnect } = useGnosisSafe({\n    selectedAccount: selectedAcc,\n    network: network,\n    useStorage: useLocalStorage\n\t}, [selectedAcc, network])\n\n  // Internal requests: eg from the Transfer page, Security page, etc. - requests originating in the wallet UI itself\n  // unlike WalletConnect or SafeSDK requests, those do not need to be persisted\n  const [internalRequests, setInternalRequests] = useState([])\n  const addRequest = req => setInternalRequests(reqs => [...reqs, req])\n\n  // Merge all requests\n  const requests = useMemo(\n    () => [...internalRequests, ...wcRequests, ...gnosisRequests]\n      .filter(({ account }) => accounts.find(({ id }) => id === account)),\n    [wcRequests, internalRequests, gnosisRequests, accounts]\n  )\n  const resolveMany = (ids, resolution) => {\n    wcResolveMany(ids, resolution)\n    gnosisResolveMany(ids, resolution)\n    setInternalRequests(reqs => reqs.filter(x => !ids.includes(x.id)))\n  }\n\n  // Portfolio: this hook actively updates the balances/assets of the currently selected user\n  const portfolio = usePortfolio({\n    currentNetwork: network.id,\n    account: selectedAcc,\n    useStorage: useLocalStorage\n  })\n\n  const privateMode = usePrivateMode(useLocalStorage)\n\n  // Show the send transaction full-screen modal if we have a new txn\n  const eligibleRequests = useMemo(() => requests\n    .filter(({ type, chainId, account }) =>\n      type === 'eth_sendTransaction'\n      && chainId === network.chainId\n      && account === selectedAcc\n    ), [requests, network.chainId, selectedAcc])\n  const [sendTxnState, setSendTxnState] = useState(() => ({ showing: !!eligibleRequests.length }))\n  useEffect(\n    () => setSendTxnState({ showing: !!eligibleRequests.length }),\n    [eligibleRequests.length]\n  )\n  const showSendTxns = bundle => setSendTxnState({ showing: true, replacementBundle: bundle })\n\n  // Network shouldn't matter here\n  const everythingToSign = useMemo(() => requests\n    .filter(({ type, account }) => (type === 'personal_sign' || type === 'eth_sign')\n      && account === selectedAcc\n    ), [requests, selectedAcc])\n\n  // When the user presses back, we first hide the SendTransactions dialog (keeping the queue)\n  // Then, signature requests will need to be dismissed one by one, starting with the oldest\n  const onPopHistory = () => {\n    if (sendTxnState.showing) {\n      setSendTxnState({ showing: false })\n      return false\n    }\n    if (everythingToSign.length) {\n      resolveMany([everythingToSign[0].id], { message: 'Ambire user rejected the signature request' })\n      return false\n    }\n    return true\n  }\n\n   // Keeping track of transactions\n  const [sentTxn, setSentTxn] = useState([])\n  const onBroadcastedTxn = hash => {\n    if (!hash) {\n      addToast('Transaction signed but not broadcasted to the network!', { timeout: 15000 })\n      return\n    }\n    setSentTxn(sentTxn => [...sentTxn, { confirmed: false, hash }])\n    addToast((\n      <span>Transaction signed and sent successfully!\n        &nbsp;Click to view on block explorer.\n      </span>\n    ), { url: network.explorerUrl+'/tx/'+hash, timeout: 15000 })\n  }\n  const confirmSentTx = txHash => setSentTxn(sentTxn => {\n    const tx = sentTxn.find(tx => tx.hash === txHash)\n    tx.confirmed = true\n    return [\n      ...sentTxn.filter(tx => tx.hash !== txHash),\n      tx\n    ]\n  })\n\n  // Show notifications for all requests\n  useNotifications(requests, request => {\n    onSelectAcc(request.account)\n    setNetwork(request.chainId)\n    setSendTxnState(state => ({ ...state, showing: true }))\n  }, portfolio, selectedAcc, network, sentTxn, confirmSentTx)\n\n  useAttentionGrabber({\n    eligibleRequests,\n    isSendTxnShowing: sendTxnState.showing,\n    onSitckyClick: useCallback(() => setSendTxnState({ showing: true }), [])\n  })\n\n  const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n  useEffect(() => {\n    if ((Date.now() - cacheBreak) > 5000) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), 30000)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak])\n  const rewardsUrl = (relayerURL && selectedAcc) ? `${relayerURL}/wallet-token/rewards/${selectedAcc}?cacheBreak=${cacheBreak}` : null\n  const rewardsData = useRelayerData(rewardsUrl)\n\n  return (<>\n    <Prompt\n      message={(location, action) => {\n        if (action === 'POP') return onPopHistory()\n        return true\n    }}/>\n\n    {!!everythingToSign.length && (<SignMessage\n      selectedAcc={selectedAcc}\n      account={accounts.find(x => x.id === selectedAcc)}\n      toSign={everythingToSign[0]}\n      totalRequests={everythingToSign.length}\n      connections={connections}\n      relayerURL={relayerURL}\n      resolve={outcome => resolveMany([everythingToSign[0].id], outcome)}\n    ></SignMessage>)}\n\n    {sendTxnState.showing ? (\n      <SendTransaction\n          accounts={accounts}\n          selectedAcc={selectedAcc}\n          network={network}\n          requests={eligibleRequests}\n          resolveMany={resolveMany}\n          relayerURL={relayerURL}\n          onDismiss={() => setSendTxnState({ showing: false })}\n          replacementBundle={sendTxnState.replacementBundle}\n          onBroadcastedTxn={onBroadcastedTxn}\n      ></SendTransaction>\n      ) : (<></>)\n    }\n\n    <Switch>\n      <Route path=\"/add-account\">\n        <AddAccount relayerURL={relayerURL} onAddAccount={onAddAccount}></AddAccount>\n      </Route>\n\n      <Route path=\"/email-login\">\n        <EmailLogin relayerURL={relayerURL} onAddAccount={onAddAccount}></EmailLogin>\n      </Route>\n\n      <Route path=\"/wallet\">\n        <Wallet\n          match={{ url: \"/wallet\" }}\n          accounts={accounts}\n          selectedAcc={selectedAcc}\n          addressBook={addressBook}\n          portfolio={portfolio}\n          onSelectAcc={onSelectAcc}\n          onRemoveAccount={onRemoveAccount}\n          allNetworks={allNetworks}\n          network={network}\n          setNetwork={setNetwork}\n          addRequest={addRequest}\n          connections={connections}\n          // needed by the top bar to disconnect/connect dapps\n          connect={connect}\n          disconnect={disconnect}\n          // needed by the gnosis plugins\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n          // required for the security and transactions pages\n          relayerURL={relayerURL}\n          // required by the transactions page\n          eligibleRequests={eligibleRequests}\n          showSendTxns={showSendTxns}\n          onAddAccount={onAddAccount}\n          rewardsData={rewardsData}\n          privateMode={privateMode}\n        >\n        </Wallet>\n      </Route>\n\n      <Route path=\"/\">\n        <Redirect to={selectedAcc ? \"/wallet/dashboard\" : \"/add-account\" }/>\n      </Route>\n\n    </Switch>\n  </>)\n}\n\n// handles all the providers so that we can use provider hooks inside of AppInner\nexport default function App() {\n  return (\n    <Router>\n      <ToastProvider>\n        <ModalProvider>\n          <AppInner/>\n        </ModalProvider>\n      </ToastProvider>\n    </Router>\n  )\n}\n","import { useCallback } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport { useHistory } from 'react-router-dom'\n\nexport default function useAccounts (useStorage) {\n    const { addToast } = useToasts()\n    const history = useHistory()\n\n    const [accounts, setAccounts] = useStorage({\n      key: 'accounts',\n      defaultValue: [],\n      setInit: initialAccounts => {\n        if (!Array.isArray(initialAccounts)) {\n          console.error('accounts: incorrect format')\n\n          return []\n        }\n\n        return initialAccounts\n      }}\n    )\n    const [selectedAcc, setSelectedAcc] = useStorage({\n      key: 'selectedAcc',\n      defaultValue: '',\n      isStringStorage: true,\n      setInit: initialSelectedAcc => {\n        if (!initialSelectedAcc || !accounts.find(x => x.id === initialSelectedAcc)) {\n          return accounts[0] ? accounts[0].id : ''\n        }\n\n        return initialSelectedAcc\n    }})\n\n    const onSelectAcc = useCallback(selected => {\n      setSelectedAcc(selected)\n    }, [setSelectedAcc])\n    const onAddAccount = useCallback((acc, opts = {}) => {\n      if (!(acc.id && acc.signer)) throw new Error('account: internal err: missing ID or signer')\n\n      const existing = accounts.find(x => x.id.toLowerCase() === acc.id.toLowerCase())\n      if (existing) {\n        addToast(JSON.stringify(existing) === JSON.stringify(acc) ? 'Account already added' : 'Account updated')\n      } else if (opts.isNew) {\n        // @TODO consider something more explanatory such as \"using Trezor as a signer\", or \"this is different from your signer address\"\n        addToast(`New Ambire account created: ${acc.id}${acc.signer.address ? '. This is a fresh smart wallet address.' : ''}`, { timeout: acc.signer.address ? 15000 : 10000 })\n      }\n\n      const existingIdx = accounts.indexOf(existing)\n        if (existingIdx === -1) accounts.push(acc)\n      else accounts[existingIdx] = acc\n\n      // need to make a copy, otherwise no rerender\n      setAccounts([ ...accounts ])\n\n      if (opts.select) onSelectAcc(acc.id)\n      if (Object.keys(accounts).length) {\n        history.push('/wallet/dashboard')\n      }\n    }, [accounts, addToast, onSelectAcc, history, setAccounts])\n\n    const onRemoveAccount = useCallback(id => {\n      if (!id) throw new Error('account: internal err: missing ID/Address')\n\n      const account = accounts.find(account => account.id === id)\n      if (account && account.email && account.cloudBackupOptout && !account.downloadedBackup)\n        return addToast('You have opted out of Ambire Cloud Backup. Please backup your account before logging out.', { error: true, route: '/wallet/security' })\n\n      const clearedAccounts = accounts.filter(account => account.id !== id)\n      setAccounts([...clearedAccounts])\n\n      if (!clearedAccounts.length) history.push('/add-account')\n      else onSelectAcc(clearedAccounts[0].id)\n    }, [accounts, history, onSelectAcc, addToast, setAccounts])\n\n    return { accounts, selectedAcc, onSelectAcc, onAddAccount, onRemoveAccount }\n  }\n","import { useCallback } from 'react'\nimport networks from 'consts/networks'\n\nexport default function useNetwork ({ defaultNetwork = 'ethereum', useStorage } = {}) {\n    const [networkId, setNetworkId] = useStorage({\n        key: 'network',\n        defaultValue: defaultNetwork,\n        isStringStorage: true,\n        setInit: networkId => networks.find(n => n.id === networkId) ? networkId : defaultNetwork\n    })\n\n    const setNetwork = useCallback(networkIdentifier => {\n        const network = networks.find(n => n.id === networkIdentifier || n.name === networkIdentifier || n.chainId === networkIdentifier)\n        if (!network) throw new Error(`no network found: ${networkIdentifier}`)\n\n        setNetworkId(network.id)\n    }, [setNetworkId])\n\n    return {\n        setNetwork,\n        network: networks.find(n => n.id === networkId),\n        allNetworks: networks\n    }\n}\n","import {useCallback, useRef, useMemo} from 'react'\nimport {useToasts} from 'hooks/toasts'\n\nimport {Methods} from '@gnosis.pm/safe-apps-sdk'\nimport {GnosisConnector} from 'lib/GnosisConnector'\nimport { getProvider } from 'lib/provider'\n\nconst STORAGE_KEY = 'gnosis_safe_state'\n\nexport default function useGnosisSafe({selectedAccount, network, verbose = 0, useStorage}) {\n  // One connector at a time\n  const connector = useRef(null)\n\n  const uniqueId = useMemo(() => new Date().getTime() + ' ' + network.chainId + ' ' + selectedAccount, [selectedAccount, network])\n\n  const {addToast} = useToasts()\n\n  // This is needed cause of the Gnosis Safe event handlers (listeners)\n  const stateRef = useRef()\n  stateRef.current = {\n    selectedAccount,\n    network\n  }\n\n  const [requests, setRequests] = useStorage({\n    key: STORAGE_KEY,\n    defaultValue: [],\n    setInit: initialRequests => !Array.isArray(initialRequests) ? [] : initialRequests\n  })\n\n  const connect = useCallback(connectorOpts => {\n    verbose > 1 && console.log(\"GS: creating connector\")\n\n    try {\n      connector.current = new GnosisConnector(\n        connectorOpts.iframeRef,\n        connectorOpts.app,\n        uniqueId\n      )\n    } catch (e) {\n      addToast(`Unable to connect to ${connectorOpts.app.url}: ${e.message}`)\n      return null\n    }\n\n    // reply back to iframe with safe data\n    connector.current.on(Methods.getSafeInfo, () => {\n      return {\n        safeAddress: stateRef.current.selectedAccount,\n        network: stateRef.current.network.id,\n        chainId: stateRef.current.network.chainId,\n        owners: [stateRef.current.selectedAccount],\n        threshold: 1, //Number of confirmations (not used in ambire)\n      }\n    })\n\n    //reply back to iframe with safe data\n\n    // connector.current.on(Methods.getSafeBalances, async (msg) => {\n    //   verbose>0 && console.log(\"DApp requested getSafeBalances\") && console.log(msg)\n\n    //TODO later\n    //await portfolio.updatePortfolio(\"polygon\", selectedAccount, true)//not this because it does NOT return the updated state anyway\n    //console.log(portfolio)\n\n    //struct template\n    /*connector.current.on(Methods.getSafeBalances, () => {\n      return {\n        \"fiatTotal\": \"0.18072\",\n          \"items\": [\n          {\n            \"tokenInfo\": {\n              \"type\": \"NATIVE_TOKEN\",\n              \"address\": \"0x0000000000000000000000000000000000000000\",\n              \"decimals\": 18,\n              \"symbol\": \"MATIC\",\n              \"name\": \"Matic\",\n              \"logoUri\": \"https://safe-transaction-assets.staging.gnosisdev.com/chains/137/currency_logo.png\"\n            },\n            \"balance\": \"100000000000000000\",\n            \"fiatBalance\": \"0.18072\",\n            \"fiatConversion\": \"1.8072\"\n          }\n        ]\n      }\n     })*/\n\n    connector.current.on(Methods.rpcCall, async (msg) => {\n      verbose > 0 && console.log(\"DApp requested rpcCall\", msg)\n\n      if (!msg?.data?.params) {\n        throw new Error(\"invalid call object\")\n      }\n      const method = msg.data.params.call\n      const callTx = msg.data.params.params\n\n      const provider = getProvider(stateRef.current.network.id)\n      let result\n      if (method === \"eth_call\") {\n        result = await provider.call(callTx[0], callTx[1]).catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_getBalance\") {\n        result = await provider.getBalance(callTx[0], callTx[1]).catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_blockNumber\") {\n        result = await provider.getBlockNumber().catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_getBlockByNumber\" || method === \"eth_getBlockByHash\") {\n        if (callTx[1]) {\n          result = await provider.getBlockWithTransactions(callTx[0]).catch(err => {\n            throw err\n          })\n        } else {\n          result = await provider.getBlock(callTx[0]).catch(err => {\n            throw err\n          })\n        }\n      } else if (method === \"eth_getTransactionByHash\") {\n        result = await provider.getTransaction(callTx[0]).catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_getCode\") {\n        result = await provider.getCode(callTx[0], callTx[1]).catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_getBlockByNumber\") {\n        result = await provider.getBlock(callTx[0], callTx[1]).catch(err => {\n          throw err\n        })\n      } else if (method === \"eth_getTransactionReceipt\") {\n        result = await provider.getTransactionReceipt(callTx[0]).catch(err => {\n          throw err\n        })\n      //requires custom from calls from SDK but are not implemented in gnosis SDK\n      } else if (method === 'gs_multi_send' || method === 'ambire_sendBatchTransaction') {\n        //As future proof as possible (tested with a tweaked eth_call)\n        msg.data.params.txs = callTx[0]\n        await handleSendTransactions(msg).catch(err => {\n          throw err\n        })\n      } else if (method === 'personal_sign') {\n        result = await handlePersonalSign(msg).catch(err => {\n          throw err\n        })\n      } else {\n        throw new Error(\"method not supported \" + method)\n      }\n      return result\n    })\n\n    connector.current.on(Methods.sendTransactions, (msg) => {\n      handleSendTransactions(msg)\n    })\n\n    const handleSendTransactions = (msg) => {\n      verbose > 0 && console.log('DApp requested sendTx', msg)\n\n      const data = msg?.data\n      if (!data) {\n        console.error('GS: no data')\n        return\n      }\n\n      const txs = data?.params?.txs\n      if (txs?.length) {\n        for (let i in txs) {\n          if (!txs[i].from) txs[i].from = stateRef.current.selectedAccount\n        }\n      } else {\n        console.error('GS: no txs in received payload')\n        return\n      }\n\n      for (let ix in txs) {\n        const id = 'gs_' + data.id + ':' + ix\n        const request = {\n          id,\n          forwardId: msg.data.id,\n          type: 'eth_sendTransaction',\n          isBatch: txs.length > 1,\n          txn: txs[ix], //if anyone finds a dapp that sends a bundle, please reach me out\n          chainId: stateRef.current.network.chainId,\n          account: stateRef.current.selectedAccount\n        }\n        //is reducer really needed here?\n        setRequests(prevRequests => prevRequests.find(x => x.id === request.id) ? prevRequests : [...prevRequests, request])\n      }\n    }\n\n    const handlePersonalSign = (msg) => {\n      verbose > 0 && console.log('DApp requested signMessage', msg)\n\n      const data = msg?.data\n      if (!data) {\n        console.error('GS: no data')\n        return\n      }\n\n      const id = 'gs_' + data.id\n      const message = data?.params?.message\n      if (!message) {\n        console.error('GS: no message in received payload')\n        return\n      }\n\n      const request = {\n        id,\n        forwardId: msg.data.id,\n        type: 'personal_sign',\n        txn: message,\n        chainId: stateRef.current.network.chainId,\n        account: stateRef.current.selectedAccount\n      }\n\n      setRequests(prevRequests => prevRequests.find(x => x.id === request.id) ? prevRequests : [...prevRequests, request])\n    }\n\n    connector.current.on(Methods.signMessage, (msg) => handlePersonalSign(msg))\n\n    connector.current.on(Methods.getTxBySafeTxHash, async (msg) => {\n      const {safeTxHash} = msg.data.params\n      const provider = getProvider(stateRef.current.network.id)\n      try {\n        const res = await provider.getTransaction(safeTxHash)\n\n        return res\n      } catch (e) {\n        console.error(\"GS: Err getting transaction \" + safeTxHash)\n        console.log(e)\n        return {}\n      }\n    })\n  }, [uniqueId, addToast, verbose, setRequests])\n\n\n  const disconnect = useCallback(() => {\n    verbose > 1 && console.log(\"GS: disconnecting connector\")\n    connector.current?.clear()\n  }, [verbose])\n\n\n  const resolveMany = (ids, resolution) => {\n    for (let req of requests.filter(x => ids.includes(x.id))) {\n      if (!req.isBatch || req.id.endsWith(':0')) {\n        const replyData = {\n          id: req.forwardId,\n          success: null,\n          txId: null,\n          error: null\n        }\n        if (!resolution) {\n          replyData.error = 'Nothing to resolve'\n          replyData.success = false\n        } else if (!resolution.success) {\n          replyData.error = resolution.message\n          replyData.success = false\n        } else { //onSuccess\n          replyData.success = true\n          replyData.txId = resolution.result\n          replyData.safeTxHash = resolution.result\n        }\n        if (!connector.current) {\n          //soft error handling: sendTransaction has issues\n          //throw new Error(\"gnosis safe connector not set\")\n          console.error('gnosis safe connector not set')\n        } else {\n          console.log('gnosis reply', replyData)\n          connector.current.send(replyData, req.forwardId, replyData.error)\n        }\n      }\n    }\n\n    setRequests(prevRequests => prevRequests.filter(x => !ids.includes(x.id)))\n  }\n\n  return {\n    requests,\n    resolveMany,\n    connect,\n    disconnect\n  }\n}\n","export default function usePrivateMode(useStorage) {\n    const [ isPrivateMode, setIsPrivateMode ] = useStorage({ key: 'isPrivateMode' })\n\n    const togglePrivateMode = () => {\n        setIsPrivateMode(!isPrivateMode)\n    }\n\n    const hidePrivateValue = (value) => isPrivateMode ?\n\t\t(typeof value === 'string' && value.startsWith('0x') ? value.replace(/./gi, '*') : '**')\n\t\t: value;\n    const hidePrivateContent = (content) => isPrivateMode ? <div className='private-content'>{content}</div> : content;\n\n    return {\n        isPrivateMode,\n        hidePrivateValue,\n        hidePrivateContent,\n        togglePrivateMode\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}